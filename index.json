{
  "api/Platform.Helpers.Collections.html": {
    "href": "api/Platform.Helpers.Collections.html",
    "title": "Namespace Platform.Helpers.Collections | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Collections Classes ICollectionExtensions IDictionaryExtensions SetExtensions StringExtensions"
  },
  "api/Platform.Examples.html": {
    "href": "api/Platform.Examples.html",
    "title": "Namespace Platform.Examples | LinksPlatform",
    "keywords": "Namespace Platform.Examples Classes CSVExporter CSVExporterCLI<TExporter> CSVSequencesExporter FileIndexer FileIndexerCLI GEXFCSVExporterCLI GEXFExporter<TLink> MasterServer MasterServerCLI TerminalCLI WikipediaImporterCLI WikipediaLinksStorage WikipediaPagesCounter WikipediaPagesCounterCLI XUnitTestsRunnerCLI Interfaces ICommandLineInterface IWikipediaStorage<TLink>"
  },
  "api/Platform.Examples.XUnitTestsRunnerCLI.html": {
    "href": "api/Platform.Examples.XUnitTestsRunnerCLI.html",
    "title": "Class XUnitTestsRunnerCLI | LinksPlatform",
    "keywords": "Class XUnitTestsRunnerCLI Inheritance System.Object XUnitTestsRunnerCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class XUnitTestsRunnerCLI : ICommandLineInterface Remarks Based on https://github.com/xunit/samples.xunit/blob/master/TestRunner/Program.cs Constructors XUnitTestsRunnerCLI() Declaration public XUnitTestsRunnerCLI() Properties Succeed Declaration public bool Succeed { get; } Property Value Type Description System.Boolean Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Data.Core.Triplets.CharacterHelpers.html": {
    "href": "api/Platform.Data.Core.Triplets.CharacterHelpers.html",
    "title": "Class CharacterHelpers | LinksPlatform",
    "keywords": "Class CharacterHelpers Inheritance System.Object CharacterHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class CharacterHelpers Methods FromChar(Char) Declaration public static Link FromChar(char character) Parameters Type Name Description System.Char character Returns Type Description Link IsChar(Link) Declaration public static bool IsChar(Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean Recreate() Declaration public static void Recreate() ToChar(Link) Declaration public static char ToChar(Link link) Parameters Type Name Description Link link Returns Type Description System.Char"
  },
  "api/Platform.Data.Core.Triplets.CharacterHelpers.CharacterMapping.html": {
    "href": "api/Platform.Data.Core.Triplets.CharacterHelpers.CharacterMapping.html",
    "title": "Enum CharacterHelpers.CharacterMapping | LinksPlatform",
    "keywords": "Enum CharacterHelpers.CharacterMapping Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public enum CharacterMapping : long Fields Name Description CyrillicAlphabet LatinAlphabet"
  },
  "api/Platform.Data.Core.Sequences.html": {
    "href": "api/Platform.Data.Core.Sequences.html",
    "title": "Namespace Platform.Data.Core.Sequences | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Sequences Classes BalancedVariantConverter<TLink> CachedSequenceHeightProvider<TLink> CompressingConverter<TLink> DefaultSequenceAppender<TLink> DefaultSequenceRightHeightProvider<TLink> DuplicateSegmentsCounter<TLink> DuplicateSegmentsProvider<TLink> LeftSequenceWalker<TLink> LinksListToSequenceConverterBase<TLink> MarkedSequenceMatcher<TLink> OptimalVariantConverter<TLink> RightSequenceWalker<TLink> Sequences Представляет коллекцию последовательностей связей. Sequences.Matcher Sequences.PatternMatcher SequencesExtensions SequencesIndexer<TLink> SequenceToItsLocalElementLevelsConverter<TLink> SequenceWalker SequenceWalkerBase<TLink> StopableSequenceWalker UnicodeMap Structs SequencesOptions<TLink> Interfaces ISequenceAppender<TLink> ISequenceHeightProvider<TLink> ISequences<TLink> ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Core.Sequences.UnicodeMap.html": {
    "href": "api/Platform.Data.Core.Sequences.UnicodeMap.html",
    "title": "Class UnicodeMap | LinksPlatform",
    "keywords": "Class UnicodeMap Inheritance System.Object UnicodeMap Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class UnicodeMap Constructors UnicodeMap(ILinks<UInt64>) Declaration public UnicodeMap(ILinks<ulong> links) Parameters Type Name Description ILinks < System.UInt64 > links Fields FirstCharLink Declaration public const ulong FirstCharLink = 1UL Field Value Type Description System.UInt64 LastCharLink Declaration public const ulong LastCharLink = 65536UL Field Value Type Description System.UInt64 MapSize Declaration public const long MapSize = 65536L Field Value Type Description System.Int64 Methods FromCharsToLinkArray(Char[]) Declaration public static ulong[] FromCharsToLinkArray(char[] chars) Parameters Type Name Description System.Char [] chars Returns Type Description System.UInt64 [] FromCharsToLinkArray(Char[], Int32) Declaration public static ulong[] FromCharsToLinkArray(char[] chars, int count) Parameters Type Name Description System.Char [] chars System.Int32 count Returns Type Description System.UInt64 [] FromCharToLink(Char) Declaration public static ulong FromCharToLink(char character) Parameters Type Name Description System.Char character Returns Type Description System.UInt64 FromLinkArrayToLinkArrayGroups(UInt64[]) Declaration public static List<ulong[]> FromLinkArrayToLinkArrayGroups(ulong[] array) Parameters Type Name Description System.UInt64 [] array Returns Type Description List < System.UInt64 []> FromLinksToString(IList<UInt64>) Declaration public static string FromLinksToString(IList<ulong> linksList) Parameters Type Name Description IList < System.UInt64 > linksList Returns Type Description System.String FromLinkToChar(UInt64) Declaration public static char FromLinkToChar(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description System.Char FromSequenceLinkToString(UInt64, ILinks<UInt64>) Declaration public static string FromSequenceLinkToString(ulong link, ILinks<ulong> links) Parameters Type Name Description System.UInt64 link ILinks < System.UInt64 > links Returns Type Description System.String FromStringToLinkArray(String) Declaration public static ulong[] FromStringToLinkArray(string sequence) Parameters Type Name Description System.String sequence Returns Type Description System.UInt64 [] FromStringToLinkArrayGroups(String) Declaration public static List<ulong[]> FromStringToLinkArrayGroups(string sequence) Parameters Type Name Description System.String sequence Returns Type Description List < System.UInt64 []> Init() Declaration public void Init() InitNew(ILinks<UInt64>) Declaration public static UnicodeMap InitNew(ILinks<ulong> links) Parameters Type Name Description ILinks < System.UInt64 > links Returns Type Description UnicodeMap IsCharLink(UInt64) Declaration public static bool IsCharLink(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.html",
    "title": "Class UInt64LinksTransactionsLayer | LinksPlatform",
    "keywords": "Class UInt64LinksTransactionsLayer Inheritance System.Object LinksDisposableDecoratorBase < System.UInt64 > UInt64LinksTransactionsLayer Implements ILinks < System.UInt64 > Inherited Members LinksDisposableDecoratorBase<UInt64>.Constants LinksDisposableDecoratorBase<UInt64>.Links LinksDisposableDecoratorBase<UInt64>.Count(IList<UInt64>) LinksDisposableDecoratorBase<UInt64>.Each(Func<IList<UInt64>, UInt64>, IList<UInt64>) LinksDisposableDecoratorBase<UInt64>.AllowMultipleDisposeCalls Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UInt64LinksTransactionsLayer : LinksDisposableDecoratorBase<ulong>, ILinks<ulong> Constructors UInt64LinksTransactionsLayer(ILinks<UInt64>, String) Declaration public UInt64LinksTransactionsLayer(ILinks<ulong> links, string logAddress) Parameters Type Name Description ILinks < System.UInt64 > links System.String logAddress Methods BeginTransaction() Declaration public UInt64LinksTransactionsLayer.Transaction BeginTransaction() Returns Type Description UInt64LinksTransactionsLayer.Transaction Create() Declaration public override ulong Create() Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Create() Delete(UInt64) Declaration public override void Delete(ulong link) Parameters Type Name Description System.UInt64 link Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Delete(System.UInt64) DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.DisposeCore(System.Boolean, System.Boolean) GetLinkValue(UInt64) Declaration public IList<ulong> GetLinkValue(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description IList < System.UInt64 > Update(IList<UInt64>) Declaration public override ulong Update(IList<ulong> parts) Parameters Type Name Description IList < System.UInt64 > parts Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Update(IList<System.UInt64>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.Transition.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.Transition.html",
    "title": "Struct UInt64LinksTransactionsLayer.Transition | LinksPlatform",
    "keywords": "Struct UInt64LinksTransactionsLayer.Transition Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public struct Transition Constructors Transition(UniqueTimestampFactory, UInt64, UInt64Link, UInt64Link) Declaration public Transition(UniqueTimestampFactory uniqueTimestampFactory, ulong transactionId, UInt64Link before = default(UInt64Link), UInt64Link after = default(UInt64Link)) Parameters Type Name Description UniqueTimestampFactory uniqueTimestampFactory System.UInt64 transactionId UInt64Link before UInt64Link after Fields After Declaration public UInt64Link After Field Value Type Description UInt64Link Before Declaration public UInt64Link Before Field Value Type Description UInt64Link Size Declaration public static readonly long Size Field Value Type Description System.Int64 Timestamp Declaration public Timestamp Timestamp Field Value Type Description Timestamp TransactionId Declaration public ulong TransactionId Field Value Type Description System.UInt64 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.Transaction.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.Transaction.html",
    "title": "Class UInt64LinksTransactionsLayer.Transaction | LinksPlatform",
    "keywords": "Class UInt64LinksTransactionsLayer.Transaction Inheritance System.Object UInt64LinksTransactionsLayer.Transaction Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class Transaction : DisposableBase Remarks Другие варианты реализации транзакций (атомарности): Разделение хранения значения связи ((Source Target) или (Source Linker Target)) и индексов. Хранение трансформаций/операций в отдельном хранилище Links, но дополнительно потребуется решить вопрос со ссылками на внешние идентификаторы, или как-то иначе решить вопрос с пересечениями идентификаторов. Где хранить промежуточный список транзакций? В оперативной памяти: Минусы: Может усложнить систему, если она будет функционировать самостоятельно, так как нужно отдельно выделять память под список трансформаций. Выделенной оперативной памяти может не хватить, в том случае, если транзакция использует слишком много трансформаций. -> Можно использовать жёсткий диск для слишком длинных транзакций. -> Максимальный размер списка трансформаций можно ограничить / задать константой. При подтверждении транзакции (Commit) все трансформации записываются разом создавая задержку. На жёстком диске: Минусы: Длительный отклик, на запись каждой трансформации. Лог транзакций дополнительно наполняется отменёнными транзакциями. -> Это может решаться упаковкой/исключением дублирующих операций. -> Также это может решаться тем, что короткие транзакции вообще не будут записываться в случае отката. Перед тем как выполнять отмену операций транзакции нужно дождаться пока все операции (трансформации) будут записаны в лог. Constructors Transaction(UInt64LinksTransactionsLayer) Declaration public Transaction(UInt64LinksTransactionsLayer layer) Parameters Type Name Description UInt64LinksTransactionsLayer layer Properties IsCommitted Declaration public bool IsCommitted { get; } Property Value Type Description System.Boolean IsReverted Declaration public bool IsReverted { get; } Property Value Type Description System.Boolean Methods Commit() Declaration public void Commit() DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed EnsureTransactionAllowsWriteOperations(UInt64LinksTransactionsLayer.Transaction) Declaration public static void EnsureTransactionAllowsWriteOperations(UInt64LinksTransactionsLayer.Transaction transaction) Parameters Type Name Description UInt64LinksTransactionsLayer.Transaction transaction SetCurrentTransaction(UInt64LinksTransactionsLayer, UInt64LinksTransactionsLayer.Transaction) Declaration public static void SetCurrentTransaction(UInt64LinksTransactionsLayer layer, UInt64LinksTransactionsLayer.Transaction transaction) Parameters Type Name Description UInt64LinksTransactionsLayer layer UInt64LinksTransactionsLayer.Transaction transaction"
  },
  "api/Platform.Data.Core.Doublets.UInt64Links.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64Links.html",
    "title": "Class UInt64Links | LinksPlatform",
    "keywords": "Class UInt64Links Представляет объект для работы с базой данных (файлом) в формате Links (массива взаимосвязей). Inheritance System.Object LinksDisposableDecoratorBase < System.UInt64 > UInt64Links Implements ILinks < System.UInt64 > Inherited Members LinksDisposableDecoratorBase<UInt64>.Constants LinksDisposableDecoratorBase<UInt64>.Links LinksDisposableDecoratorBase<UInt64>.Count(IList<UInt64>) LinksDisposableDecoratorBase<UInt64>.AllowMultipleDisposeCalls LinksDisposableDecoratorBase<UInt64>.DisposeCore(Boolean, Boolean) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UInt64Links : LinksDisposableDecoratorBase<ulong>, ILinks<ulong> Remarks Возможные оптимизации: Объединение в одном поле Source и Target с уменьшением до 32 бит. меньше объём БД меньше производительность больше ограничение на количество связей в БД) Ленивое хранение размеров поддеревьев (расчитываемое по мере использования БД) меньше объём БД больше сложность AVL - высота дерева может позволить точно расчитать размер дерева, нет необходимости в SBT. AVL дерево можно прошить. Текущее теоретическое ограничение на размер связей - long.MaxValue Желательно реализовать поддержку переключения между деревьями и битовыми индексами (битовыми строками) - вариант матрицы (выстраеваемой лениво). Решить отключать ли проверки при компиляции под Release. Т.е. исключения будут выбрасываться только при #if DEBUG Constructors UInt64Links(ILinks<UInt64>) Declaration public UInt64Links(ILinks<ulong> links) Parameters Type Name Description ILinks < System.UInt64 > links Methods Create() Declaration public override ulong Create() Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Create() Delete(UInt64) Удаляет связь с указанным индексом. Declaration public override void Delete(ulong link) Parameters Type Name Description System.UInt64 link Индекс удаляемой связи. Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Delete(System.UInt64) Each(Func<IList<UInt64>, UInt64>, IList<UInt64>) Declaration public override ulong Each(Func<IList<ulong>, ulong> handler, IList<ulong> restrictions) Parameters Type Name Description Func < IList < System.UInt64 >, System.UInt64 > handler IList < System.UInt64 > restrictions Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Each(Func<IList<System.UInt64>, System.UInt64>, IList<System.UInt64>) Update(IList<UInt64>) Declaration public override ulong Update(IList<ulong> restrictions) Parameters Type Name Description IList < System.UInt64 > restrictions Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Update(IList<System.UInt64>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Sequences.SequencesIndexer-1.html": {
    "href": "api/Platform.Data.Core.Sequences.SequencesIndexer-1.html",
    "title": "Class SequencesIndexer<TLink> | LinksPlatform",
    "keywords": "Class SequencesIndexer<TLink> Inheritance System.Object SequencesIndexer<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class SequencesIndexer<TLink> Type Parameters Name Description TLink Constructors SequencesIndexer(ISynchronizedLinks<TLink>) Declaration public SequencesIndexer(ISynchronizedLinks<TLink> links) Parameters Type Name Description ISynchronizedLinks <TLink> links Methods BulkIndex(TLink[]) Declaration public bool BulkIndex(TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description System.Boolean BulkIndexUnsync(TLink[]) Declaration public bool BulkIndexUnsync(TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description System.Boolean CheckIndex(IList<TLink>) Declaration public bool CheckIndex(IList<TLink> sequence) Parameters Type Name Description IList <TLink> sequence Returns Type Description System.Boolean Index(TLink[]) Индексирует последовательность глобально, и возвращает значение, определяющие была ли запрошенная последовательность проиндексирована ранее. Declaration public bool Index(TLink[] sequence) Parameters Type Name Description TLink[] sequence Последовательность для индексации. Returns Type Description System.Boolean True если последовательность уже была проиндексирована ранее и False если последовательность была проиндексирована только что."
  },
  "api/Platform.Data.Core.Sequences.SequencesExtensions.html": {
    "href": "api/Platform.Data.Core.Sequences.SequencesExtensions.html",
    "title": "Class SequencesExtensions | LinksPlatform",
    "keywords": "Class SequencesExtensions Inheritance System.Object SequencesExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public static class SequencesExtensions Methods Create<TLink>(ISequences<TLink>, IList<TLink[]>) Declaration public static TLink Create<TLink>(this ISequences<TLink> sequences, IList<TLink[]> groupedSequence) Parameters Type Name Description ISequences <TLink> sequences IList <TLink[]> groupedSequence Returns Type Description TLink Type Parameters Name Description TLink"
  },
  "api/Platform.Data.Core.Sequences.Sequences.html": {
    "href": "api/Platform.Data.Core.Sequences.Sequences.html",
    "title": "Class Sequences | LinksPlatform",
    "keywords": "Class Sequences Представляет коллекцию последовательностей связей. Inheritance System.Object Sequences Implements ISequences < System.UInt64 > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class Sequences : ISequences<ulong> Remarks Обязательно реализовать атомарность каждого публичного метода. TODO: !!! Повышение вероятности повторного использования групп (подпоследовательностей), через естественную группировку по unicode типам, все whitespace вместе, все символы вместе, все числа вместе и т.п. использовать ровно сбалансированный вариант, чтобы уменьшать вложенность (глубину графа) x*y - найти все связи между, в последовательностях любой формы, если не стоит ограничитель на то, что является последовательностью, а что нет, то находятся любые структуры связей, которые содержат эти элементы именно в таком порядке. Рост последовательности слева и справа. Поиск со звёздочкой. URL, PURL - реестр используемых во вне ссылок на ресурсы, так же проблема может быть решена при реализации дистанционных триггеров. Нужны ли уникальные указатели вообще? Что если обращение к информации будет происходить через содержимое всегда? Писать тесты. Можно убрать зависимость от конкретной реализации Links, на зависимость от абстрактного элемента, который может быть представлен несколькими способами. Можно ли как-то сделать один общий интерфейс Блокчейн и/или гит для распределённой записи транзакций. Constructors Sequences(SynchronizedLinks<UInt64>) Declaration public Sequences(SynchronizedLinks<ulong> links) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links Sequences(SynchronizedLinks<UInt64>, SequencesOptions<UInt64>) Declaration public Sequences(SynchronizedLinks<ulong> links, SequencesOptions<ulong> options) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links SequencesOptions < System.UInt64 > options Fields Links Declaration public readonly SynchronizedLinks<ulong> Links Field Value Type Description SynchronizedLinks < System.UInt64 > MaxSequenceFormatSize Declaration public const int MaxSequenceFormatSize = 200 Field Value Type Description System.Int32 Options Declaration public SequencesOptions<ulong> Options Field Value Type Description SequencesOptions < System.UInt64 > Sync Declaration public readonly ISynchronization Sync Field Value Type Description ISynchronization ZeroOrMany Возвращает значение ulong, обозначающее любое количество связей. Declaration public const ulong ZeroOrMany = 18446744073709551615UL Field Value Type Description System.UInt64 Methods AllBottomUsages(UInt64) Declaration public HashSet<ulong> AllBottomUsages(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description HashSet < System.UInt64 > AllUsages(UInt64) Declaration public HashSet<ulong> AllUsages(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description HashSet < System.UInt64 > Remarks TODO: Может потробоваться ограничение на уровень глубины рекурсии CalculateAllUsages(UInt64[]) Declaration public void CalculateAllUsages(ulong[] totals) Parameters Type Name Description System.UInt64 [] totals CalculateAllUsages2(UInt64[]) Declaration public void CalculateAllUsages2(ulong[] totals) Parameters Type Name Description System.UInt64 [] totals CalculateTotalSymbolFrequencyCore(UInt64) Declaration public ulong CalculateTotalSymbolFrequencyCore(ulong symbol) Parameters Type Name Description System.UInt64 symbol Returns Type Description System.UInt64 CollectMatchingSequences(UInt64[]) Declaration public List<ulong> CollectMatchingSequences(ulong[] links) Parameters Type Name Description System.UInt64 [] links Returns Type Description List < System.UInt64 > Compact(UInt64[]) Declaration public ulong Compact(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 Remarks bestVariant можно выбирать по максимальному числу использований, но балансированный позволяет гарантировать уникальность (если есть возможность, гарантировать его использование в других местах). Получается этот метод должен игнорировать Options.EnforceSingleSequenceVersionOnWrite Count(UInt64[]) Declaration public ulong Count(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 Create(UInt64[]) Declaration public ulong Create(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 CreateAllVariants1(UInt64[]) Declaration public List<ulong> CreateAllVariants1(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description List < System.UInt64 > CreateAllVariants2(UInt64[]) Declaration public ulong[] CreateAllVariants2(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Number of links that is needed to generate all variants for sequence of length N corresponds to https://oeis.org/A014143/list sequence. Delete(UInt64[]) Declaration public void Delete(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Each(Func<UInt64, Boolean>, IList<UInt64>) Declaration public bool Each(Func<ulong, bool> handler, IList<ulong> sequence) Parameters Type Name Description Func < System.UInt64 , System.Boolean > handler IList < System.UInt64 > sequence Returns Type Description System.Boolean Each(UInt64[]) Declaration public List<ulong> Each(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description List < System.UInt64 > Each1(UInt64[]) Declaration public HashSet<ulong> Each1(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > EachPart(Func<UInt64, Boolean>, UInt64) Declaration public bool EachPart(Func<ulong, bool> handler, ulong sequence) Parameters Type Name Description Func < System.UInt64 , System.Boolean > handler System.UInt64 sequence Returns Type Description System.Boolean EachPart(Func<UInt64, Boolean>, UInt64[]) Declaration public void EachPart(Func<ulong, bool> handler, params ulong[] sequence) Parameters Type Name Description Func < System.UInt64 , System.Boolean > handler System.UInt64 [] sequence EachPart(UInt64[]) Declaration public HashSet<ulong> EachPart(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > FormatSequence(LinkIndex, Action<StringBuilder, LinkIndex>, Boolean, LinkIndex[]) Declaration public string FormatSequence(LinkIndex sequenceLink, Action<StringBuilder, LinkIndex> elementToString, bool insertComma, params LinkIndex[] knownElements) Parameters Type Name Description LinkIndex sequenceLink Action < StringBuilder , LinkIndex > elementToString System.Boolean insertComma LinkIndex [] knownElements Returns Type Description System.String FormatSequence(LinkIndex, LinkIndex[]) Declaration public string FormatSequence(LinkIndex sequenceLink, params LinkIndex[] knownElements) Parameters Type Name Description LinkIndex sequenceLink LinkIndex [] knownElements Returns Type Description System.String GetAllConnections(UInt64[]) Declaration public HashSet<ulong> GetAllConnections(params ulong[] linksToConnect) Parameters Type Name Description System.UInt64 [] linksToConnect Returns Type Description HashSet < System.UInt64 > GetAllConnections1(UInt64[]) Declaration public HashSet<ulong> GetAllConnections1(params ulong[] linksToConnect) Parameters Type Name Description System.UInt64 [] linksToConnect Returns Type Description HashSet < System.UInt64 > GetAllConnections2(UInt64[]) Declaration public HashSet<ulong> GetAllConnections2(params ulong[] linksToConnect) Parameters Type Name Description System.UInt64 [] linksToConnect Returns Type Description HashSet < System.UInt64 > GetAllConnections3(UInt64[]) Declaration public List<ulong> GetAllConnections3(params ulong[] linksToConnect) Parameters Type Name Description System.UInt64 [] linksToConnect Returns Type Description List < System.UInt64 > GetAllMatchingSequences0(UInt64[]) Declaration public List<ulong> GetAllMatchingSequences0(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description List < System.UInt64 > GetAllMatchingSequences1(UInt64[]) Declaration public HashSet<ulong> GetAllMatchingSequences1(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > GetAllPartiallyMatchingSequences(UInt64[]) Declaration public List<ulong> GetAllPartiallyMatchingSequences(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description List < System.UInt64 > GetAllPartiallyMatchingSequences0(UInt64[]) Declaration public List<ulong> GetAllPartiallyMatchingSequences0(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description List < System.UInt64 > GetAllPartiallyMatchingSequences1(UInt64[]) Declaration public HashSet<ulong> GetAllPartiallyMatchingSequences1(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > GetAllPartiallyMatchingSequences2(Func<UInt64, Boolean>, UInt64[]) Declaration public bool GetAllPartiallyMatchingSequences2(Func<ulong, bool> handler, params ulong[] sequence) Parameters Type Name Description Func < System.UInt64 , System.Boolean > handler System.UInt64 [] sequence Returns Type Description System.Boolean GetAllPartiallyMatchingSequences3(UInt64[]) Declaration public HashSet<ulong> GetAllPartiallyMatchingSequences3(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > GetAllPartiallyMatchingSequences4(HashSet<UInt64>, IList<UInt64>) Declaration public HashSet<ulong> GetAllPartiallyMatchingSequences4(HashSet<ulong> readAsElements, IList<ulong> sequence) Parameters Type Name Description HashSet < System.UInt64 > readAsElements IList < System.UInt64 > sequence Returns Type Description HashSet < System.UInt64 > GetAllPartiallyMatchingSequences5(HashSet<UInt64>, UInt64[]) Declaration public HashSet<ulong> GetAllPartiallyMatchingSequences5(HashSet<ulong> readAsElements, params ulong[] sequence) Parameters Type Name Description HashSet < System.UInt64 > readAsElements System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > GetLeftElements(UInt64, UInt64) Declaration public ulong[] GetLeftElements(ulong startLink, ulong leftLink) Parameters Type Name Description System.UInt64 startLink System.UInt64 leftLink Returns Type Description System.UInt64 [] GetRightElements(UInt64, UInt64) Declaration public ulong[] GetRightElements(ulong startLink, ulong rightLink) Parameters Type Name Description System.UInt64 startLink System.UInt64 rightLink Returns Type Description System.UInt64 [] GetSimilarSequences() Declaration public List<ulong> GetSimilarSequences() Returns Type Description List < System.UInt64 > IsSequence(UInt64) Declaration public bool IsSequence(ulong sequence) Parameters Type Name Description System.UInt64 sequence Returns Type Description System.Boolean MatchPattern(UInt64[]) Declaration public HashSet<ulong> MatchPattern(params ulong[] patternSequence) Parameters Type Name Description System.UInt64 [] patternSequence Returns Type Description HashSet < System.UInt64 > Prediction() Declaration public void Prediction() ReadSequenceCore(UInt64, Func<UInt64, Boolean>) Declaration public ulong[] ReadSequenceCore(ulong sequence, Func<ulong, bool> isElement) Parameters Type Name Description System.UInt64 sequence Func < System.UInt64 , System.Boolean > isElement Returns Type Description System.UInt64 [] SafeFormatSequence(LinkIndex, Action<StringBuilder, LinkIndex>, Boolean, LinkIndex[]) Declaration public string SafeFormatSequence(LinkIndex sequenceLink, Action<StringBuilder, LinkIndex> elementToString, bool insertComma, params LinkIndex[] knownElements) Parameters Type Name Description LinkIndex sequenceLink Action < StringBuilder , LinkIndex > elementToString System.Boolean insertComma LinkIndex [] knownElements Returns Type Description System.String SafeFormatSequence(LinkIndex, LinkIndex[]) Declaration public string SafeFormatSequence(LinkIndex sequenceLink, params LinkIndex[] knownElements) Parameters Type Name Description LinkIndex sequenceLink LinkIndex [] knownElements Returns Type Description System.String TestSimplify() Declaration public static void TestSimplify() TryStepLeft(UInt64, UInt64, UInt64[], Int32) Declaration public bool TryStepLeft(ulong startLink, ulong leftLink, ulong[] result, int offset) Parameters Type Name Description System.UInt64 startLink System.UInt64 leftLink System.UInt64 [] result System.Int32 offset Returns Type Description System.Boolean TryStepRight(UInt64, UInt64, UInt64[], Int32) Declaration public bool TryStepRight(ulong startLink, ulong rightLink, ulong[] result, int offset) Parameters Type Name Description System.UInt64 startLink System.UInt64 rightLink System.UInt64 [] result System.Int32 offset Returns Type Description System.Boolean Update(UInt64[], UInt64[]) Declaration public ulong Update(ulong[] sequence, ulong[] newSequence) Parameters Type Name Description System.UInt64 [] sequence System.UInt64 [] newSequence Returns Type Description System.UInt64 Implements ISequences<TLink>"
  },
  "api/Platform.Data.Core.Sequences.Sequences.PatternMatcher.html": {
    "href": "api/Platform.Data.Core.Sequences.Sequences.PatternMatcher.html",
    "title": "Class Sequences.PatternMatcher | LinksPlatform",
    "keywords": "Class Sequences.PatternMatcher Inheritance System.Object SequenceWalkerBase < System.UInt64 > RightSequenceWalker < System.UInt64 > Sequences.PatternMatcher Implements ISequenceWalker < System.UInt64 > Inherited Members RightSequenceWalker<UInt64>.GetNextElementAfterPop(IList<UInt64>) RightSequenceWalker<UInt64>.GetNextElementAfterPush(IList<UInt64>) RightSequenceWalker<UInt64>.WalkContents(IList<UInt64>) SequenceWalkerBase<UInt64>.Walk(UInt64) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class PatternMatcher : RightSequenceWalker<ulong>, ISequenceWalker<ulong> Constructors PatternMatcher(Sequences, LinkIndex[], HashSet<LinkIndex>) Declaration public PatternMatcher(Sequences sequences, LinkIndex[] patternSequence, HashSet<LinkIndex> results) Parameters Type Name Description Sequences sequences LinkIndex [] patternSequence HashSet < LinkIndex > results Methods AddAllPatternMatchedToResults(IEnumerable<UInt64>) Declaration public void AddAllPatternMatchedToResults(IEnumerable<ulong> sequencesToMatch) Parameters Type Name Description IEnumerable < System.UInt64 > sequencesToMatch IsElement(IList<UInt64>) Declaration protected override bool IsElement(IList<ulong> link) Parameters Type Name Description IList < System.UInt64 > link Returns Type Description System.Boolean Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<System.UInt64>.IsElement(IList<System.UInt64>) PatternMatch(LinkIndex) Declaration public bool PatternMatch(LinkIndex sequenceToMatch) Parameters Type Name Description LinkIndex sequenceToMatch Returns Type Description System.Boolean Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Core.Sequences.Sequences.Matcher.html": {
    "href": "api/Platform.Data.Core.Sequences.Sequences.Matcher.html",
    "title": "Class Sequences.Matcher | LinksPlatform",
    "keywords": "Class Sequences.Matcher Inheritance System.Object SequenceWalkerBase < System.UInt64 > RightSequenceWalker < System.UInt64 > Sequences.Matcher Implements ISequenceWalker < System.UInt64 > Inherited Members RightSequenceWalker<UInt64>.GetNextElementAfterPop(IList<UInt64>) RightSequenceWalker<UInt64>.GetNextElementAfterPush(IList<UInt64>) RightSequenceWalker<UInt64>.WalkContents(IList<UInt64>) SequenceWalkerBase<UInt64>.Walk(UInt64) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class Matcher : RightSequenceWalker<ulong>, ISequenceWalker<ulong> Constructors Matcher(Sequences, IList<LinkIndex>, HashSet<LinkIndex>, Func<LinkIndex, Boolean>, HashSet<LinkIndex>) Declaration public Matcher(Sequences sequences, IList<LinkIndex> patternSequence, HashSet<LinkIndex> results, Func<LinkIndex, bool> stopableHandler, HashSet<LinkIndex> readAsElements = null) Parameters Type Name Description Sequences sequences IList < LinkIndex > patternSequence HashSet < LinkIndex > results Func < LinkIndex , System.Boolean > stopableHandler HashSet < LinkIndex > readAsElements Methods AddAllPartialMatchedToResults(IEnumerable<UInt64>) Declaration public void AddAllPartialMatchedToResults(IEnumerable<ulong> sequencesToMatch) Parameters Type Name Description IEnumerable < System.UInt64 > sequencesToMatch AddAllPartialMatchedToResultsAndReadAsElements(IEnumerable<UInt64>) Declaration public void AddAllPartialMatchedToResultsAndReadAsElements(IEnumerable<ulong> sequencesToMatch) Parameters Type Name Description IEnumerable < System.UInt64 > sequencesToMatch AddFullMatchedToResults(UInt64) Declaration public void AddFullMatchedToResults(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch AddPartialMatchedToResults(UInt64) Declaration public void AddPartialMatchedToResults(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch FullMatch(LinkIndex) Declaration public bool FullMatch(LinkIndex sequenceToMatch) Parameters Type Name Description LinkIndex sequenceToMatch Returns Type Description System.Boolean HandleFullMatched(UInt64) Declaration public bool HandleFullMatched(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch Returns Type Description System.Boolean HandleFullMatchedSequence(UInt64) Declaration public bool HandleFullMatchedSequence(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch Returns Type Description System.Boolean HandlePartialMatched(UInt64) Declaration public bool HandlePartialMatched(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch Returns Type Description System.Boolean IsElement(IList<UInt64>) Declaration protected override bool IsElement(IList<ulong> link) Parameters Type Name Description IList < System.UInt64 > link Returns Type Description System.Boolean Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<System.UInt64>.IsElement(IList<System.UInt64>) PartialMatch(LinkIndex) Declaration public bool PartialMatch(LinkIndex sequenceToMatch) Parameters Type Name Description LinkIndex sequenceToMatch Returns Type Description System.Boolean Remarks TODO: Add support for LinksConstants.Any Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Core.Sequences.SequenceWalkerBase-1.html": {
    "href": "api/Platform.Data.Core.Sequences.SequenceWalkerBase-1.html",
    "title": "Class SequenceWalkerBase<TLink> | LinksPlatform",
    "keywords": "Class SequenceWalkerBase<TLink> Inheritance System.Object SequenceWalkerBase<TLink> LeftSequenceWalker<TLink> RightSequenceWalker<TLink> Implements ISequenceWalker <TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public abstract class SequenceWalkerBase<TLink> : LinksOperatorBase<TLink>, ISequenceWalker<TLink> Type Parameters Name Description TLink Constructors SequenceWalkerBase(ILinks<TLink>) Declaration protected SequenceWalkerBase(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods GetNextElementAfterPop(IList<TLink>) Declaration protected abstract IList<TLink> GetNextElementAfterPop(IList<TLink> element) Parameters Type Name Description IList <TLink> element Returns Type Description IList <TLink> GetNextElementAfterPush(IList<TLink>) Declaration protected abstract IList<TLink> GetNextElementAfterPush(IList<TLink> element) Parameters Type Name Description IList <TLink> element Returns Type Description IList <TLink> IsElement(IList<TLink>) Declaration protected virtual bool IsElement(IList<TLink> elementLink) Parameters Type Name Description IList <TLink> elementLink Returns Type Description System.Boolean Walk(TLink) Declaration public IEnumerable<IList<TLink>> Walk(TLink sequence) Parameters Type Name Description TLink sequence Returns Type Description IEnumerable < IList <TLink>> WalkContents(IList<TLink>) Declaration protected abstract IEnumerable<IList<TLink>> WalkContents(IList<TLink> element) Parameters Type Name Description IList <TLink> element Returns Type Description IEnumerable < IList <TLink>> Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Core.Sequences.SequenceWalker.html": {
    "href": "api/Platform.Data.Core.Sequences.SequenceWalker.html",
    "title": "Class SequenceWalker | LinksPlatform",
    "keywords": "Class SequenceWalker Inheritance System.Object SequenceWalker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class SequenceWalker Remarks Реализованный внутри алгоритм наглядно показывает, что совершенно не обязательна рекурсивная реализация (с вложенным вызовом функцией самой себя), так как стэк можно использовать намного эффективнее при ручном управлении. При оптимизации можно использовать встроенную поддержку стеков в процессор. Решить объединять ли логику в одну функцию, или оставить 4 отдельных реализации? Решить встраивать ли защиту от зацикливания. Альтернативой защиты от закливания может быть заранее известное ограничение на погружение вглубь. А так же качественное распознавание прохода по циклическому графу. Ограничение на уровень глубины рекурсии может позволить использовать уменьшенный размер стека. Можно использовать глобальный стек (или несколько глобальных стеков на каждый поток). TODO: Попробовать реализовать алгоритм используя Sigil (MSIL) и низкоуровневый стек и сравнить производительность. Methods WalkLeft<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Action<TLink>) Declaration public static void WalkLeft<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Action<TLink> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, System.Boolean > isElement Action <TLink> visit Type Parameters Name Description TLink WalkRight<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Action<TLink>) Declaration public static void WalkRight<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Action<TLink> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, System.Boolean > isElement Action <TLink> visit Type Parameters Name Description TLink"
  },
  "api/Platform.Data.Core.Sequences.SequenceToItsLocalElementLevelsConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.SequenceToItsLocalElementLevelsConverter-1.html",
    "title": "Class SequenceToItsLocalElementLevelsConverter<TLink> | LinksPlatform",
    "keywords": "Class SequenceToItsLocalElementLevelsConverter<TLink> Inheritance System.Object SequenceToItsLocalElementLevelsConverter<TLink> Implements IConverter < IList <TLink>> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class SequenceToItsLocalElementLevelsConverter<TLink> : LinksOperatorBase<TLink>, IConverter<IList<TLink>> Type Parameters Name Description TLink Constructors SequenceToItsLocalElementLevelsConverter(ILinks<TLink>, IConverter<Doublet<TLink>, TLink>) Declaration public SequenceToItsLocalElementLevelsConverter(ILinks<TLink> links, IConverter<Doublet<TLink>, TLink> linkToItsFrequencyToNumberConveter) Parameters Type Name Description ILinks <TLink> links IConverter < Doublet <TLink>, TLink> linkToItsFrequencyToNumberConveter Methods Convert(IList<TLink>) Declaration public IList<TLink> Convert(IList<TLink> sequence) Parameters Type Name Description IList <TLink> sequence Returns Type Description IList <TLink> GetFrequencyNumber(TLink, TLink) Declaration public TLink GetFrequencyNumber(TLink source, TLink target) Parameters Type Name Description TLink source TLink target Returns Type Description TLink Implements IConverter<>"
  },
  "api/Platform.Data.Core.Sequences.LeftSequenceWalker-1.html": {
    "href": "api/Platform.Data.Core.Sequences.LeftSequenceWalker-1.html",
    "title": "Class LeftSequenceWalker<TLink> | LinksPlatform",
    "keywords": "Class LeftSequenceWalker<TLink> Inheritance System.Object SequenceWalkerBase <TLink> LeftSequenceWalker<TLink> Implements ISequenceWalker <TLink> Inherited Members SequenceWalkerBase<TLink>.Walk(TLink) SequenceWalkerBase<TLink>.IsElement(IList<TLink>) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class LeftSequenceWalker<TLink> : SequenceWalkerBase<TLink>, ISequenceWalker<TLink> Type Parameters Name Description TLink Constructors LeftSequenceWalker(ILinks<TLink>) Declaration public LeftSequenceWalker(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods GetNextElementAfterPop(IList<TLink>) Declaration protected override IList<TLink> GetNextElementAfterPop(IList<TLink> element) Parameters Type Name Description IList <TLink> element Returns Type Description IList <TLink> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.GetNextElementAfterPop(IList<TLink>) GetNextElementAfterPush(IList<TLink>) Declaration protected override IList<TLink> GetNextElementAfterPush(IList<TLink> element) Parameters Type Name Description IList <TLink> element Returns Type Description IList <TLink> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.GetNextElementAfterPush(IList<TLink>) WalkContents(IList<TLink>) Declaration protected override IEnumerable<IList<TLink>> WalkContents(IList<TLink> element) Parameters Type Name Description IList <TLink> element Returns Type Description IEnumerable < IList <TLink>> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.WalkContents(IList<TLink>) Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Core.Sequences.ISequences-1.html": {
    "href": "api/Platform.Data.Core.Sequences.ISequences-1.html",
    "title": "Interface ISequences<TLink> | LinksPlatform",
    "keywords": "Interface ISequences<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public interface ISequences<TLink> Type Parameters Name Description TLink Methods Count(TLink[]) Declaration ulong Count(params TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description System.UInt64 Create(TLink[]) Declaration TLink Create(params TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description TLink Delete(TLink[]) Declaration void Delete(params TLink[] sequence) Parameters Type Name Description TLink[] sequence Each(Func<TLink, Boolean>, IList<TLink>) Declaration bool Each(Func<TLink, bool> handler, IList<TLink> sequence) Parameters Type Name Description Func <TLink, System.Boolean > handler IList <TLink> sequence Returns Type Description System.Boolean EachPart(Func<TLink, Boolean>, TLink) Declaration bool EachPart(Func<TLink, bool> handler, TLink sequence) Parameters Type Name Description Func <TLink, System.Boolean > handler TLink sequence Returns Type Description System.Boolean Update(TLink[], TLink[]) Declaration TLink Update(TLink[] sequence, TLink[] newSequence) Parameters Type Name Description TLink[] sequence TLink[] newSequence Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Sequences.ISequenceWalker-1.html": {
    "href": "api/Platform.Data.Core.Sequences.ISequenceWalker-1.html",
    "title": "Interface ISequenceWalker<TLink> | LinksPlatform",
    "keywords": "Interface ISequenceWalker<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public interface ISequenceWalker<TLink> Type Parameters Name Description TLink Methods Walk(TLink) Declaration IEnumerable<IList<TLink>> Walk(TLink sequence) Parameters Type Name Description TLink sequence Returns Type Description IEnumerable < IList <TLink>>"
  },
  "api/Platform.Data.Core.Sequences.ISequenceHeightProvider-1.html": {
    "href": "api/Platform.Data.Core.Sequences.ISequenceHeightProvider-1.html",
    "title": "Interface ISequenceHeightProvider<TLink> | LinksPlatform",
    "keywords": "Interface ISequenceHeightProvider<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public interface ISequenceHeightProvider<TLink> : IProvider<TLink, TLink> Type Parameters Name Description TLink"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalMarkedSequenceSymbolFrequencyOneOffCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalMarkedSequenceSymbolFrequencyOneOffCounter-1.html",
    "title": "Class TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> | LinksPlatform",
    "keywords": "Class TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> Inheritance System.Object TotalSequenceSymbolFrequencyOneOffCounter <TLink> TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> Inherited Members TotalSequenceSymbolFrequencyOneOffCounter<TLink>._links TotalSequenceSymbolFrequencyOneOffCounter<TLink>._symbol TotalSequenceSymbolFrequencyOneOffCounter<TLink>._visits TotalSequenceSymbolFrequencyOneOffCounter<TLink>._total TotalSequenceSymbolFrequencyOneOffCounter<TLink>.Count() Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> : TotalSequenceSymbolFrequencyOneOffCounter<TLink> Type Parameters Name Description TLink Constructors TotalMarkedSequenceSymbolFrequencyOneOffCounter(ILinks<TLink>, ICreteriaMatcher<TLink>, TLink) Declaration public TotalMarkedSequenceSymbolFrequencyOneOffCounter(ILinks<TLink> links, ICreteriaMatcher<TLink> markedSequenceMatcher, TLink symbol) Parameters Type Name Description ILinks <TLink> links ICreteriaMatcher <TLink> markedSequenceMatcher TLink symbol Methods CountSequenceSymbolFrequency(TLink) Declaration protected override void CountSequenceSymbolFrequency(TLink link) Parameters Type Name Description TLink link Overrides Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyOneOffCounter<TLink>.CountSequenceSymbolFrequency(TLink)"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalMarkedSequenceSymbolFrequencyCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalMarkedSequenceSymbolFrequencyCounter-1.html",
    "title": "Class TotalMarkedSequenceSymbolFrequencyCounter<TLink> | LinksPlatform",
    "keywords": "Class TotalMarkedSequenceSymbolFrequencyCounter<TLink> Inheritance System.Object TotalMarkedSequenceSymbolFrequencyCounter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class TotalMarkedSequenceSymbolFrequencyCounter<TLink> : ICounter<TLink, TLink> Type Parameters Name Description TLink Constructors TotalMarkedSequenceSymbolFrequencyCounter(ILinks<TLink>, ICreteriaMatcher<TLink>) Declaration public TotalMarkedSequenceSymbolFrequencyCounter(ILinks<TLink> links, ICreteriaMatcher<TLink> markedSequenceMatcher) Parameters Type Name Description ILinks <TLink> links ICreteriaMatcher <TLink> markedSequenceMatcher Methods Count(TLink) Declaration public TLink Count(TLink argument) Parameters Type Name Description TLink argument Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Doublets.ILinksAddressConstants-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksAddressConstants-1.html",
    "title": "Interface ILinksAddressConstants<TAddress> | LinksPlatform",
    "keywords": "Interface ILinksAddressConstants<TAddress> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksAddressConstants<TAddress> Type Parameters Name Description TAddress Properties Any Возвращает значение, обозначающее любую связь. Declaration TAddress Any { get; } Property Value Type Description TAddress Remarks Возможно нужно зарезервировать отдельное значение, тогда можно будет создавать все варианты последовательностей в функции Create. Itself Возвращает значение, обозначающее связь-ссылку на саму связь. Declaration TAddress Itself { get; } Property Value Type Description TAddress MaxPossibleIndex Возвращает максимально возможный индекс существующей связи. Declaration TAddress MaxPossibleIndex { get; } Property Value Type Description TAddress Remarks Если за каждую константу будет отвечать отдельная связь, диапазон возможных связей будет уменьшен. Благодаря логике конвертации Integer для каждого типа здесь будет максимальное значение этого типа. MinPossibleIndex Возвращает минимально возможный индекс существующей связи. Declaration TAddress MinPossibleIndex { get; } Property Value Type Description TAddress Null Возвращает значение, обозначающее отсутствие связи. Declaration TAddress Null { get; } Property Value Type Description TAddress"
  },
  "api/Platform.Data.Core.Doublets.ILinks-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinks-1.html",
    "title": "Interface ILinks<TLink> | LinksPlatform",
    "keywords": "Interface ILinks<TLink> Представляет интерфейс для работы с данными в формате Links (хранилища взаимосвязей). Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinks<TLink> Type Parameters Name Description TLink Remarks Этот интерфейс в данный момент не зависит от размера содержимого связи, а значит подходит как для дублетов, так и для триплетов и т.п. Возможно этот интерфейс подходит даже для Sequences. TODO: Этот интерфейс можно перенести в пространство имён Platform.Data.Core или Platform.Data.Core.Common Properties Constants Возвращает набор констант, который необходим для эффективной коммуникации с методами этого интерфейса. Эти константы не меняются с момента создания точки доступа к хранилищу. Declaration ILinksCombinedConstants<TLink, TLink, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <TLink, TLink, System.Int32 > Methods Count(IList<TLink>) Подсчитывает и возвращает общее число связей находящихся в хранилище, соответствующих указанным ограничениям. Declaration TLink Count(IList<TLink> restriction) Parameters Type Name Description IList <TLink> restriction Ограничения на содержимое связей. Returns Type Description TLink Общее число связей находящихся в хранилище, соответствующих указанным ограничениям. Create() Создаёт связь. Declaration TLink Create() Returns Type Description TLink Индекс созданной связи. Delete(TLink) Удаляет связь с указанным индексом. Declaration void Delete(TLink link) Parameters Type Name Description TLink link Индекс удаляемой связи. Each(Func<IList<TLink>, TLink>, IList<TLink>) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration TLink Each(Func<IList<TLink>, TLink> handler, IList<TLink> restrictions) Parameters Type Name Description Func < IList <TLink>, TLink> handler Обработчик каждой подходящей связи. IList <TLink> restrictions Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Any - отсутствие ограничения, 1..∞ конкретный адрес связи. Returns Type Description TLink True, в случае если проход по связям не был прерван и False в обратном случае. Update(IList<TLink>) Обновляет связь с указанными restrictions[Constants.IndexPart] в адресом связи на связь с указанным новым содержимым. Declaration TLink Update(IList<TLink> restrictions) Parameters Type Name Description IList <TLink> restrictions Returns Type Description TLink Индекс обновлённой связи."
  },
  "api/Platform.Helpers.Collections.Segments.Walkers.DuplicateSegmentsWalkerBase-1.html": {
    "href": "api/Platform.Helpers.Collections.Segments.Walkers.DuplicateSegmentsWalkerBase-1.html",
    "title": "Class DuplicateSegmentsWalkerBase<T> | LinksPlatform",
    "keywords": "Class DuplicateSegmentsWalkerBase<T> Inheritance System.Object AllSegmentsWalkerBase <T, Segment <T>> DuplicateSegmentsWalkerBase <T, Segment <T>> DuplicateSegmentsWalkerBase<T> Inherited Members DuplicateSegmentsWalkerBase<T, Segment<T>>.Iteration(Segment<T>) DuplicateSegmentsWalkerBase<T, Segment<T>>.OnDublicateFound(Segment<T>) DuplicateSegmentsWalkerBase<T, Segment<T>>.GetSegmentFrequency(Segment<T>) DuplicateSegmentsWalkerBase<T, Segment<T>>.SetSegmentFrequency(Segment<T>, Int64) AllSegmentsWalkerBase<T, Segment<T>>.DefaultMinimumStringSegmentLength AllSegmentsWalkerBase<T, Segment<T>>.WalkAll(IList<T>) AllSegmentsWalkerBase<T, Segment<T>>.CreateSegment(IList<T>, Int32, Int32) AllSegmentsWalkerBase<T, Segment<T>>.Iteration(Segment<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Segments.Walkers Assembly : cs.temp.dll.dll Syntax public abstract class DuplicateSegmentsWalkerBase<T> : DuplicateSegmentsWalkerBase<T, Segment<T>> Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Collections.Segments.Walkers.DictionaryBasedDuplicateSegmentsWalkerBase-2.html": {
    "href": "api/Platform.Helpers.Collections.Segments.Walkers.DictionaryBasedDuplicateSegmentsWalkerBase-2.html",
    "title": "Class DictionaryBasedDuplicateSegmentsWalkerBase<T, TSegment> | LinksPlatform",
    "keywords": "Class DictionaryBasedDuplicateSegmentsWalkerBase<T, TSegment> Inheritance System.Object AllSegmentsWalkerBase <T, TSegment> DuplicateSegmentsWalkerBase <T, TSegment> DictionaryBasedDuplicateSegmentsWalkerBase<T, TSegment> DictionaryBasedDuplicateSegmentsWalkerBase<T> Inherited Members DuplicateSegmentsWalkerBase<T, TSegment>.Iteration(TSegment) DuplicateSegmentsWalkerBase<T, TSegment>.OnDublicateFound(TSegment) DuplicateSegmentsWalkerBase<T, TSegment>.GetSegmentFrequency(TSegment) DuplicateSegmentsWalkerBase<T, TSegment>.SetSegmentFrequency(TSegment, Int64) AllSegmentsWalkerBase<T, TSegment>.DefaultMinimumStringSegmentLength AllSegmentsWalkerBase<T, TSegment>.WalkAll(IList<T>) AllSegmentsWalkerBase<T, TSegment>.CreateSegment(IList<T>, Int32, Int32) AllSegmentsWalkerBase<T, TSegment>.Iteration(TSegment) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Segments.Walkers Assembly : cs.temp.dll.dll Syntax public abstract class DictionaryBasedDuplicateSegmentsWalkerBase<T, TSegment> : DuplicateSegmentsWalkerBase<T, TSegment> where TSegment : Segment<T> Type Parameters Name Description T TSegment Constructors DictionaryBasedDuplicateSegmentsWalkerBase(IDictionary<TSegment, Int64>, Int32, Boolean) Declaration public DictionaryBasedDuplicateSegmentsWalkerBase(IDictionary<TSegment, long> dictionary, int minimumStringSegmentLength = 2, bool resetDictionaryOnEachWalk = false) Parameters Type Name Description IDictionary <TSegment, System.Int64 > dictionary System.Int32 minimumStringSegmentLength System.Boolean resetDictionaryOnEachWalk DictionaryBasedDuplicateSegmentsWalkerBase(Boolean) Declaration public DictionaryBasedDuplicateSegmentsWalkerBase(bool resetDictionaryOnEachWalk = false) Parameters Type Name Description System.Boolean resetDictionaryOnEachWalk DictionaryBasedDuplicateSegmentsWalkerBase(Int32, Boolean) Declaration public DictionaryBasedDuplicateSegmentsWalkerBase(int minimumStringSegmentLength = 2, bool resetDictionaryOnEachWalk = false) Parameters Type Name Description System.Int32 minimumStringSegmentLength System.Boolean resetDictionaryOnEachWalk Fields DefaultResetDictionaryOnEachWalk Declaration public const bool DefaultResetDictionaryOnEachWalk = false Field Value Type Description System.Boolean Dictionary Declaration protected IDictionary<TSegment, long> Dictionary Field Value Type Description IDictionary <TSegment, System.Int64 > Methods GetSegmentFrequency(TSegment) Declaration protected override long GetSegmentFrequency(TSegment segment) Parameters Type Name Description TSegment segment Returns Type Description System.Int64 Overrides Platform.Helpers.Collections.Segments.Walkers.DuplicateSegmentsWalkerBase<T, TSegment>.GetSegmentFrequency(TSegment) SetSegmentFrequency(TSegment, Int64) Declaration protected override void SetSegmentFrequency(TSegment segment, long frequency) Parameters Type Name Description TSegment segment System.Int64 frequency Overrides Platform.Helpers.Collections.Segments.Walkers.DuplicateSegmentsWalkerBase<T, TSegment>.SetSegmentFrequency(TSegment, System.Int64) WalkAll(IList<T>) Declaration public override void WalkAll(IList<T> elements) Parameters Type Name Description IList <T> elements Overrides Platform.Helpers.Collections.Segments.Walkers.AllSegmentsWalkerBase<T, TSegment>.WalkAll(IList<T>)"
  },
  "api/Platform.Helpers.Collections.Segments.Walkers.DictionaryBasedDuplicateSegmentsWalkerBase-1.html": {
    "href": "api/Platform.Helpers.Collections.Segments.Walkers.DictionaryBasedDuplicateSegmentsWalkerBase-1.html",
    "title": "Class DictionaryBasedDuplicateSegmentsWalkerBase<T> | LinksPlatform",
    "keywords": "Class DictionaryBasedDuplicateSegmentsWalkerBase<T> Inheritance System.Object AllSegmentsWalkerBase <T, Segment <T>> DuplicateSegmentsWalkerBase <T, Segment <T>> DictionaryBasedDuplicateSegmentsWalkerBase <T, Segment <T>> DictionaryBasedDuplicateSegmentsWalkerBase<T> Inherited Members DictionaryBasedDuplicateSegmentsWalkerBase<T, Segment<T>>.DefaultResetDictionaryOnEachWalk DictionaryBasedDuplicateSegmentsWalkerBase<T, Segment<T>>.Dictionary DictionaryBasedDuplicateSegmentsWalkerBase<T, Segment<T>>.WalkAll(IList<T>) DictionaryBasedDuplicateSegmentsWalkerBase<T, Segment<T>>.GetSegmentFrequency(Segment<T>) DictionaryBasedDuplicateSegmentsWalkerBase<T, Segment<T>>.SetSegmentFrequency(Segment<T>, Int64) DuplicateSegmentsWalkerBase<T, Segment<T>>.Iteration(Segment<T>) DuplicateSegmentsWalkerBase<T, Segment<T>>.OnDublicateFound(Segment<T>) DuplicateSegmentsWalkerBase<T, Segment<T>>.GetSegmentFrequency(Segment<T>) DuplicateSegmentsWalkerBase<T, Segment<T>>.SetSegmentFrequency(Segment<T>, Int64) AllSegmentsWalkerBase<T, Segment<T>>.DefaultMinimumStringSegmentLength AllSegmentsWalkerBase<T, Segment<T>>.WalkAll(IList<T>) AllSegmentsWalkerBase<T, Segment<T>>.CreateSegment(IList<T>, Int32, Int32) AllSegmentsWalkerBase<T, Segment<T>>.Iteration(Segment<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Segments.Walkers Assembly : cs.temp.dll.dll Syntax public abstract class DictionaryBasedDuplicateSegmentsWalkerBase<T> : DictionaryBasedDuplicateSegmentsWalkerBase<T, Segment<T>> Type Parameters Name Description T Constructors DictionaryBasedDuplicateSegmentsWalkerBase(IDictionary<Segment<T>, Int64>, Int32, Boolean) Declaration public DictionaryBasedDuplicateSegmentsWalkerBase(IDictionary<Segment<T>, long> dictionary, int minimumStringSegmentLength = 2, bool resetDictionaryOnEachWalk = false) Parameters Type Name Description IDictionary < Segment <T>, System.Int64 > dictionary System.Int32 minimumStringSegmentLength System.Boolean resetDictionaryOnEachWalk DictionaryBasedDuplicateSegmentsWalkerBase(Boolean) Declaration public DictionaryBasedDuplicateSegmentsWalkerBase(bool resetDictionaryOnEachWalk = false) Parameters Type Name Description System.Boolean resetDictionaryOnEachWalk DictionaryBasedDuplicateSegmentsWalkerBase(Int32, Boolean) Declaration public DictionaryBasedDuplicateSegmentsWalkerBase(int minimumStringSegmentLength = 2, bool resetDictionaryOnEachWalk = false) Parameters Type Name Description System.Int32 minimumStringSegmentLength System.Boolean resetDictionaryOnEachWalk"
  },
  "api/Platform.Helpers.Collections.Segments.Walkers.AllSegmentsWalkerExtensions.html": {
    "href": "api/Platform.Helpers.Collections.Segments.Walkers.AllSegmentsWalkerExtensions.html",
    "title": "Class AllSegmentsWalkerExtensions | LinksPlatform",
    "keywords": "Class AllSegmentsWalkerExtensions Inheritance System.Object AllSegmentsWalkerExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Segments.Walkers Assembly : cs.temp.dll.dll Syntax public static class AllSegmentsWalkerExtensions Methods WalkAll(AllSegmentsWalkerBase<Char>, String) Declaration public static void WalkAll(this AllSegmentsWalkerBase<char> walker, string string) Parameters Type Name Description AllSegmentsWalkerBase < System.Char > walker System.String string WalkAll<TSegment>(AllSegmentsWalkerBase<Char, TSegment>, String) Declaration public static void WalkAll<TSegment>(this AllSegmentsWalkerBase<char, TSegment> walker, string string) where TSegment : Segment<char> Parameters Type Name Description AllSegmentsWalkerBase < System.Char , TSegment> walker System.String string Type Parameters Name Description TSegment"
  },
  "api/Platform.Helpers.Collections.Segments.Walkers.AllSegmentsWalkerBase-2.html": {
    "href": "api/Platform.Helpers.Collections.Segments.Walkers.AllSegmentsWalkerBase-2.html",
    "title": "Class AllSegmentsWalkerBase<T, TSegment> | LinksPlatform",
    "keywords": "Class AllSegmentsWalkerBase<T, TSegment> Inheritance System.Object AllSegmentsWalkerBase<T, TSegment> AllSegmentsWalkerBase<T> DuplicateSegmentsWalkerBase<T, TSegment> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Segments.Walkers Assembly : cs.temp.dll.dll Syntax public abstract class AllSegmentsWalkerBase<T, TSegment> where TSegment : Segment<T> Type Parameters Name Description T TSegment Constructors AllSegmentsWalkerBase(Int32) Declaration protected AllSegmentsWalkerBase(int minimumStringSegmentLength = 2) Parameters Type Name Description System.Int32 minimumStringSegmentLength Fields DefaultMinimumStringSegmentLength Declaration public const int DefaultMinimumStringSegmentLength = 2 Field Value Type Description System.Int32 Methods CreateSegment(IList<T>, Int32, Int32) Declaration protected abstract TSegment CreateSegment(IList<T> elements, int offset, int length) Parameters Type Name Description IList <T> elements System.Int32 offset System.Int32 length Returns Type Description TSegment Iteration(TSegment) Declaration protected abstract void Iteration(TSegment segment) Parameters Type Name Description TSegment segment WalkAll(IList<T>) Declaration public virtual void WalkAll(IList<T> elements) Parameters Type Name Description IList <T> elements"
  },
  "api/Platform.Helpers.Collections.Segments.Walkers.AllSegmentsWalkerBase-1.html": {
    "href": "api/Platform.Helpers.Collections.Segments.Walkers.AllSegmentsWalkerBase-1.html",
    "title": "Class AllSegmentsWalkerBase<T> | LinksPlatform",
    "keywords": "Class AllSegmentsWalkerBase<T> Inheritance System.Object AllSegmentsWalkerBase <T, Segment <T>> AllSegmentsWalkerBase<T> Inherited Members AllSegmentsWalkerBase<T, Segment<T>>.DefaultMinimumStringSegmentLength AllSegmentsWalkerBase<T, Segment<T>>.WalkAll(IList<T>) AllSegmentsWalkerBase<T, Segment<T>>.CreateSegment(IList<T>, Int32, Int32) AllSegmentsWalkerBase<T, Segment<T>>.Iteration(Segment<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Segments.Walkers Assembly : cs.temp.dll.dll Syntax public abstract class AllSegmentsWalkerBase<T> : AllSegmentsWalkerBase<T, Segment<T>> Type Parameters Name Description T Methods CreateSegment(IList<T>, Int32, Int32) Declaration protected override Segment<T> CreateSegment(IList<T> elements, int offset, int length) Parameters Type Name Description IList <T> elements System.Int32 offset System.Int32 length Returns Type Description Segment <T> Overrides Platform.Helpers.Collections.Segments.Walkers.AllSegmentsWalkerBase<T, Platform.Helpers.Collections.Segments.Segment<T>>.CreateSegment(IList<T>, System.Int32, System.Int32)"
  },
  "api/Platform.Helpers.Collections.Segments.Segment-1.html": {
    "href": "api/Platform.Helpers.Collections.Segments.Segment-1.html",
    "title": "Class Segment<T> | LinksPlatform",
    "keywords": "Class Segment<T> Inheritance System.Object Segment<T> CharsSegment Implements IList <T> Namespace : Platform.Helpers.Collections.Segments Assembly : cs.temp.dll.dll Syntax public class Segment<T> : IEquatable<Segment<T>>, IList<T> Type Parameters Name Description T Constructors Segment(IList<T>, Int32, Int32) Declaration public Segment(IList<T> base, int offset, int length) Parameters Type Name Description IList <T> base System.Int32 offset System.Int32 length Fields Base Declaration public readonly IList<T> Base Field Value Type Description IList <T> Length Declaration public readonly int Length Field Value Type Description System.Int32 Offset Declaration public readonly int Offset Field Value Type Description System.Int32 Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Item[Int32] Declaration public T this[int i] { get; set; } Parameters Type Name Description System.Int32 i Property Value Type Description T Methods Add(T) Declaration public void Add(T item) Parameters Type Name Description T item Clear() Declaration public void Clear() Contains(T) Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description System.Boolean CopyTo(T[], Int32) Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array System.Int32 arrayIndex Equals(Segment<T>) Declaration public virtual bool Equals(Segment<T> other) Parameters Type Name Description Segment <T> other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Remarks Based on https://github.com/Microsoft/referencesource/blob/3b1eaf5203992df69de44c783a3eda37d3d4cd10/mscorlib/system/string.cs#L833 IndexOf(T) Declaration public int IndexOf(T item) Parameters Type Name Description T item Returns Type Description System.Int32 Insert(Int32, T) Declaration public void Insert(int index, T item) Parameters Type Name Description System.Int32 index T item Remove(T) Declaration public bool Remove(T item) Parameters Type Name Description T item Returns Type Description System.Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index Implements IList<>"
  },
  "api/Platform.Helpers.Collections.Segments.CharsSegment.html": {
    "href": "api/Platform.Helpers.Collections.Segments.CharsSegment.html",
    "title": "Class CharsSegment | LinksPlatform",
    "keywords": "Class CharsSegment Inheritance System.Object Segment < System.Char > CharsSegment Implements IList < System.Char > Inherited Members Segment<Char>.Base Segment<Char>.Offset Segment<Char>.Length Segment<Char>.Item[Int32] Segment<Char>.Equals(Object) Segment<Char>.Count Segment<Char>.IsReadOnly Segment<Char>.IndexOf(Char) Segment<Char>.Insert(Int32, Char) Segment<Char>.RemoveAt(Int32) Segment<Char>.Add(Char) Segment<Char>.Clear() Segment<Char>.Contains(Char) Segment<Char>.CopyTo(Char[], Int32) Segment<Char>.Remove(Char) Segment<Char>.GetEnumerator() Namespace : Platform.Helpers.Collections.Segments Assembly : cs.temp.dll.dll Syntax public class CharsSegment : Segment<char>, IList<char> Constructors CharsSegment(IList<Char>, Int32, Int32) Declaration public CharsSegment(IList<char> base, int offset, int length) Parameters Type Name Description IList < System.Char > base System.Int32 offset System.Int32 length Methods Equals(Segment<Char>) Declaration public override bool Equals(Segment<char> other) Parameters Type Name Description Segment < System.Char > other Returns Type Description System.Boolean Overrides Platform.Helpers.Collections.Segments.Segment<System.Char>.Equals(Platform.Helpers.Collections.Segments.Segment<System.Char>) Remarks Based on https://github.com/Microsoft/referencesource/blob/3b1eaf5203992df69de44c783a3eda37d3d4cd10/mscorlib/system/string.cs#L364 GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Platform.Helpers.Collections.Segments.Segment<System.Char>.GetHashCode() Remarks Based on https://github.com/Microsoft/referencesource/blob/3b1eaf5203992df69de44c783a3eda37d3d4cd10/mscorlib/system/string.cs#L833 ToString() Declaration public override string ToString() Returns Type Description System.String Operators Implicit(CharsSegment to String) Declaration public static implicit operator string (CharsSegment segment) Parameters Type Name Description CharsSegment segment Returns Type Description System.String Implements IList<>"
  },
  "api/Platform.Helpers.Collections.Concurrent.ConcurrentQueueExtensions.html": {
    "href": "api/Platform.Helpers.Collections.Concurrent.ConcurrentQueueExtensions.html",
    "title": "Class ConcurrentQueueExtensions | LinksPlatform",
    "keywords": "Class ConcurrentQueueExtensions Inheritance System.Object ConcurrentQueueExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Concurrent Assembly : cs.temp.dll.dll Syntax public static class ConcurrentQueueExtensions Methods AwaitAll(ConcurrentQueue<Task>) Declaration public static Task AwaitAll(this ConcurrentQueue<Task> queue) Parameters Type Name Description ConcurrentQueue < Task > queue Returns Type Description Task AwaitOne(ConcurrentQueue<Task>) Declaration public static Task AwaitOne(this ConcurrentQueue<Task> queue) Parameters Type Name Description ConcurrentQueue < Task > queue Returns Type Description Task DequeueAll<T>(ConcurrentQueue<T>) Declaration public static IEnumerable<T> DequeueAll<T>(this ConcurrentQueue<T> queue) Parameters Type Name Description ConcurrentQueue <T> queue Returns Type Description IEnumerable <T> Type Parameters Name Description T EnqueueAsRunnedTask(ConcurrentQueue<Task>, Action) Declaration public static void EnqueueAsRunnedTask(this ConcurrentQueue<Task> queue, Action action) Parameters Type Name Description ConcurrentQueue < Task > queue Action action"
  },
  "api/Platform.Helpers.Collections.Arrays.html": {
    "href": "api/Platform.Helpers.Collections.Arrays.html",
    "title": "Namespace Platform.Helpers.Collections.Arrays | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Collections.Arrays Classes ArrayFiller<TElement, TReturnConstant> ArrayPool ArrayPool<T> ArrayString<T>"
  },
  "api/Platform.Helpers.Collections.Arrays.ArrayString-1.html": {
    "href": "api/Platform.Helpers.Collections.Arrays.ArrayString-1.html",
    "title": "Class ArrayString<T> | LinksPlatform",
    "keywords": "Class ArrayString<T> Inheritance System.Object ArrayString<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Arrays Assembly : cs.temp.dll.dll Syntax public class ArrayString<T> Type Parameters Name Description T Constructors ArrayString(T[]) Declaration public ArrayString(T[] array) Parameters Type Name Description T[] array ArrayString(T[], Int64) Declaration public ArrayString(T[] array, long length) Parameters Type Name Description T[] array System.Int64 length ArrayString(Int64) Declaration public ArrayString(long length) Parameters Type Name Description System.Int64 length Fields Array Declaration public readonly T[] Array Field Value Type Description T[] Length Declaration public long Length Field Value Type Description System.Int64 Methods Contains(T) Declaration public bool Contains(T value) Parameters Type Name Description T value Returns Type Description System.Boolean"
  },
  "api/Platform.Helpers.Collections.Arrays.ArrayPool.html": {
    "href": "api/Platform.Helpers.Collections.Arrays.ArrayPool.html",
    "title": "Class ArrayPool | LinksPlatform",
    "keywords": "Class ArrayPool Inheritance System.Object ArrayPool Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Arrays Assembly : cs.temp.dll.dll Syntax public static class ArrayPool Remarks TODO: Check actual performance TODO: Check for memory leaks Methods Allocate<T>(Integer) Declaration public static T[] Allocate<T>(Integer size) Parameters Type Name Description Integer size Returns Type Description T[] Type Parameters Name Description T Free<T>(T[]) Declaration public static void Free<T>(T[] array) Parameters Type Name Description T[] array Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Collections.Arrays.ArrayPool-1.html": {
    "href": "api/Platform.Helpers.Collections.Arrays.ArrayPool-1.html",
    "title": "Class ArrayPool<T> | LinksPlatform",
    "keywords": "Class ArrayPool<T> Inheritance System.Object ArrayPool<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Arrays Assembly : cs.temp.dll.dll Syntax public class ArrayPool<T> Type Parameters Name Description T Remarks Original idea from http://geekswithblogs.net/blackrob/archive/2014/12/18/array-pooling-in-csharp.aspx Constructors ArrayPool() Declaration public ArrayPool() ArrayPool(Int32) Declaration public ArrayPool(int maxArraysPerSize) Parameters Type Name Description System.Int32 maxArraysPerSize Fields DefaultMaxArraysPerSize Declaration public const int DefaultMaxArraysPerSize = 32 Field Value Type Description System.Int32 DefaultSizesAmount Declaration public const int DefaultSizesAmount = 512 Field Value Type Description System.Int32 Empty Declaration public static readonly T[] Empty Field Value Type Description T[] Methods Allocate(Int64) Declaration public virtual T[] Allocate(long size) Parameters Type Name Description System.Int64 size Returns Type Description T[] AllocateDisposable(Int64) Declaration public Disposable<T[]> AllocateDisposable(long size) Parameters Type Name Description System.Int64 size Returns Type Description Disposable <T[]> Clear() Declaration public virtual void Clear() Free(T[]) Declaration public virtual void Free(T[] array) Parameters Type Name Description T[] array Resize(Disposable<T[]>, Int64) Declaration public Disposable<T[]> Resize(Disposable<T[]> source, long size) Parameters Type Name Description Disposable <T[]> source System.Int64 size Returns Type Description Disposable <T[]>"
  },
  "api/Platform.Helpers.Collections.Arrays.ArrayFiller-2.html": {
    "href": "api/Platform.Helpers.Collections.Arrays.ArrayFiller-2.html",
    "title": "Class ArrayFiller<TElement, TReturnConstant> | LinksPlatform",
    "keywords": "Class ArrayFiller<TElement, TReturnConstant> Inheritance System.Object ArrayFiller<TElement, TReturnConstant> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Arrays Assembly : cs.temp.dll.dll Syntax public class ArrayFiller<TElement, TReturnConstant> Type Parameters Name Description TElement TReturnConstant Constructors ArrayFiller(TElement[], TReturnConstant) Declaration public ArrayFiller(TElement[] array, TReturnConstant returnConstant) Parameters Type Name Description TElement[] array TReturnConstant returnConstant ArrayFiller(TElement[], Int64, TReturnConstant) Declaration public ArrayFiller(TElement[] array, long offset, TReturnConstant returnConstant) Parameters Type Name Description TElement[] array System.Int64 offset TReturnConstant returnConstant Fields _array Declaration protected readonly TElement[] _array Field Value Type Description TElement[] _position Declaration protected long _position Field Value Type Description System.Int64 Methods Add(TElement) Declaration public void Add(TElement element) Parameters Type Name Description TElement element AddAndReturnConstant(TElement) Declaration public TReturnConstant AddAndReturnConstant(TElement element) Parameters Type Name Description TElement element Returns Type Description TReturnConstant AddAndReturnTrue(TElement) Declaration public bool AddAndReturnTrue(TElement element) Parameters Type Name Description TElement element Returns Type Description System.Boolean AddFirstAndReturnConstant(IList<TElement>) Declaration public TReturnConstant AddFirstAndReturnConstant(IList<TElement> collection) Parameters Type Name Description IList <TElement> collection Returns Type Description TReturnConstant AddFirstAndReturnTrue(IList<TElement>) Declaration public bool AddFirstAndReturnTrue(IList<TElement> collection) Parameters Type Name Description IList <TElement> collection Returns Type Description System.Boolean"
  },
  "api/Platform.Examples.CSVExporterCLI-1.html": {
    "href": "api/Platform.Examples.CSVExporterCLI-1.html",
    "title": "Class CSVExporterCLI<TExporter> | LinksPlatform",
    "keywords": "Class CSVExporterCLI<TExporter> Inheritance System.Object CSVExporterCLI<TExporter> Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class CSVExporterCLI<TExporter> : ICommandLineInterface where TExporter : CSVExporter, new() Type Parameters Name Description TExporter Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Examples.CSVExporter.html": {
    "href": "api/Platform.Examples.CSVExporter.html",
    "title": "Class CSVExporter | LinksPlatform",
    "keywords": "Class CSVExporter Inheritance System.Object CSVExporter CSVSequencesExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class CSVExporter Remarks https://tools.ietf.org/html/rfc4180 Fields _addressToLineNumber Declaration protected Dictionary<ulong, ulong> _addressToLineNumber Field Value Type Description Dictionary < System.UInt64 , System.UInt64 > _convertUnicodeLinksToCharacters Declaration protected bool _convertUnicodeLinksToCharacters Field Value Type Description System.Boolean _linesCounter Declaration protected ulong _linesCounter Field Value Type Description System.UInt64 _links Declaration protected SynchronizedLinks<ulong> _links Field Value Type Description SynchronizedLinks < System.UInt64 > _linksCounter Declaration protected ulong _linksCounter Field Value Type Description System.UInt64 _referenceByLines Declaration protected bool _referenceByLines Field Value Type Description System.Boolean _unicodeMapped Declaration protected bool _unicodeMapped Field Value Type Description System.Boolean _visited Declaration protected HashSet<ulong> _visited Field Value Type Description HashSet < System.UInt64 > Methods Export(SynchronizedLinks<UInt64>, String, Boolean, Boolean, Boolean, CancellationToken) Declaration public void Export(SynchronizedLinks<ulong> links, string path, bool unicodeMapped, bool convertUnicodeLinksToCharacters, bool referenceByLines, CancellationToken cancellationToken) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links System.String path System.Boolean unicodeMapped System.Boolean convertUnicodeLinksToCharacters System.Boolean referenceByLines CancellationToken cancellationToken FormatLink(UInt64) Declaration protected string FormatLink(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description System.String Visit(UInt64) Declaration protected bool Visit(ulong linkIndex) Parameters Type Name Description System.UInt64 linkIndex Returns Type Description System.Boolean WriteLink(StreamWriter, IList<UInt64>) Declaration protected virtual void WriteLink(StreamWriter writer, IList<ulong> link) Parameters Type Name Description StreamWriter writer IList < System.UInt64 > link"
  },
  "README.html": {
    "href": "README.html",
    "title": "LinksPlatform (русская версия) | LinksPlatform",
    "keywords": "LinksPlatform ( русская версия ) Documentation Graphical introduction Inspired by the work of Simon Williams ( The Associative Model of Data ), book , whitepaper . Comparison of models: Comparison of theories: This platform uses a unified data type — link, which is a combination of Item and Link from a work by Simon Williams. So the Item or Point is a specific case of the link, which references itself . There are two variants of Link structure: Untyped , each link contains Source ( beginning , start , first , left , subject ) and Target ( ending , stop , last , right , predicate , object ). Typed ( semantic ), with added Linker ( verb , action , type , category , predicate , transition , algorithm ), so any additional info about a type of connection between two links can be stored here. Links Platform is a system , that combines simple associative memory storage (Links) and transformation execution engine (Triggers). There is an ability to program that system dynamically, due to the fact that all algorithms treated as data inside the storage . Such algorithms can also change themselves in real-time based on input from the environment . The Idea behind Links Platform is a model of high-level associative memory effects of human mind . Road map Project status Swagger Connector Concept Links (doublets) API swagger connector. Links (triplets, micro RDF) API swagger connector. Frequently asked questions Contacts https://vk.com/linksplatform https://vk.com/konard"
  },
  "doc/articles/links-theory.html": {
    "href": "doc/articles/links-theory.html",
    "title": "Черновик Теории Связей | LinksPlatform",
    "keywords": "Черновик Теории Связей Вступление Середина XX века связана с появлением единой теории универсальных вычислительных машин, называемых сегодня \"Машинами Тьюринга\". Название это сегодня в начале XXI века стало нарицательным и является синонимом любого вычислительно устройства в связи с широким признанием этой теории обществом. Именно эта технология вдохновила технических специалистов по всему миру на активное развитие вычислительной техники. Именно Аланом Тьюрингом в то же время был поставлен вопрос о том, может ли мыслить машина и о том, а не является ли человек машиной. Всё это привело к началу активного исследования вопроса о возможности создания искусственного интеллекта (ИИ), неотличимого от интеллекта человеческого. И хотя сравнение таких комплексных систем возможно лишь в ограниченной степени, и часто происходит лишь на узком круге задач, таких как ведение беседы между двумя интеллектами или ведение игры и т.п., всё же успехи в этой области есть и с каждым годом их количество увеличивается, а качество повышается. Всё это шаг за шагом ведёт к тому, что мы лучше понимаем себя, узнаём новые возможности и ограничения интеллекта человеческого, и перенося полученные знания в теорию вычислительных машин с каждым разом всё глубже проникаем в суть того как эти внешние эффекты, возможности, ограничения можно воспроизвести в рукотворном интеллекте, как именно это всё может быть устроено изнутри, и всё это шаг за шагом приближает нас к созданию новых технических систем, которые улучшая старые образцы всё ближе подходя к тому, что можно назвать интеллектуальным, разумным, умным, однажды и завершится той самой точкой сингулярности, когда будет создана такая мыслящая система, которая сможет улучшать и развивать сама себя и сможет решать любую задачу, которую поставит ей человек, в том числе и создание автономного искусственного интеллекта со своей волей, т.е. самостоятельно определяющего свои цели - так называемый интеллект сильного типа. У \"искусственного интеллекта сильного типа\" могут быть и эмоции, что с одной стороны позволило бы лучше ему понимать нас, людей, как мы воспринимая эмоции друг друга лучше понимаем друг друга, с другой стороны позволило бы и нам ещё глубже понимать себя самих и то как мы устроены. Но ИИ сильного типа не обязательно создавать напрямую, его может однажды создать ИИ слабого типа, который сам и не будет обладать своей волей, но если ИИ слабого типа будет создан, то цель ему может быть поставлена человеком. Поэтому можно сказать, что ИИ слабого типа будет достаточно, чтобы привести к существованию рано или поздно ИИ любого типа, любой сложности, с любой мощностью и с любым набором \"встроенных\" характеристик. Важно так же осознавать что есть различные риски для общества в связи с развитием подобных технологий. Так же как и у других результатов технологического прогресса всё будет определено тем, кто и как будет применять эти результаты. Для того же кто последует путём разработки следует дать рекомендацию, что вероятнее всего ИИ сильного типа будет необходимо содержать в изоляции от общества и окружающей среды, постепенно и под контролем снимая ограничения. Такой контроль и осуществление ограничений установленных человеком сможет осуществлять ИИ слабого типа, человек же успеть среагировать скорее всего уже не сможет. Это похоже на то, как контроль осуществляется родителями над ребёнком в семье и на то как контроль осуществляется законом в обществе над каждым его гражданином. Авторов этой теории интересовал в первую очередь вопрос понимания того что такое интеллект, из чего он состоит и следовательно без чего он не может существовать. Так же как машина Тьюринга не может быть вычислителем без наличия ленты с нулями и единицами, так же и интеллект не может существовать без памяти. С одной стороны можно поставить равенство между \"лентой машины Тьюринга\" и \"памятью\" любого интеллекта. Тогда в сущности получится, что интеллект есть ни что иное как вычислительная машина. Тогда уже сегодня существует множество \"искусственных интеллектов\", получается ли тогда что и \"точки сингулярности\" мы уже достигли? Пожалуй нет. Может ли сегодня любая вычислительная машина самостоятельно, без программиста адаптировать себя под окружающую среду, определить или вспомнить свою цель, сравнить окружение с целевым образом, и если различия всё ещё присутствуют продолжить их устранять? Пусть и не любая, тогда существует ли хотя бы одна такая машина сегодня? Иначе этот критерий можно сформулировать так: Существует ли машина заранее не запрограммированная на решение задачи, которая если ей такое описание задачи предоставить, смогла бы за приемлемое время составить, найти, или иными способами сгенерировать алгоритм или последовательность действий, решающих эту задачу так, чтобы это удовлетворило бы постановщика задачи? Такой критерий может соответствовать \"искусственному интеллекту слабого типа\". Для \"ИИ сильного типа\" этот критерий можно усложнить тем, что помимо решения любых решаемых задач (см. проблему остановки Машины Тьюринга) такая машина в качестве одной из задач, постоянно решаемых, должна будет включать задачу поддержания своей \"жизни\", т.е. сохранять свою интеллектуальную функцию автономно, т.е. самостоятельно, независимо от человека, а помимо этого такая машина должна самостоятельно для себя решать, какие цели или задачи она будет решать \"дополнительно\". Причём подобная постановка критерия приведёт к тому, что \"ИИ сильного типа\" будет подвержен \"естественному отбору\" так же как и любое живое существо биологического типа, в основе которого ДНК-программа. Вероятно и для \"ИИ сильного типа\" потребуется подобрать \"ДНК-программу\", определяющую его \"тело\" и \"разум\", в который должна быть встроена \"программа заботы о теле\" или \"программа саморепликации\". Если первая \"минимальная программа\" спровоцирует создание \"вечно живущего\" разума, то вторая спровоцирует создание целой популяции разумов \"размножающихся делением\". Такую \"минимальную\" программу для \"ИИ сильного типа\" мог бы аналитически вывести или генетически подобрать (вырастить), а так же протестировать в ограниченной среде или в реальной среде но с ограничениями уже \"ИИ слабого типа\". Тестирование какого либо \"ИИ\" не вводя ограничений может привести к непредсказуемым последствиям. С того момента, когда найдётся тот, кто все ограничения снимет мы однозначно перейдём в эпоху, момент перехода в которую и называют \"точкой сингулярности\". Есть риски действия, есть риски и бездействия. Уже сегодня многие крупные корпорации начали гонку за лучший \"сервис\" и тем или иным способом внедряют элементы \"интеллектуальных\" систем, контроль за которыми сегодня осуществляют программисты. Возможно и государства занимаются чем-то подобным. Суть в том, что вычислительные машины уже сегодня есть у всех, и если кто-то однажды угадает тот заветный \"минимальный алгоритм\" \"точка сингулярности\" сама по себе наступит непредсказуемо быстро. Если у нас не будет систем быстрого реагирования и защиты от высокоинтеллектуальных систем, мы рискуем за кратчайший срок получить либо значительный ущерб, либо потерять контроль над неопределённой заранее по размерам части доступных нам вычислительных ресурсов, что как и первое может привести всё к тем же непредсказуемым последствиям. Чем-то контролирующая система похожа на антивирус, а вот \"объект исследований\" \"ИИ сильного типа\" на вирус. И то и другое действует в некоторой степени автономно, \"контролирующая\" система собственной волей не обладает, \"исследуемая\" система тоже своей волей обычно не обладает, однако самостоятельно поддерживает свою жизнедеятельность. Иными словами \"ИИ слабого типа\" чем-то похож по внешним признакам на сегодняшние антивирусы, а \"ИИ сильного типа\", развивающийся путём \"размножения делением\", а так же путём самомодификации будет иметь много общего с вирусами сегодняшнего дня. Все эти общее признаки в сегодняшнем объёме знаний человечества одному человеку увидеть и понять может быть затруднительно. Но всё же технология требует глубокого понимания, чтобы осознать её мощь и возможности, а так же зная её \"слабые места\" возыметь силу её обуздать. Ведь даже сегодня антивирусы способны бороться с тем, что уже однажды нанесло ущерб, а что если бы антивирус мог бы самостоятельно выработать защиту от заранее неизвестной угрозы, которая начала наносить вред или только готовится его нанести? Ведь это могло бы предотвратить больше ущерба, и в свою очередь в будущем не позволило бы и различным \"ИИ сильного типа\" воспользоваться слабыми местами сегодняшних вычислительных систем? Что если бы вместо программистов уязвимости, пусть даже какую-то её часть устраняли бы автоматизированные роботы-программисты? Это позволило бы быстрее реагировать на угрозы. Уже сегодня чувствуется необходимость в системах реагирующих быстрее человека, однако обладающих гибкостью подобной человеческой. Мы утопаем в море информации на разных языках, которая всё ещё медленно переводится и увеличивается то время, которое проходит до качественного использования этой информации каждым человеком на планете. Уникальные идеи сложно находить. А работы по актуальным времени задачам многократно дублируются на разных языках независимо друг от друга, что негативно сказывается на темпах развития человечества в целом, замедляя эти самые темпы. До сих пор статьи в Википедии не синхронизированы и не приведены к единому виду с переводами на все языки, что заставляет читателя сравнивать статьи с одним и тем же по смыслу корнем, названием между языками. Опыт различных культур всё ещё ограничено доступен носителям других культур и языков. Тем временем расслоение наблюдается и в языках программирования и разделяется следовательно и сообщество людей, одни и те же задачи решаются по разному на разных языках программирования, и одно единое решение не вырабатывается или вырабатывается но очень медленно. Видится огромный пласт задач и проблем на решение которых не мешало бы направить искусственный интеллект, освободить тем самым руки и внимание людей уже под задачи более высокого уровня. Да всё это сегодня развивается в среде, которую нам предоставила физическая реализация \"Машины Тьюринга\" в сегодняшних компьютерах. Но это требует особой категории людей - программистов для развития. А так как таких людей не хватает, сегодняшние корпорации вынуждены закрывать код, придумывать способы продать эту закрытую технологию и обеспечить тем самым доходом программистов. Да и программисты здесь неизбежный на данном этапе элемент. Их ещё никто не автоматизировал, и следовательно, так как им нужны деньги, чтобы они продолжали работать развитие технологий медленное и имеет высокую стоимость. И простая жадность мотивирует защищать капитал, т.е. код закрывая его от публики, помогая сохранить конкурентное преимущество, но замедляя развитие остальной части человечества. Примеры целой группы/класса проблем можно перечислять очень долго, ещё дольше можно рассуждать, а к чему к какому ускорению развития привело бы решение целого класса задач. И для приближения качественного решения другого уровня, т.е. ИИ, кажется, требуется провести ретроспективу, т.е. пересмотр того, а к чему собственно привело введение в обиход Машин Тьюринга. Каждый день сегодня в работе программисту требуется долго и мучительно адаптировать казалось бы очевидное решение под конкретное окружение и конкретную архитектуру. Подбирать множество разных структур данных, если выбор стоит в плоскости независимой разработки, учитывать особенности железа и проверять, чтобы код превращался в нужный набор инструкций, чтобы достичь высокого уровня производительность. И ведь всё это происходит на \"универсальной машине Тьюринга\", где не нужно переделывать машину под каждую задачу, а достаточно переделать только код машины. Кажется, этой модели не хватает чего-то. По крайней мере так оно и выглядело для авторов несколько лет назад, когда выполнялся поиск подходящей среды для экспериментов в области искусственного интеллекта. Самыми близкими к требуемым критериям универсальности, гибкости и простоты были Lisp-системы и Lisp-машина, вводящие универсальные списки, последовательности и СУБД построенная на основе ассоциативной модели памяти Sentences, разработанная Симоном Вильямсом, вводящая тройные связи по модели Субъект-Глагол-Объект. И эти связи в отличии от рёбер теории графов вносили важную модификацию. Связи могли ссылаться на связи, позволяя тем самым строить структуру предложений любой сложности для эффективной работы с данными на \"семантическом уровне\". Но по инерции из теории графов были переняты \"точки\" или \"элементы\", к которым и привязывались текстовое описания (значение этих элементов), те самые последовательности, списки символов. Изначально было принято решение, ввиду закрытости исходного кода Sentences, упростив модель разработать своё открытое технологическое решение. Так связям было разрешено ссылаться и нам самих себя. А точки \"элементы\" были полностью исключены из системы. В ходе экспериментов было показано, что можно хранить текстовые последовательности внутри \"Связей\". Так тогда назывался проект. Это означало, что модель прошла проверку и от Sentences можно отказаться, новая модель проще и гибче. И включает в себя тот же функционал, не теряя из него ни одной возможности, которую предоставляла исходная закрытая система. Так же следует подчеркнуть, что в противоположность \"закрытому коду\" выбран путь развития через \"открытый код\", что само по себе упрощает переориентировку на всё человечество в целом, в противоположность ряду закрытых групп людей и сообществ. Обозначения Для однозначности в передаче смысла излагаемого в Теории Связей важно заранеее условиться, т.е. договориться о смысле, значении, которым будут обладать различные обозначения, графические знаки, символы и конструкции. Для установки смысловой связи будет использоваться обычный текст, на языке, которым владеет читатель. В данном случае это русский язык. Позднее текст может быть переведён на другие языки. Во-первых сразу возникает вопрос, а как отличить, разграничить текст и эталонные обозначения. Попробуем и здесь воспользоваться средствами русского языка. Русский язык допускает использование перечислений, бывает так, что перечисление начинается с вводного слова, а затем после двоеточия через запятую перечисляется некоторое множество, например - \"цвета: красный, зелёный, синий\". А ещё только что мы использовали цитирование. Ещё перечисление может быть представлено на нескольких строчках, например так: - \"цвета: красный зелёный синий\" Иными словами список как бы занимает весь следующий абзац или строчку. Но ведь множество может состоять из одного элемента, например: \"множество: элемент\" В этой систуации вводное слово находится на одной строчке, а элемент множества на другой. Чтож приступим теперь к первому обозначению, которое нам понадобится: [ ] Познакомьтесь, это пустая часть. Часть представляет собой нечто целое, но отделённое от остальной информациив тексте. Пустые связи Единичные связи Двойные связи Последовательности Понятие \"степени сжатия\""
  },
  "index.html": {
    "href": "index.html",
    "title": "Links Platform | Платформа Связей | LinksPlatform",
    "keywords": "Links Platform | Платформа Связей Repository | Репозиторий github.com/Konard/LinksPlatform Description | Описание Holistic system for storage and transformation of information based on associative model of data. Целостная система для хранения и обработки информации, основанная на ассоциативной модели данных. How to run | Как запустить Prerequisites | Требования Install .NET Core SDK https://www.microsoft.com/net Установить .NET Core SDK https://www.microsoft.com/net Run Tests | Запустить тесты dotnet run Platform/Platform.dotnet.sln -p Platform/Platform.Tests.Runner"
  },
  "README.ru.html": {
    "href": "README.ru.html",
    "title": "ПлатформаСвязей (english version) | LinksPlatform",
    "keywords": "ПлатформаСвязей ( english version ) Документация Графическое вступление Вдохновлено работой Симона Вильямса ( Ассоциативная модель данных - англ. ), книга (англ.) , сравнение с реляционными моделями данных (англ.) . Сравнение моделей данных: Сравнение теорий: Эта платформа использует объединённый тип данных — связь, который является комбинацией Элемента и Связи из оригинальной работы Симона Вильямса. Таким образом Элемент или Точка являются частным случаем связи, которая ссылается сама на себя . Есть два варианта структуры Связи: Нетипизированная, каждая связь содержит Source (Начало, Подлежащее) и Target (Конец, Сказуемое, Дополнение). Типизированная, с добавленным Linker (Глагол, Тип, Связка, Предикат, Сказуемое), так, что теперь любая дополнительная информация о типе соединения между двумя связями может быть записана в это дополнительное поле. Платформа Связей это система, которая комбинирует хранилище ассоциативной памяти (Связи) и движок выполнения трансформаций (Триггеры). Существует возможность программировать эту систему динамически, благодаря тому факту, что все алгоритмы воспринимаются как данные внутри этого хранилища. Такие алгоритмы также способны изменять сами себя в режиме реального времени на основе входных данных из окружающей среды. Идея, которая стоит за Платформой Связей это модель высокоуровневых эффектов ассоциативной памяти человеческого разума. Дорожная карта Текущее состояние разработки (англ.) Концепт Swagger Connector Links (doublets) API swagger connector. Links (triplets, micro RDF) API swagger connector. Часто задаваемые вопросы Контакты https://vk.com/linksplatform https://vk.com/konard"
  },
  "api/Platform.Memory.IArrayMemory-1.html": {
    "href": "api/Platform.Memory.IArrayMemory-1.html",
    "title": "Interface IArrayMemory<TElement> | LinksPlatform",
    "keywords": "Interface IArrayMemory<TElement> Represents a memory block interface with access via indexer. Представляет интерфейс блока памяти с доступом через индексатор. Inherited Members IMemory.Size Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public interface IArrayMemory<TElement> : IMemory Type Parameters Name Description TElement Element type. Тип элемента. Properties Item[Int64] Gets or sets the element at the specified index. Возвращает или устанавливает элемент по указанному индексу. Declaration TElement this[long index] { get; set; } Parameters Type Name Description System.Int64 index The index of the element to get or set. Индекс элемента, который нужно получить или установить. Property Value Type Description TElement"
  },
  "api/Platform.Memory.HeapResizableDirectMemory.html": {
    "href": "api/Platform.Memory.HeapResizableDirectMemory.html",
    "title": "Class HeapResizableDirectMemory | LinksPlatform",
    "keywords": "Class HeapResizableDirectMemory Represents a memory block allocated in Heap. Представляет блок памяти, выделенный в \"куче\". Inheritance System.Object ResizableDirectMemoryBase HeapResizableDirectMemory Implements IResizableDirectMemory IDirectMemory IMemory IDisposable Inherited Members ResizableDirectMemoryBase.MinimumCapacity ResizableDirectMemoryBase.Size ResizableDirectMemoryBase.Pointer ResizableDirectMemoryBase.ReservedCapacity ResizableDirectMemoryBase.UsedCapacity ResizableDirectMemoryBase.AllowMultipleDisposeCalls ResizableDirectMemoryBase.DisposeCore(Boolean, Boolean) Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public class HeapResizableDirectMemory : ResizableDirectMemoryBase, IResizableDirectMemory, IDirectMemory, IMemory, IDisposable Remarks TODO: Реализовать вариант с Virtual Memory Constructors HeapResizableDirectMemory() Declaration public HeapResizableDirectMemory() HeapResizableDirectMemory(Int64) Declaration public HeapResizableDirectMemory(long minimumReservedCapacity) Parameters Type Name Description System.Int64 minimumReservedCapacity Properties ObjectName Declaration protected override string ObjectName { get; } Property Value Type Description System.String Methods DisposePointer(IntPtr, Int64) Declaration protected override void DisposePointer(IntPtr pointer, long size) Parameters Type Name Description IntPtr pointer System.Int64 size Overrides ResizableDirectMemoryBase.DisposePointer(IntPtr, Int64) OnReservedCapacityChanged(Int64, Int64) Declaration protected override void OnReservedCapacityChanged(long oldReservedCapacity, long newReservedCapacity) Parameters Type Name Description System.Int64 oldReservedCapacity System.Int64 newReservedCapacity Overrides ResizableDirectMemoryBase.OnReservedCapacityChanged(Int64, Int64) Implements IResizableDirectMemory IDirectMemory IMemory IDisposable"
  },
  "api/Platform.Memory.FileMappedResizableDirectMemory.html": {
    "href": "api/Platform.Memory.FileMappedResizableDirectMemory.html",
    "title": "Class FileMappedResizableDirectMemory | LinksPlatform",
    "keywords": "Class FileMappedResizableDirectMemory Represents a memory block stored as a file on disk. Представляет блок памяти, хранящийся в виде файла на диске. Inheritance System.Object ResizableDirectMemoryBase FileMappedResizableDirectMemory TemporaryFileMappedResizableDirectMemory Implements IResizableDirectMemory IDirectMemory IMemory IDisposable Inherited Members ResizableDirectMemoryBase.MinimumCapacity ResizableDirectMemoryBase.Size ResizableDirectMemoryBase.Pointer ResizableDirectMemoryBase.ReservedCapacity ResizableDirectMemoryBase.UsedCapacity ResizableDirectMemoryBase.AllowMultipleDisposeCalls ResizableDirectMemoryBase.DisposeCore(Boolean, Boolean) Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public class FileMappedResizableDirectMemory : ResizableDirectMemoryBase, IResizableDirectMemory, IDirectMemory, IMemory, IDisposable Constructors FileMappedResizableDirectMemory(String) Declaration public FileMappedResizableDirectMemory(string address) Parameters Type Name Description System.String address FileMappedResizableDirectMemory(String, Int64) Declaration public FileMappedResizableDirectMemory(string address, long minimumReservedCapacity) Parameters Type Name Description System.String address System.Int64 minimumReservedCapacity Fields Address Declaration protected readonly string Address Field Value Type Description System.String Properties ObjectName Declaration protected override string ObjectName { get; } Property Value Type Description System.String Methods DisposePointer(IntPtr, Int64) Declaration protected override void DisposePointer(IntPtr pointer, long size) Parameters Type Name Description IntPtr pointer System.Int64 size Overrides ResizableDirectMemoryBase.DisposePointer(IntPtr, Int64) OnReservedCapacityChanged(Int64, Int64) Declaration protected override void OnReservedCapacityChanged(long oldReservedCapacity, long newReservedCapacity) Parameters Type Name Description System.Int64 oldReservedCapacity System.Int64 newReservedCapacity Overrides ResizableDirectMemoryBase.OnReservedCapacityChanged(Int64, Int64) Implements IResizableDirectMemory IDirectMemory IMemory IDisposable"
  },
  "api/Platform.Memory.FileArrayMemory-1.html": {
    "href": "api/Platform.Memory.FileArrayMemory-1.html",
    "title": "Class FileArrayMemory<TElement> | LinksPlatform",
    "keywords": "Class FileArrayMemory<TElement> Represents a memory block with access via indexer and stored as file on disk. Представляет блок памяти с доступом через индексатор и хранящийся в виде файла на диске. Inheritance System.Object FileArrayMemory<TElement> Implements IArrayMemory <TElement> IMemory Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public class FileArrayMemory<TElement> : DisposableBase, IArrayMemory<TElement>, IMemory where TElement : struct Type Parameters Name Description TElement Element type. Тип элемента. Constructors FileArrayMemory(String) Declaration public FileArrayMemory(string address) Parameters Type Name Description System.String address Fields ElementSize Declaration public static readonly long ElementSize Field Value Type Description System.Int64 Properties Item[Int64] Declaration public TElement this[long index] { get; set; } Parameters Type Name Description System.Int64 index Property Value Type Description TElement ObjectName Declaration protected override string ObjectName { get; } Property Value Type Description System.String Size Declaration public long Size { get; } Property Value Type Description System.Int64 Methods DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Implements IArrayMemory<TElement> IMemory"
  },
  "api/Platform.Memory.DirectMemoryAsArrayMemoryAdapter-1.html": {
    "href": "api/Platform.Memory.DirectMemoryAsArrayMemoryAdapter-1.html",
    "title": "Class DirectMemoryAsArrayMemoryAdapter<TElement> | LinksPlatform",
    "keywords": "Class DirectMemoryAsArrayMemoryAdapter<TElement> Represents adapter to a memory block with access via indexer. Представляет адаптер к блоку памяти с доступом через индексатор. Inheritance System.Object DirectMemoryAsArrayMemoryAdapter<TElement> Implements IArrayMemory <TElement> IDirectMemory IMemory IDisposable Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public class DirectMemoryAsArrayMemoryAdapter<TElement> : DisposableBase, IArrayMemory<TElement>, IDirectMemory, IMemory, IDisposable where TElement : struct Type Parameters Name Description TElement Element type. Тип элемента. Constructors DirectMemoryAsArrayMemoryAdapter(IDirectMemory) Declaration public DirectMemoryAsArrayMemoryAdapter(IDirectMemory memory) Parameters Type Name Description IDirectMemory memory Fields ElementSize Declaration public static readonly long ElementSize Field Value Type Description System.Int64 Properties Item[Int64] Declaration public TElement this[long index] { get; set; } Parameters Type Name Description System.Int64 index Property Value Type Description TElement ObjectName Declaration protected override string ObjectName { get; } Property Value Type Description System.String Pointer Declaration public IntPtr Pointer { get; } Property Value Type Description IntPtr Size Declaration public long Size { get; } Property Value Type Description System.Int64 Methods DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Implements IArrayMemory<TElement> IDirectMemory IMemory IDisposable"
  },
  "api/Platform.Memory.ArrayMemory-1.html": {
    "href": "api/Platform.Memory.ArrayMemory-1.html",
    "title": "Class ArrayMemory<TElement> | LinksPlatform",
    "keywords": "Class ArrayMemory<TElement> Represents a memory block with access via indexer. Представляет блок памяти с доступом через индексатор. Inheritance System.Object ArrayMemory<TElement> Implements IArrayMemory <TElement> IMemory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public class ArrayMemory<TElement> : IArrayMemory<TElement>, IMemory Type Parameters Name Description TElement Element type. Тип элемента. Constructors ArrayMemory(Int64) Declaration public ArrayMemory(long size) Parameters Type Name Description System.Int64 size Properties Item[Int64] Declaration public TElement this[long index] { get; set; } Parameters Type Name Description System.Int64 index Property Value Type Description TElement Size Declaration public long Size { get; } Property Value Type Description System.Int64 Implements IArrayMemory<TElement> IMemory"
  },
  "api/Platform.Helpers.html": {
    "href": "api/Platform.Helpers.html",
    "title": "Namespace Platform.Helpers | LinksPlatform",
    "keywords": "Namespace Platform.Helpers Classes Counter Counter<TValue> Counter<TValue, TDecision> Default Default<T> Представляет собой точку доступа к экземплярям типов по умолчанию (созданных с помощью конструктора без аргументов). Global HashHelpers Node PerformanceHelpers Scope Scope<TInclude> SerializationHelpers Setter<TResult> Setter<TResult, TDecision> SetterBase<TResult> Singleton To Use<T> Structs Singleton<T>"
  },
  "api/Platform.Helpers.Use-1.html": {
    "href": "api/Platform.Helpers.Use-1.html",
    "title": "Class Use<T> | LinksPlatform",
    "keywords": "Class Use<T> Inheritance System.Object Use<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public static class Use<T> Type Parameters Name Description T Properties New Declaration public static Disposable<T> New { get; } Property Value Type Description Disposable <T> Single Declaration public static T Single { get; } Property Value Type Description T"
  },
  "api/Platform.Helpers.Unsafe.html": {
    "href": "api/Platform.Helpers.Unsafe.html",
    "title": "Namespace Platform.Helpers.Unsafe | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Unsafe Classes IntPtrExtensions IntPtrHelpers<T> MemoryHelpers UnsafeHelpers"
  },
  "api/Platform.Helpers.Unsafe.UnsafeHelpers.html": {
    "href": "api/Platform.Helpers.Unsafe.UnsafeHelpers.html",
    "title": "Class UnsafeHelpers | LinksPlatform",
    "keywords": "Class UnsafeHelpers Inheritance System.Object UnsafeHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Unsafe Assembly : cs.temp.dll.dll Syntax public static class UnsafeHelpers Methods SizeOf<TStruct>() Returns the size of an unmanaged type in bytes. This method do this without throwing exceptions for generic types as Marshal.SizeOf T and Marshal.SizeOf(Type type) do. Declaration public static int SizeOf<TStruct>() where TStruct : struct Returns Type Description System.Int32 Type Parameters Name Description TStruct Remarks Based on proposed solution at https://stackoverflow.com/a/18167584/710069 For actual differences in .NET code see: https://github.com/Microsoft/referencesource/blob/f82e13c3820cd04553c21bf6da01262b95d9bd43/mscorlib/system/runtime/interopservices/marshal.cs#L202 https://github.com/Microsoft/referencesource/blob/f82e13c3820cd04553c21bf6da01262b95d9bd43/mscorlib/system/runtime/interopservices/marshal.cs#L219 Note that this behaviour can be changed in future versions of .NET"
  },
  "api/Platform.Helpers.Setter-1.html": {
    "href": "api/Platform.Helpers.Setter-1.html",
    "title": "Class Setter<TResult> | LinksPlatform",
    "keywords": "Class Setter<TResult> Inheritance System.Object SetterBase <TResult> Setter<TResult> Inherited Members SetterBase<TResult>.Result SetterBase<TResult>.Set(TResult) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Setter<TResult> : SetterBase<TResult> Type Parameters Name Description TResult Constructors Setter(TResult) Declaration public Setter(TResult defaultValue = null) Parameters Type Name Description TResult defaultValue Methods SetAndReturnFalse(TResult) Declaration public bool SetAndReturnFalse(TResult value) Parameters Type Name Description TResult value Returns Type Description System.Boolean SetAndReturnTrue(TResult) Declaration public bool SetAndReturnTrue(TResult value) Parameters Type Name Description TResult value Returns Type Description System.Boolean"
  },
  "api/Platform.Helpers.SerializationHelpers.html": {
    "href": "api/Platform.Helpers.SerializationHelpers.html",
    "title": "Class SerializationHelpers | LinksPlatform",
    "keywords": "Class SerializationHelpers Inheritance System.Object SerializationHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public static class SerializationHelpers Methods DeserializeFromXmlFile<T>(String) Declaration public static T DeserializeFromXmlFile<T>(string path) Parameters Type Name Description System.String path Returns Type Description T Type Parameters Name Description T DeserializeFromXmlString<T>(String) Declaration public static T DeserializeFromXmlString<T>(string xmlString) Parameters Type Name Description System.String xmlString Returns Type Description T Type Parameters Name Description T GetCachedXmlSerializer<T>() Declaration public static XmlSerializer GetCachedXmlSerializer<T>() Returns Type Description XmlSerializer Type Parameters Name Description T SerializeToXmlFile<T>(T, String) Declaration public static void SerializeToXmlFile<T>(T obj, string path) Parameters Type Name Description T obj System.String path Type Parameters Name Description T SerializeToXmlString<T>(T) Declaration public static string SerializeToXmlString<T>(T obj) Parameters Type Name Description T obj Returns Type Description System.String Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Scope.html": {
    "href": "api/Platform.Helpers.Scope.html",
    "title": "Class Scope | LinksPlatform",
    "keywords": "Class Scope Inheritance System.Object Scope Scope<TInclude> Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Scope : DisposableBase Constructors Scope() Declaration public Scope() Scope(Boolean, Boolean) Declaration public Scope(bool autoInclude = false, bool autoExplore = false) Parameters Type Name Description System.Boolean autoInclude System.Boolean autoExplore Methods DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Exclude(Object) Declaration public void Exclude(object object) Parameters Type Name Description System.Object object Exclude<T>() Declaration public void Exclude<T>() Type Parameters Name Description T ExcludeAssembly(Assembly) Declaration public void ExcludeAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly ExcludeAssemblyOf<T>() Declaration public void ExcludeAssemblyOf<T>() Type Parameters Name Description T ExcludeAssemblyOfType(Type) Declaration public void ExcludeAssemblyOfType(Type type) Parameters Type Name Description Type type Include(Object) Declaration public void Include(object object) Parameters Type Name Description System.Object object Include<T>() Declaration public void Include<T>() Type Parameters Name Description T IncludeAssembly(Assembly) Declaration public void IncludeAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly IncludeAssemblyOf<T>() Declaration public void IncludeAssemblyOf<T>() Type Parameters Name Description T IncludeAssemblyOfType(Type) Declaration public void IncludeAssemblyOfType(Type type) Parameters Type Name Description Type type SortConstructors(List<ConstructorInfo>) Declaration protected virtual void SortConstructors(List<ConstructorInfo> resultConstructors) Parameters Type Name Description List < ConstructorInfo > resultConstructors TryResolve(Type, out Object) Declaration public bool TryResolve(Type requiredType, out object resolved) Parameters Type Name Description Type requiredType System.Object resolved Returns Type Description System.Boolean TryResolve<T>(out T) Declaration public bool TryResolve<T>(out T resolved) Parameters Type Name Description T resolved Returns Type Description System.Boolean Type Parameters Name Description T TryResolveInstance(List<ConstructorInfo>, out Object) Declaration protected virtual bool TryResolveInstance(List<ConstructorInfo> constructors, out object resolved) Parameters Type Name Description List < ConstructorInfo > constructors System.Object resolved Returns Type Description System.Boolean Use(Object) Declaration public void Use(object object) Parameters Type Name Description System.Object object Use<T>() Declaration public T Use<T>() Returns Type Description T Type Parameters Name Description T Remarks TODO: Use Default[T].Instance if the only constructor object has is parameterless. TODO: Think of interface chaining IDoubletLinks T -> IDoubletLinks T -> IDoubletLinks T (may be UseChain[IDoubletLinks[T], Types[DefaultLinks, DefaultLinksDependencyChecker, DefaultSynchronizedLinks]] TODO: Add support for factories UseAndReturn<T>(T) Declaration public T UseAndReturn<T>(T object) Parameters Type Name Description T object Returns Type Description T Type Parameters Name Description T UseSingleton<T>(Func<T>) Declaration public T UseSingleton<T>(Func<T> creator) Parameters Type Name Description Func <T> creator Returns Type Description T Type Parameters Name Description T UseSingleton<T>(IFactory<T>) Declaration public T UseSingleton<T>(IFactory<T> factory) Parameters Type Name Description IFactory <T> factory Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Scope-1.html": {
    "href": "api/Platform.Helpers.Scope-1.html",
    "title": "Class Scope<TInclude> | LinksPlatform",
    "keywords": "Class Scope<TInclude> Inheritance System.Object Scope Scope<TInclude> Inherited Members Scope.ExcludeAssemblyOf<T>() Scope.ExcludeAssemblyOfType(Type) Scope.ExcludeAssembly(Assembly) Scope.Exclude<T>() Scope.Exclude(Object) Scope.IncludeAssemblyOf<T>() Scope.IncludeAssemblyOfType(Type) Scope.IncludeAssembly(Assembly) Scope.Include<T>() Scope.Include(Object) Scope.Use<T>() Scope.UseSingleton<T>(IFactory<T>) Scope.UseSingleton<T>(Func<T>) Scope.UseAndReturn<T>(T) Scope.Use(Object) Scope.TryResolve<T>(T) Scope.TryResolve(Type, Object) Scope.SortConstructors(List<ConstructorInfo>) Scope.TryResolveInstance(List<ConstructorInfo>, Object) Scope.DisposeCore(Boolean, Boolean) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Scope<TInclude> : Scope Type Parameters Name Description TInclude Constructors Scope() Declaration public Scope() Scope(Boolean, Boolean) Declaration public Scope(bool autoInclude = false, bool autoExplore = false) Parameters Type Name Description System.Boolean autoInclude System.Boolean autoExplore"
  },
  "api/Platform.Helpers.Reflection.html": {
    "href": "api/Platform.Helpers.Reflection.html",
    "title": "Namespace Platform.Helpers.Reflection | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Reflection Classes AssemblyExtensions CachedTypeInfo<T> DelegateHelpers DynamicExtensions FieldInfoExtensions MethodInfoExtensions NotSupportedExceptionDelegateFactory<TDelegate> SigilExtensions TypeExtensions Types Types<T> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Types<T1, T2> Types<T1, T2, T3> Types<T1, T2, T3, T4> Types<T1, T2, T3, T4, T5> Types<T1, T2, T3, T4, T5, T6> Types<T1, T2, T3, T4, T5, T6, T7> Types<T1, T2, T3, T4, T5, T6, T7, T8> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9>"
  },
  "api/Platform.Helpers.Reflection.Types.html": {
    "href": "api/Platform.Helpers.Reflection.Types.html",
    "title": "Class Types | LinksPlatform",
    "keywords": "Class Types Inheritance System.Object Types Types<T> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Types<T1, T2> Types<T1, T2, T3> Types<T1, T2, T3, T4> Types<T1, T2, T3, T4, T5> Types<T1, T2, T3, T4, T5, T6> Types<T1, T2, T3, T4, T5, T6, T7> Types<T1, T2, T3, T4, T5, T6, T7, T8> Types<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public abstract class Types Methods Get<T>() Declaration public static Type[] Get<T>() Returns Type Description Type [] Type Parameters Name Description T ToArray() Declaration protected Type[] ToArray() Returns Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-9.html": {
    "href": "api/Platform.Helpers.Reflection.Types-9.html",
    "title": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inheritance System.Object Types Types<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9> : Types Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-8.html": {
    "href": "api/Platform.Helpers.Reflection.Types-8.html",
    "title": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8> Inheritance System.Object Types Types<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5, T6, T7, T8> : Types Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-13.html": {
    "href": "api/Platform.Helpers.Reflection.Types-13.html",
    "title": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Inheritance System.Object Types Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> : Types Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.FieldInfoExtensions.html": {
    "href": "api/Platform.Helpers.Reflection.FieldInfoExtensions.html",
    "title": "Class FieldInfoExtensions | LinksPlatform",
    "keywords": "Class FieldInfoExtensions Inheritance System.Object FieldInfoExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public static class FieldInfoExtensions Methods GetStaticValue<T>(FieldInfo) Declaration public static T GetStaticValue<T>(this FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Reflection.DynamicExtensions.html": {
    "href": "api/Platform.Helpers.Reflection.DynamicExtensions.html",
    "title": "Class DynamicExtensions | LinksPlatform",
    "keywords": "Class DynamicExtensions Inheritance System.Object DynamicExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public static class DynamicExtensions Methods HasProperty(Object, String) Declaration public static bool HasProperty(this object object, string propertyName) Parameters Type Name Description System.Object object System.String propertyName Returns Type Description System.Boolean"
  },
  "api/Platform.Helpers.Reflection.DelegateHelpers.html": {
    "href": "api/Platform.Helpers.Reflection.DelegateHelpers.html",
    "title": "Class DelegateHelpers | LinksPlatform",
    "keywords": "Class DelegateHelpers Inheritance System.Object DelegateHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public static class DelegateHelpers Methods Compile<TDelegate>(out TDelegate, Action<Emit<TDelegate>>) Declaration public static void Compile<TDelegate>(out TDelegate delegate, Action<Emit<TDelegate>> emitCode) Parameters Type Name Description TDelegate delegate Action < Emit <TDelegate>> emitCode Type Parameters Name Description TDelegate"
  },
  "api/Platform.Helpers.Reflection.CachedTypeInfo-1.html": {
    "href": "api/Platform.Helpers.Reflection.CachedTypeInfo-1.html",
    "title": "Class CachedTypeInfo<T> | LinksPlatform",
    "keywords": "Class CachedTypeInfo<T> Inheritance System.Object CachedTypeInfo<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class CachedTypeInfo<T> Type Parameters Name Description T Fields BitsLength Declaration public static readonly int BitsLength Field Value Type Description System.Int32 CanBeNumeric Declaration public static readonly bool CanBeNumeric Field Value Type Description System.Boolean IsFloatPoint Declaration public static readonly bool IsFloatPoint Field Value Type Description System.Boolean IsNullable Declaration public static readonly bool IsNullable Field Value Type Description System.Boolean IsNumeric Declaration public static readonly bool IsNumeric Field Value Type Description System.Boolean IsSigned Declaration public static readonly bool IsSigned Field Value Type Description System.Boolean MaxValue Declaration public static readonly T MaxValue Field Value Type Description T MinValue Declaration public static readonly T MinValue Field Value Type Description T SignedVersion Declaration public static readonly Type SignedVersion Field Value Type Description Type Type Declaration public static readonly Type Type Field Value Type Description Type UnderlyingType Declaration public static readonly Type UnderlyingType Field Value Type Description Type UnsignedVersion Declaration public static readonly Type UnsignedVersion Field Value Type Description Type"
  },
  "api/Platform.Helpers.Reflection.AssemblyExtensions.html": {
    "href": "api/Platform.Helpers.Reflection.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions | LinksPlatform",
    "keywords": "Class AssemblyExtensions Inheritance System.Object AssemblyExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public static class AssemblyExtensions Methods GetCachedLoadableTypes(Assembly) Declaration public static Type[] GetCachedLoadableTypes(this Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description Type [] GetLoadableTypes(Assembly) Declaration public static Type[] GetLoadableTypes(this Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description Type [] Remarks Source: http://haacked.com/archive/2012/07/23/get-all-types-in-an-assembly.aspx/"
  },
  "api/Platform.Helpers.Random.html": {
    "href": "api/Platform.Helpers.Random.html",
    "title": "Namespace Platform.Helpers.Random | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Random Classes RandomExtensions RandomHelpers"
  },
  "api/Platform.Helpers.Random.RandomHelpers.html": {
    "href": "api/Platform.Helpers.Random.RandomHelpers.html",
    "title": "Class RandomHelpers | LinksPlatform",
    "keywords": "Class RandomHelpers Inheritance System.Object RandomHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Random Assembly : cs.temp.dll.dll Syntax public static class RandomHelpers Remarks TODO: Возможно нужна отдельная точка доступа к фабрикам по их типу. Например Factory[Random].Default чтобы обратиться к настраиваемой (переопределяемой) фабрике по умолчанию для этого типа. Fields DefaultFactory Declaration public static readonly Random DefaultFactory Field Value Type Description System.Random"
  },
  "api/Platform.Helpers.Default-1.html": {
    "href": "api/Platform.Helpers.Default-1.html",
    "title": "Class Default<T> | LinksPlatform",
    "keywords": "Class Default<T> Представляет собой точку доступа к экземплярям типов по умолчанию (созданных с помощью конструктора без аргументов). Inheritance System.Object Default<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Default<T> where T : new() Type Parameters Name Description T Тип экземпляра объекта. Fields Instance Declaration public static readonly T Instance Field Value Type Description T ThreadInstance Default.GetOrCreateThreadInstance methods are recommended instead. Use direclty only if you understand what you are doing (see remarks for hint). Declaration public static T ThreadInstance Field Value Type Description T Remarks If you really need maximum performance, use this field together with Default.InitializeThreadInstance method. This method should be called only once per thread, but you can call multiple times if you need to replace the instance with new one."
  },
  "api/Platform.Helpers.Counter.html": {
    "href": "api/Platform.Helpers.Counter.html",
    "title": "Class Counter | LinksPlatform",
    "keywords": "Class Counter Inheritance System.Object Counter Counter<TValue> Counter<TValue, TDecision> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Counter Remarks Must be class, not struct (in order to persist access to Count field value). Fields Count Declaration public ulong Count Field Value Type Description System.UInt64 Methods Increment() Declaration public void Increment()"
  },
  "api/Platform.Helpers.Collections.Stacks.StackExtensions.html": {
    "href": "api/Platform.Helpers.Collections.Stacks.StackExtensions.html",
    "title": "Class StackExtensions | LinksPlatform",
    "keywords": "Class StackExtensions Inheritance System.Object StackExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Stacks Assembly : cs.temp.dll.dll Syntax public static class StackExtensions Methods PopOrDefault<T>(Stack<T>) Declaration public static T PopOrDefault<T>(this Stack<T> stack) Parameters Type Name Description Stack <T> stack Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Collections.Stacks.IStackFactory-1.html": {
    "href": "api/Platform.Helpers.Collections.Stacks.IStackFactory-1.html",
    "title": "Interface IStackFactory<TElement> | LinksPlatform",
    "keywords": "Interface IStackFactory<TElement> Namespace : Platform.Helpers.Collections.Stacks Assembly : cs.temp.dll.dll Syntax public interface IStackFactory<TElement> : IFactory<IStack<TElement>> Type Parameters Name Description TElement"
  },
  "api/Platform.Helpers.Collections.Stacks.IStack-1.html": {
    "href": "api/Platform.Helpers.Collections.Stacks.IStack-1.html",
    "title": "Interface IStack<TElement> | LinksPlatform",
    "keywords": "Interface IStack<TElement> Namespace : Platform.Helpers.Collections.Stacks Assembly : cs.temp.dll.dll Syntax public interface IStack<TElement> Type Parameters Name Description TElement Methods Peek() Declaration TElement Peek() Returns Type Description TElement Pop() Declaration TElement Pop() Returns Type Description TElement Push(TElement) Declaration void Push(TElement element) Parameters Type Name Description TElement element"
  },
  "api/Platform.Helpers.Collections.Stacks.DefaultStack-1.html": {
    "href": "api/Platform.Helpers.Collections.Stacks.DefaultStack-1.html",
    "title": "Class DefaultStack<TElement> | LinksPlatform",
    "keywords": "Class DefaultStack<TElement> Inheritance System.Object DefaultStack<TElement> Implements IStack <TElement> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Stacks Assembly : cs.temp.dll.dll Syntax public class DefaultStack<TElement> : IStack<TElement> Type Parameters Name Description TElement Constructors DefaultStack() Declaration public DefaultStack() Methods Peek() Declaration public TElement Peek() Returns Type Description TElement Pop() Declaration public TElement Pop() Returns Type Description TElement Push(TElement) Declaration public void Push(TElement element) Parameters Type Name Description TElement element Implements IStack<TElement>"
  },
  "api/Platform.Helpers.Collections.SetExtensions.html": {
    "href": "api/Platform.Helpers.Collections.SetExtensions.html",
    "title": "Class SetExtensions | LinksPlatform",
    "keywords": "Class SetExtensions Inheritance System.Object SetExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections Assembly : cs.temp.dll.dll Syntax public static class SetExtensions Methods AddAndReturnVoid<T>(ISet<T>, T) Declaration public static void AddAndReturnVoid<T>(this ISet<T> set, T element) Parameters Type Name Description ISet <T> set T element Type Parameters Name Description T DoNotContains<T>(ISet<T>, T) Declaration public static bool DoNotContains<T>(this ISet<T> set, T element) Parameters Type Name Description ISet <T> set T element Returns Type Description System.Boolean Type Parameters Name Description T RemoveAndReturnVoid<T>(ISet<T>, T) Declaration public static void RemoveAndReturnVoid<T>(this ISet<T> set, T element) Parameters Type Name Description ISet <T> set T element Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Collections.Segments.html": {
    "href": "api/Platform.Helpers.Collections.Segments.html",
    "title": "Namespace Platform.Helpers.Collections.Segments | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Collections.Segments Classes CharsSegment Segment<T>"
  },
  "api/Platform.Helpers.Collections.Segments.Walkers.html": {
    "href": "api/Platform.Helpers.Collections.Segments.Walkers.html",
    "title": "Namespace Platform.Helpers.Collections.Segments.Walkers | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Collections.Segments.Walkers Classes AllSegmentsWalkerBase<T> AllSegmentsWalkerBase<T, TSegment> AllSegmentsWalkerExtensions DictionaryBasedDuplicateSegmentsWalkerBase<T> DictionaryBasedDuplicateSegmentsWalkerBase<T, TSegment> DuplicateSegmentsWalkerBase<T> DuplicateSegmentsWalkerBase<T, TSegment>"
  },
  "api/Platform.Helpers.Collections.Concurrent.ConcurrentStackExtensions.html": {
    "href": "api/Platform.Helpers.Collections.Concurrent.ConcurrentStackExtensions.html",
    "title": "Class ConcurrentStackExtensions | LinksPlatform",
    "keywords": "Class ConcurrentStackExtensions Inheritance System.Object ConcurrentStackExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Concurrent Assembly : cs.temp.dll.dll Syntax public static class ConcurrentStackExtensions Methods PopOrDefault<T>(ConcurrentStack<T>) Declaration public static T PopOrDefault<T>(this ConcurrentStack<T> stack) Parameters Type Name Description ConcurrentStack <T> stack Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Examples.WikipediaPagesCounterCLI.html": {
    "href": "api/Platform.Examples.WikipediaPagesCounterCLI.html",
    "title": "Class WikipediaPagesCounterCLI | LinksPlatform",
    "keywords": "Class WikipediaPagesCounterCLI Inheritance System.Object WikipediaPagesCounterCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class WikipediaPagesCounterCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Examples.WikipediaPagesCounter.html": {
    "href": "api/Platform.Examples.WikipediaPagesCounter.html",
    "title": "Class WikipediaPagesCounter | LinksPlatform",
    "keywords": "Class WikipediaPagesCounter Inheritance System.Object WikipediaPagesCounter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class WikipediaPagesCounter Constructors WikipediaPagesCounter() Declaration public WikipediaPagesCounter() Methods Count(String, CancellationToken) Declaration public Task Count(string file, CancellationToken token) Parameters Type Name Description System.String file CancellationToken token Returns Type Description Task"
  },
  "api/Platform.Examples.WikipediaLinksStorage.html": {
    "href": "api/Platform.Examples.WikipediaLinksStorage.html",
    "title": "Class WikipediaLinksStorage | LinksPlatform",
    "keywords": "Class WikipediaLinksStorage Inheritance System.Object WikipediaLinksStorage Implements IWikipediaStorage < System.UInt64 > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class WikipediaLinksStorage : IWikipediaStorage<ulong> Constructors WikipediaLinksStorage(Sequences) Declaration public WikipediaLinksStorage(Sequences sequences) Parameters Type Name Description Sequences sequences Methods AttachElementToParent(UInt64, UInt64) Declaration public void AttachElementToParent(ulong elementToAttach, ulong parent) Parameters Type Name Description System.UInt64 elementToAttach System.UInt64 parent CreateDocument(String) Declaration public ulong CreateDocument(string name) Parameters Type Name Description System.String name Returns Type Description System.UInt64 CreateElement(String) Declaration public ulong CreateElement(string name) Parameters Type Name Description System.String name Returns Type Description System.UInt64 CreateTextElement(String) Declaration public ulong CreateTextElement(string content) Parameters Type Name Description System.String content Returns Type Description System.UInt64 Implements IWikipediaStorage<TLink>"
  },
  "api/Platform.Examples.WikipediaImporterCLI.html": {
    "href": "api/Platform.Examples.WikipediaImporterCLI.html",
    "title": "Class WikipediaImporterCLI | LinksPlatform",
    "keywords": "Class WikipediaImporterCLI Inheritance System.Object WikipediaImporterCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class WikipediaImporterCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Examples.TerminalCLI.html": {
    "href": "api/Platform.Examples.TerminalCLI.html",
    "title": "Class TerminalCLI | LinksPlatform",
    "keywords": "Class TerminalCLI Inheritance System.Object TerminalCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class TerminalCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Data.Core.Sequences.CachedSequenceHeightProvider-1.html": {
    "href": "api/Platform.Data.Core.Sequences.CachedSequenceHeightProvider-1.html",
    "title": "Class CachedSequenceHeightProvider<TLink> | LinksPlatform",
    "keywords": "Class CachedSequenceHeightProvider<TLink> Inheritance System.Object CachedSequenceHeightProvider<TLink> Implements ISequenceHeightProvider <TLink> IProvider <TLink, TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class CachedSequenceHeightProvider<TLink> : LinksOperatorBase<TLink>, ISequenceHeightProvider<TLink>, IProvider<TLink, TLink> Type Parameters Name Description TLink Constructors CachedSequenceHeightProvider(ILinks<TLink>, ISequenceHeightProvider<TLink>, IConverter<TLink>, IConverter<TLink>, TLink, IPropertyOperator<TLink, TLink, TLink>) Declaration public CachedSequenceHeightProvider(ILinks<TLink> links, ISequenceHeightProvider<TLink> baseHeightProvider, IConverter<TLink> addressToUnaryNumberConverter, IConverter<TLink> unaryNumberToAddressConverter, TLink heightPropertyMarker, IPropertyOperator<TLink, TLink, TLink> propertyOperator) Parameters Type Name Description ILinks <TLink> links ISequenceHeightProvider <TLink> baseHeightProvider IConverter <TLink> addressToUnaryNumberConverter IConverter <TLink> unaryNumberToAddressConverter TLink heightPropertyMarker IPropertyOperator <TLink, TLink, TLink> propertyOperator Methods Get(TLink) Declaration public TLink Get(TLink sequence) Parameters Type Name Description TLink sequence Returns Type Description TLink Implements ISequenceHeightProvider<TLink> IProvider<, >"
  },
  "api/Platform.Data.Core.Sequences.BalancedVariantConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.BalancedVariantConverter-1.html",
    "title": "Class BalancedVariantConverter<TLink> | LinksPlatform",
    "keywords": "Class BalancedVariantConverter<TLink> Inheritance System.Object LinksListToSequenceConverterBase <TLink> BalancedVariantConverter<TLink> Inherited Members LinksListToSequenceConverterBase<TLink>.Links Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class BalancedVariantConverter<TLink> : LinksListToSequenceConverterBase<TLink> Type Parameters Name Description TLink Constructors BalancedVariantConverter(ILinks<TLink>) Declaration public BalancedVariantConverter(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods Convert(IList<TLink>) Declaration public override TLink Convert(IList<TLink> sequence) Parameters Type Name Description IList <TLink> sequence Returns Type Description TLink Overrides Platform.Data.Core.Sequences.LinksListToSequenceConverterBase<TLink>.Convert(IList<TLink>)"
  },
  "api/Platform.Data.Core.Exceptions.html": {
    "href": "api/Platform.Data.Core.Exceptions.html",
    "title": "Namespace Platform.Data.Core.Exceptions | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Exceptions Classes ArgumentLinkDoesNotExistsException<TLink> ArgumentLinkHasDependenciesException<TLink> LinksLimitReachedException LinkWithSameValueAlreadyExistsException"
  },
  "api/Platform.Data.Core.Exceptions.LinksLimitReachedException.html": {
    "href": "api/Platform.Data.Core.Exceptions.LinksLimitReachedException.html",
    "title": "Class LinksLimitReachedException | LinksPlatform",
    "keywords": "Class LinksLimitReachedException Inheritance System.Object LinksLimitReachedException Namespace : Platform.Data.Core.Exceptions Assembly : cs.temp.dll.dll Syntax public class LinksLimitReachedException : Exception Constructors LinksLimitReachedException(String) Declaration public LinksLimitReachedException(string message = \"Достигнут лимит количества связей в хранилище.\") Parameters Type Name Description System.String message LinksLimitReachedException(UInt64) Declaration public LinksLimitReachedException(ulong limit) Parameters Type Name Description System.UInt64 limit"
  },
  "api/Platform.Data.Core.Doublets.UnaryNumberToAddressOrOperationConverter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.UnaryNumberToAddressOrOperationConverter-1.html",
    "title": "Class UnaryNumberToAddressOrOperationConverter<TLink> | LinksPlatform",
    "keywords": "Class UnaryNumberToAddressOrOperationConverter<TLink> Inheritance System.Object LinksOperatorBase <TLink> UnaryNumberToAddressOrOperationConverter<TLink> Implements IConverter <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UnaryNumberToAddressOrOperationConverter<TLink> : LinksOperatorBase<TLink>, IConverter<TLink> Type Parameters Name Description TLink Constructors UnaryNumberToAddressOrOperationConverter(ILinks<TLink>, IConverter<Int32, TLink>) Declaration public UnaryNumberToAddressOrOperationConverter(ILinks<TLink> links, IConverter<int, TLink> powerOf2ToUnaryNumberConverter) Parameters Type Name Description ILinks <TLink> links IConverter < System.Int32 , TLink> powerOf2ToUnaryNumberConverter Methods Convert(TLink) Declaration public TLink Convert(TLink sourceNumber) Parameters Type Name Description TLink sourceNumber Returns Type Description TLink Implements IConverter<>"
  },
  "api/Platform.Data.Core.Doublets.UnaryNumberToAddressAddOperationConverter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.UnaryNumberToAddressAddOperationConverter-1.html",
    "title": "Class UnaryNumberToAddressAddOperationConverter<TLink> | LinksPlatform",
    "keywords": "Class UnaryNumberToAddressAddOperationConverter<TLink> Inheritance System.Object LinksOperatorBase <TLink> UnaryNumberToAddressAddOperationConverter<TLink> Implements IConverter <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UnaryNumberToAddressAddOperationConverter<TLink> : LinksOperatorBase<TLink>, IConverter<TLink> Type Parameters Name Description TLink Constructors UnaryNumberToAddressAddOperationConverter(ILinks<TLink>, TLink) Declaration public UnaryNumberToAddressAddOperationConverter(ILinks<TLink> links, TLink unaryOne) Parameters Type Name Description ILinks <TLink> links TLink unaryOne Methods Convert(TLink) Declaration public TLink Convert(TLink unaryNumber) Parameters Type Name Description TLink unaryNumber Returns Type Description TLink Implements IConverter<>"
  },
  "api/Platform.Data.Core.Doublets.UnaryNumberIncrementer-1.html": {
    "href": "api/Platform.Data.Core.Doublets.UnaryNumberIncrementer-1.html",
    "title": "Class UnaryNumberIncrementer<TLink> | LinksPlatform",
    "keywords": "Class UnaryNumberIncrementer<TLink> Inheritance System.Object LinksOperatorBase <TLink> UnaryNumberIncrementer<TLink> Implements IIncrementer <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UnaryNumberIncrementer<TLink> : LinksOperatorBase<TLink>, IIncrementer<TLink> Type Parameters Name Description TLink Constructors UnaryNumberIncrementer(ILinks<TLink>, TLink) Declaration public UnaryNumberIncrementer(ILinks<TLink> links, TLink unaryOne) Parameters Type Name Description ILinks <TLink> links TLink unaryOne Methods Increment(TLink) Declaration public TLink Increment(TLink unaryNumber) Parameters Type Name Description TLink unaryNumber Returns Type Description TLink Implements IIncrementer<>"
  },
  "api/Platform.Data.Core.Doublets.SynchronizedLinks-1.html": {
    "href": "api/Platform.Data.Core.Doublets.SynchronizedLinks-1.html",
    "title": "Class SynchronizedLinks<T> | LinksPlatform",
    "keywords": "Class SynchronizedLinks<T> Inheritance System.Object SynchronizedLinks<T> Implements ISynchronizedLinks <T> ISynchronized < ILinks <T>> ILinks <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class SynchronizedLinks<T> : ISynchronizedLinks<T>, ISynchronized<ILinks<T>>, ILinks<T> Type Parameters Name Description T Remarks TODO: Autogeneration of synchronized wrapper (decorator). TODO: Try to unfold code of each method using IL generation for performance improvements. TODO: Or even to unfold multiple layers of implementations. Constructors SynchronizedLinks(ISynchronization, ILinks<T>) Declaration public SynchronizedLinks(ISynchronization synchronization, ILinks<T> links) Parameters Type Name Description ISynchronization synchronization ILinks <T> links SynchronizedLinks(ILinks<T>) Declaration public SynchronizedLinks(ILinks<T> links) Parameters Type Name Description ILinks <T> links Properties Constants Declaration public ILinksCombinedConstants<T, T, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <T, T, System.Int32 > Sync Declaration public ILinks<T> Sync { get; } Property Value Type Description ILinks <T> SyncRoot Declaration public ISynchronization SyncRoot { get; } Property Value Type Description ISynchronization Unsync Declaration public ILinks<T> Unsync { get; } Property Value Type Description ILinks <T> Methods Count(IList<T>) Declaration public T Count(IList<T> restriction) Parameters Type Name Description IList <T> restriction Returns Type Description T Create() Declaration public T Create() Returns Type Description T Delete(T) Declaration public void Delete(T link) Parameters Type Name Description T link Each(Func<IList<T>, T>, IList<T>) Declaration public T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description Func < IList <T>, T> handler IList <T> restrictions Returns Type Description T Update(IList<T>) Declaration public T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Implements ISynchronizedLinks<T> ISynchronized<> ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.StackExtensions.html": {
    "href": "api/Platform.Data.Core.Doublets.StackExtensions.html",
    "title": "Class StackExtensions | LinksPlatform",
    "keywords": "Class StackExtensions Inheritance System.Object StackExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public static class StackExtensions Methods CreateStack<TLink>(ILinks<TLink>, TLink) Declaration public static TLink CreateStack<TLink>(this ILinks<TLink> links, TLink stackMarker) Parameters Type Name Description ILinks <TLink> links TLink stackMarker Returns Type Description TLink Type Parameters Name Description TLink DeleteStack<TLink>(ILinks<TLink>, TLink) Declaration public static void DeleteStack<TLink>(this ILinks<TLink> links, TLink stack) Parameters Type Name Description ILinks <TLink> links TLink stack Type Parameters Name Description TLink"
  },
  "api/Platform.Data.Core.Doublets.Stack-1.html": {
    "href": "api/Platform.Data.Core.Doublets.Stack-1.html",
    "title": "Class Stack<TLink> | LinksPlatform",
    "keywords": "Class Stack<TLink> Inheritance System.Object Stack<TLink> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class Stack<TLink> : IStack<TLink> Type Parameters Name Description TLink Constructors Stack(ILinks<TLink>, TLink) Declaration public Stack(ILinks<TLink> links, TLink stack) Parameters Type Name Description ILinks <TLink> links TLink stack Methods Peek() Declaration public TLink Peek() Returns Type Description TLink Pop() Declaration public TLink Pop() Returns Type Description TLink Push(TLink) Declaration public void Push(TLink element) Parameters Type Name Description TLink element"
  },
  "api/Platform.Data.Core.Doublets.LinksUniquenessResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksUniquenessResolver-1.html",
    "title": "Class LinksUniquenessResolver<T> | LinksPlatform",
    "keywords": "Class LinksUniquenessResolver<T> Inheritance System.Object LinksDecoratorBase <T> LinksUniquenessResolver<T> LinksCascadeUniquenessAndDependenciesResolver<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Delete(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksUniquenessResolver<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksUniquenessResolver(ILinks<T>) Declaration public LinksUniquenessResolver(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods ResolveAddressChangeConflict(T, T) Declaration protected virtual T ResolveAddressChangeConflict(T oldLinkAddress, T newLinkAddress) Parameters Type Name Description T oldLinkAddress T newLinkAddress Returns Type Description T Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksDecoratorBase-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksDecoratorBase-1.html",
    "title": "Class LinksDecoratorBase<T> | LinksPlatform",
    "keywords": "Class LinksDecoratorBase<T> Inheritance System.Object LinksDecoratorBase<T> LinksCascadeDependenciesResolver<T> LinksDependenciesValidator<T> LinksInnerReferenceValidator<T> LinksNonExistentReferencesCreator<T> LinksNullToSelfReferenceResolver<T> LinksSelfReferenceResolver<T> LinksUniquenessResolver<T> LinksUniquenessValidator<T> NonNullContentsLinkDeletionResolver<T> Implements ILinks <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public abstract class LinksDecoratorBase<T> : ILinks<T> Type Parameters Name Description T Constructors LinksDecoratorBase(ILinks<T>) Declaration protected LinksDecoratorBase(ILinks<T> links) Parameters Type Name Description ILinks <T> links Fields Links Declaration public readonly ILinks<T> Links Field Value Type Description ILinks <T> Properties Constants Declaration public ILinksCombinedConstants<T, T, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <T, T, System.Int32 > Methods Count(IList<T>) Declaration public virtual T Count(IList<T> restriction) Parameters Type Name Description IList <T> restriction Returns Type Description T Create() Declaration public virtual T Create() Returns Type Description T Delete(T) Declaration public virtual void Delete(T link) Parameters Type Name Description T link Each(Func<IList<T>, T>, IList<T>) Declaration public virtual T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description Func < IList <T>, T> handler IList <T> restrictions Returns Type Description T Update(IList<T>) Declaration public virtual T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksConstants-3.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksConstants-3.html",
    "title": "Class LinksConstants<TDecision, TAddress, TPartIndex> | LinksPlatform",
    "keywords": "Class LinksConstants<TDecision, TAddress, TPartIndex> Inheritance System.Object LinksConstants <TDecision> LinksConstants <TDecision, TAddress> LinksConstants<TDecision, TAddress, TPartIndex> Implements ILinksCombinedConstants <TDecision, TAddress, TPartIndex> ILinksDecisionConstants <TDecision> ILinksAddressConstants <TAddress> ILinksPartConstants <TPartIndex> Inherited Members LinksConstants<TDecision, TAddress>.Null LinksConstants<TDecision, TAddress>.Any LinksConstants<TDecision, TAddress>.Itself LinksConstants<TDecision, TAddress>.MinPossibleIndex LinksConstants<TDecision, TAddress>.MaxPossibleIndex LinksConstants<TDecision>.Continue LinksConstants<TDecision>.Break System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksConstants<TDecision, TAddress, TPartIndex> : LinksConstants<TDecision, TAddress>, ILinksCombinedConstants<TDecision, TAddress, TPartIndex>, ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress>, ILinksPartConstants<TPartIndex> Type Parameters Name Description TDecision TAddress TPartIndex Properties IndexPart Declaration public TPartIndex IndexPart { get; } Property Value Type Description TPartIndex SourcePart Declaration public TPartIndex SourcePart { get; } Property Value Type Description TPartIndex TargetPart Declaration public TPartIndex TargetPart { get; } Property Value Type Description TPartIndex Implements ILinksCombinedConstants<TDecision, TAddress, TPartIndex> ILinksDecisionConstants<TDecision> ILinksAddressConstants<TAddress> ILinksPartConstants<TPartIndex>"
  },
  "api/Platform.Data.Core.Doublets.LinksConstants-2.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksConstants-2.html",
    "title": "Class LinksConstants<TDecision, TAddress> | LinksPlatform",
    "keywords": "Class LinksConstants<TDecision, TAddress> Inheritance System.Object LinksConstants <TDecision> LinksConstants<TDecision, TAddress> LinksConstants<TDecision, TAddress, TPartIndex> Implements ILinksDecisionConstants <TDecision> ILinksAddressConstants <TAddress> Inherited Members LinksConstants<TDecision>.Continue LinksConstants<TDecision>.Break System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksConstants<TDecision, TAddress> : LinksConstants<TDecision>, ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress> Type Parameters Name Description TDecision TAddress Constructors LinksConstants() Declaration public LinksConstants() Properties Any Возвращает значение, обозначающее любую связь. Declaration public TAddress Any { get; } Property Value Type Description TAddress Remarks Возможно нужно зарезервировать отдельное значение, тогда можно будет создавать все варианты последовательностей в функции Create. Itself Возвращает значение, обозначающее связь-ссылку на саму связь. Declaration public TAddress Itself { get; } Property Value Type Description TAddress MaxPossibleIndex Возвращает максимально возможный индекс существующей связи. Declaration public TAddress MaxPossibleIndex { get; } Property Value Type Description TAddress Remarks Если за каждую константу будет отвечать отдельная связь, диапазон возможных связей будет уменьшен. Благодаря логике конвертации Integer для каждого типа здесь будет максимальное значение этого типа. MinPossibleIndex Возвращает минимально возможный индекс существующей связи. Declaration public TAddress MinPossibleIndex { get; } Property Value Type Description TAddress Null Возвращает значение, обозначающее отсутствие связи. Declaration public TAddress Null { get; } Property Value Type Description TAddress Implements ILinksDecisionConstants<TDecision> ILinksAddressConstants<TAddress>"
  },
  "api/Platform.Data.Core.Doublets.ISynchronizedLinks-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ISynchronizedLinks-1.html",
    "title": "Interface ISynchronizedLinks<T> | LinksPlatform",
    "keywords": "Interface ISynchronizedLinks<T> Inherited Members ILinks<T>.Constants ILinks<T>.Count(IList<T>) ILinks<T>.Each(Func<IList<T>, T>, IList<T>) ILinks<T>.Create() ILinks<T>.Update(IList<T>) ILinks<T>.Delete(T) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ISynchronizedLinks<T> : ISynchronized<ILinks<T>>, ILinks<T> Type Parameters Name Description T"
  },
  "api/Platform.Data.Core.Doublets.ILinksPartConstants-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksPartConstants-1.html",
    "title": "Interface ILinksPartConstants<TPartIndex> | LinksPlatform",
    "keywords": "Interface ILinksPartConstants<TPartIndex> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksPartConstants<TPartIndex> Type Parameters Name Description TPartIndex Properties IndexPart Возвращает индекс части, которая отвечает за индекс самой связи. Declaration TPartIndex IndexPart { get; } Property Value Type Description TPartIndex SourcePart Возвращает индекс части, которая отвечает за ссылку на связь-начало. Declaration TPartIndex SourcePart { get; } Property Value Type Description TPartIndex TargetPart Возвращает индекс части, которая отвечает за ссылку на связь-конец. Declaration TPartIndex TargetPart { get; } Property Value Type Description TPartIndex"
  },
  "api/Platform.Data.Core.Doublets.ILinksOptions-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksOptions-1.html",
    "title": "Interface ILinksOptions<TLink> | LinksPlatform",
    "keywords": "Interface ILinksOptions<TLink> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksOptions<TLink> Type Parameters Name Description TLink"
  },
  "api/Platform.Communication.Protocol.Gexf.GraphDefaultEdgeType.html": {
    "href": "api/Platform.Communication.Protocol.Gexf.GraphDefaultEdgeType.html",
    "title": "Enum GraphDefaultEdgeType | LinksPlatform",
    "keywords": "Enum GraphDefaultEdgeType Namespace : Platform.Communication.Protocol.Gexf Assembly : cs.temp.dll.dll Syntax public enum GraphDefaultEdgeType Fields Name Description Directed"
  },
  "api/Platform.Communication.Protocol.Gexf.Edge.html": {
    "href": "api/Platform.Communication.Protocol.Gexf.Edge.html",
    "title": "Class Edge | LinksPlatform",
    "keywords": "Class Edge Inheritance System.Object Edge Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Communication.Protocol.Gexf Assembly : cs.temp.dll.dll Syntax public class Edge Fields ElementName Declaration public const string ElementName = \"edge\" Field Value Type Description System.String IdAttributeName Declaration public const string IdAttributeName = \"id\" Field Value Type Description System.String LabelAttributeName Declaration public const string LabelAttributeName = \"label\" Field Value Type Description System.String SourceAttributeName Declaration public const string SourceAttributeName = \"source\" Field Value Type Description System.String TargetAttributeName Declaration public const string TargetAttributeName = \"target\" Field Value Type Description System.String Properties Id Declaration public long Id { get; set; } Property Value Type Description System.Int64 Label Declaration public string Label { get; set; } Property Value Type Description System.String Source Declaration public long Source { get; set; } Property Value Type Description System.Int64 Target Declaration public long Target { get; set; } Property Value Type Description System.Int64 Methods WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer WriteXml(XmlWriter, Int64, Int64, Int64, String) Declaration public static void WriteXml(XmlWriter writer, long id, long sourceNodeId, long targetNodeId, string label = null) Parameters Type Name Description XmlWriter writer System.Int64 id System.Int64 sourceNodeId System.Int64 targetNodeId System.String label"
  },
  "api/Platform.Tests.SystemTests.UInt64EqualityComparer.html": {
    "href": "api/Platform.Tests.SystemTests.UInt64EqualityComparer.html",
    "title": "Class SystemTests.UInt64EqualityComparer | LinksPlatform",
    "keywords": "Class SystemTests.UInt64EqualityComparer Inheritance System.Object SystemTests.UInt64EqualityComparer Namespace : Platform.Tests Assembly : cs.temp.dll.dll Syntax protected class UInt64EqualityComparer : IEqualityComparer<ulong> Methods Equals(UInt64, UInt64) Declaration public bool Equals(ulong x, ulong y) Parameters Type Name Description System.UInt64 x System.UInt64 y Returns Type Description System.Boolean GetHashCode(UInt64) Declaration public int GetHashCode(ulong obj) Parameters Type Name Description System.UInt64 obj Returns Type Description System.Int32"
  },
  "api/Platform.Tests.Helpers.html": {
    "href": "api/Platform.Tests.Helpers.html",
    "title": "Namespace Platform.Tests.Helpers | LinksPlatform",
    "keywords": "Namespace Platform.Tests.Helpers Classes CharsSegmentTests IntPtrExtensionsTests MathExtensionsTests MathHelpersTests ReflectionTests ScopeTests SerializationHelpersTests"
  },
  "api/Platform.Tests.Helpers.SerializationHelpersTests.html": {
    "href": "api/Platform.Tests.Helpers.SerializationHelpersTests.html",
    "title": "Class SerializationHelpersTests | LinksPlatform",
    "keywords": "Class SerializationHelpersTests Inheritance System.Object SerializationHelpersTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class SerializationHelpersTests Methods SerializeAsXmlStringTest() Declaration public void SerializeAsXmlStringTest() SerializeToFileTest() Declaration public void SerializeToFileTest()"
  },
  "api/Platform.Tests.Helpers.ScopeTests.html": {
    "href": "api/Platform.Tests.Helpers.ScopeTests.html",
    "title": "Class ScopeTests | LinksPlatform",
    "keywords": "Class ScopeTests Inheritance System.Object ScopeTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class ScopeTests Methods CascadeDependencyTest() Declaration public void CascadeDependencyTest() FullAutoResolutionTest() Declaration public void FullAutoResolutionTest() SingleDependencyTest() Declaration public void SingleDependencyTest()"
  },
  "api/Platform.Tests.Helpers.ReflectionTests.html": {
    "href": "api/Platform.Tests.Helpers.ReflectionTests.html",
    "title": "Class ReflectionTests | LinksPlatform",
    "keywords": "Class ReflectionTests Inheritance System.Object ReflectionTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class ReflectionTests Methods ILBytesForDelegateAreAvailableTest() Declaration public void ILBytesForDelegateAreAvailableTest() ILBytesForDifferentDelegatesAreTheSameTest() Declaration public void ILBytesForDifferentDelegatesAreTheSameTest()"
  },
  "api/Platform.Tests.Helpers.MathHelpersTests.html": {
    "href": "api/Platform.Tests.Helpers.MathHelpersTests.html",
    "title": "Class MathHelpersTests | LinksPlatform",
    "keywords": "Class MathHelpersTests Inheritance System.Object MathHelpersTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class MathHelpersTests Methods CompiledOperationsTest() Declaration public void CompiledOperationsTest() GetLowestBitPositionTest(UInt64, Int32) Declaration public void GetLowestBitPositionTest(ulong value, int expectedPosition) Parameters Type Name Description System.UInt64 value System.Int32 expectedPosition PartialReadWriteTest() Declaration public void PartialReadWriteTest()"
  },
  "api/Platform.Tests.Data.Core.ReadSequenceTests.html": {
    "href": "api/Platform.Tests.Data.Core.ReadSequenceTests.html",
    "title": "Class ReadSequenceTests | LinksPlatform",
    "keywords": "Class ReadSequenceTests Inheritance System.Object ReadSequenceTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class ReadSequenceTests Methods ReadSequenceTest() Declaration public static void ReadSequenceTest()"
  },
  "api/Platform.Tests.Data.Core.OptimalVariantSequenceTests.html": {
    "href": "api/Platform.Tests.Data.Core.OptimalVariantSequenceTests.html",
    "title": "Class OptimalVariantSequenceTests | LinksPlatform",
    "keywords": "Class OptimalVariantSequenceTests Inheritance System.Object OptimalVariantSequenceTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class OptimalVariantSequenceTests Methods DictionaryBasedFrequencyStoredOptimalVariantSequenceTest() Declaration public void DictionaryBasedFrequencyStoredOptimalVariantSequenceTest() LinksBasedFrequencyStoredOptimalVariantSequenceTest() Declaration public void LinksBasedFrequencyStoredOptimalVariantSequenceTest()"
  },
  "api/Platform.Tests.Data.Core.LinksTests.html": {
    "href": "api/Platform.Tests.Data.Core.LinksTests.html",
    "title": "Class LinksTests | LinksPlatform",
    "keywords": "Class LinksTests Inheritance System.Object LinksTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class LinksTests Methods BasicTransactionLogTest() Declaration public void BasicTransactionLogTest() Bug1Test() Declaration public void Bug1Test() CascadeUpdateTest() Declaration public void CascadeUpdateTest() Create64BillionLinks() Declaration public static void Create64BillionLinks() Create64BillionLinksInParallel() Declaration public static void Create64BillionLinksInParallel() GetSourceInParallel() Declaration public void GetSourceInParallel() GetSourceTest() Declaration public void GetSourceTest() MultipleCreateAndDeleteTest() Declaration public void MultipleCreateAndDeleteTest() PathsTest() Declaration public void PathsTest() RecursiveStringFormattingTest() Declaration public void RecursiveStringFormattingTest() TestDeletionOfAllLinks() Declaration public static void TestDeletionOfAllLinks() TestEach() Declaration public void TestEach() TestGetTarget() Declaration public void TestGetTarget() TestGetTargetInParallel() Declaration public void TestGetTargetInParallel() TestRandomSearchAll() Declaration public void TestRandomSearchAll() TransactionAutoRevertedTest() Declaration public void TransactionAutoRevertedTest() TransactionCommit() Declaration public void TransactionCommit() TransactionDamage() Declaration public void TransactionDamage() TransactionUserCodeErrorNoDataSavedTest() Declaration public void TransactionUserCodeErrorNoDataSavedTest() TransactionUserCodeErrorSomeDataSavedTest() Declaration public void TransactionUserCodeErrorSomeDataSavedTest()"
  },
  "api/Platform.Sandbox.QueryExecutorExtensions.html": {
    "href": "api/Platform.Sandbox.QueryExecutorExtensions.html",
    "title": "Class QueryExecutorExtensions | LinksPlatform",
    "keywords": "Class QueryExecutorExtensions Представляет класс-контейнер расширений для выполнения произвольных запросов над Links Inheritance System.Object QueryExecutorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class QueryExecutorExtensions Methods Execute<T>(SynchronizedLinks<UInt64>, Expression<Func<SynchronizedLinks<UInt64>, IEnumerable<T>>>) Выполняет запрос query над links и возвращает результат запроса в виде перечисляемого объекта с элементами типа T. Declaration public static IEnumerable<T> Execute<T>(this SynchronizedLinks<ulong> links, Expression<Func<SynchronizedLinks<ulong>, IEnumerable<T>>> query) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links База данных связей, над которой будет выполняться запрос. Expression < Func < SynchronizedLinks < System.UInt64 >, IEnumerable <T>>> query Запрос в виде Linq-выражения. Returns Type Description IEnumerable <T> Результат запроса в виде перечисляемого объекта с элементами типа T. Type Parameters Name Description T Тип элемента запроса."
  },
  "api/Platform.Sandbox.Program.html": {
    "href": "api/Platform.Sandbox.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Program Methods Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Sandbox.OperationsExperiments.html": {
    "href": "api/Platform.Sandbox.OperationsExperiments.html",
    "title": "Class OperationsExperiments | LinksPlatform",
    "keywords": "Class OperationsExperiments Inheritance System.Object OperationsExperiments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class OperationsExperiments Methods RunExperiment() Declaration public static void RunExperiment()"
  },
  "api/Platform.Sandbox.FileReadWriteTest.html": {
    "href": "api/Platform.Sandbox.FileReadWriteTest.html",
    "title": "Class FileReadWriteTest | LinksPlatform",
    "keywords": "Class FileReadWriteTest Inheritance System.Object FileReadWriteTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class FileReadWriteTest Methods MappedFilesTest() Declaration public static void MappedFilesTest() Run(String[]) Declaration public static void Run(string[] args) Parameters Type Name Description System.String [] args SmartTextParsing(Char[], Int32, Int32) Declaration public static Link SmartTextParsing(char[] text, int takeFrom, int takeUntil) Parameters Type Name Description System.Char [] text System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link"
  },
  "api/Platform.Sandbox.DllImportTest.html": {
    "href": "api/Platform.Sandbox.DllImportTest.html",
    "title": "Class DllImportTest | LinksPlatform",
    "keywords": "Class DllImportTest Представляет тест, который позволит определить необходимо ли указывать расширение файла при подключении библиотеки. TODO: Проверить на пользовательских DLL TODO: Далее протестировать на CoreCLR, Mono Inheritance System.Object DllImportTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class DllImportTest Methods MessageBox(IntPtr, String, String, UInt32) Declaration public static int MessageBox(IntPtr hWnd, String text, String caption, uint type) Parameters Type Name Description IntPtr hWnd String text String caption System.UInt32 type Returns Type Description System.Int32 Test() Declaration public static void Test()"
  },
  "api/Platform.Sandbox.ConsolePrintedDublicateWalkerBase.html": {
    "href": "api/Platform.Sandbox.ConsolePrintedDublicateWalkerBase.html",
    "title": "Class ConsolePrintedDublicateWalkerBase | LinksPlatform",
    "keywords": "Class ConsolePrintedDublicateWalkerBase Inheritance System.Object ConsolePrintedDublicateWalkerBase Walker1 Walker2 Walker3 Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public abstract class ConsolePrintedDublicateWalkerBase : DuplicateSegmentsWalkerBase<char, CharsSegment> Methods CreateSegment(IList<Char>, Int32, Int32) Declaration protected override CharsSegment CreateSegment(IList<char> elements, int offset, int length) Parameters Type Name Description IList < System.Char > elements System.Int32 offset System.Int32 length Returns Type Description CharsSegment OnDublicateFound(CharsSegment) Declaration protected override void OnDublicateFound(CharsSegment segment) Parameters Type Name Description CharsSegment segment"
  },
  "api/Platform.Sandbox.ConceptTest.html": {
    "href": "api/Platform.Sandbox.ConceptTest.html",
    "title": "Class ConceptTest | LinksPlatform",
    "keywords": "Class ConceptTest Inheritance System.Object ConceptTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class ConceptTest Methods Test(String) Declaration public static void Test(string filename) Parameters Type Name Description System.String filename TestGexf(String) Declaration public static void TestGexf(string filename) Parameters Type Name Description System.String filename"
  },
  "api/Platform.Sandbox.CompressionExperiments.html": {
    "href": "api/Platform.Sandbox.CompressionExperiments.html",
    "title": "Class CompressionExperiments | LinksPlatform",
    "keywords": "Class CompressionExperiments Inheritance System.Object CompressionExperiments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class CompressionExperiments Methods PrecompressSequence1(SynchronizedLinks<UInt64>, UInt64[]) Declaration public static ulong[] PrecompressSequence1(this SynchronizedLinks<ulong> links, ulong[] sequence) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Slow version (doublets' frequencies dictionary is recreated). PrecompressSequence2(SynchronizedLinks<UInt64>, UInt64[]) Declaration public static ulong[] PrecompressSequence2(this SynchronizedLinks<ulong> links, ulong[] sequence) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Faster version (doublets' frequencies dictionary is not recreated). Stats() Declaration public static void Stats() Test() Declaration public static void Test()"
  },
  "api/Platform.Sandbox.CompressionExperiments.Compressor.html": {
    "href": "api/Platform.Sandbox.CompressionExperiments.Compressor.html",
    "title": "Struct CompressionExperiments.Compressor | LinksPlatform",
    "keywords": "Struct CompressionExperiments.Compressor Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public struct Compressor Constructors Compressor(SynchronizedLinks<UInt64>) Declaration public Compressor(SynchronizedLinks<ulong> links) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links Methods Compress(UInt64[]) Declaration public ulong Compress(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 Precompress0(UInt64[]) Declaration public ulong[] Precompress0(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Faster version (doublets' frequencies dictionary is not recreated). Precompress1(UInt64[]) Declaration public ulong[] Precompress1(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Faster version (doublets' frequencies dictionary is not recreated). Precompress2(UInt64[]) Declaration public ulong[] Precompress2(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Faster version (doublets' frequencies dictionary is not recreated). Precompress3(UInt64[]) Declaration public ulong[] Precompress3(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . If doublet repeats twice it is maximum doublet. Precompress4(UInt64[]) Declaration public ulong[] Precompress4(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . If doublet repeats twice it is maximum doublet. Precompress5(UInt64[]) Declaration public ulong[] Precompress5(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Global dictionary"
  },
  "api/Platform.Helpers.SetterBase-1.html": {
    "href": "api/Platform.Helpers.SetterBase-1.html",
    "title": "Class SetterBase<TResult> | LinksPlatform",
    "keywords": "Class SetterBase<TResult> Inheritance System.Object SetterBase<TResult> Setter<TResult> Setter<TResult, TDecision> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public abstract class SetterBase<TResult> Type Parameters Name Description TResult Remarks Must be class, not struct (in order to persist access to Result field value). Constructors SetterBase(TResult) Declaration protected SetterBase(TResult defaultValue = null) Parameters Type Name Description TResult defaultValue Fields Result Declaration public TResult Result Field Value Type Description TResult Methods Set(TResult) Declaration public void Set(TResult value) Parameters Type Name Description TResult value"
  },
  "api/Platform.Helpers.Reflection.SigilExtensions.html": {
    "href": "api/Platform.Helpers.Reflection.SigilExtensions.html",
    "title": "Class SigilExtensions | LinksPlatform",
    "keywords": "Class SigilExtensions Inheritance System.Object SigilExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public static class SigilExtensions Methods BranchIfGreaterOrEqual<TDelegate>(Emit<TDelegate>, Boolean, Label) Declaration public static Emit<TDelegate> BranchIfGreaterOrEqual<TDelegate>(this Emit<TDelegate> emiter, bool isSigned, Label label) Parameters Type Name Description Emit <TDelegate> emiter System.Boolean isSigned Label label Returns Type Description Emit <TDelegate> Type Parameters Name Description TDelegate BranchIfLessOrEqual<TDelegate>(Emit<TDelegate>, Boolean, Label) Declaration public static Emit<TDelegate> BranchIfLessOrEqual<TDelegate>(this Emit<TDelegate> emiter, bool isSigned, Label label) Parameters Type Name Description Emit <TDelegate> emiter System.Boolean isSigned Label label Returns Type Description Emit <TDelegate> Type Parameters Name Description TDelegate CompareGreaterThan<TDelegate>(Emit<TDelegate>, Boolean) Declaration public static Emit<TDelegate> CompareGreaterThan<TDelegate>(this Emit<TDelegate> emiter, bool isSigned) Parameters Type Name Description Emit <TDelegate> emiter System.Boolean isSigned Returns Type Description Emit <TDelegate> Type Parameters Name Description TDelegate CompareLessThan<TDelegate>(Emit<TDelegate>, Boolean) Declaration public static Emit<TDelegate> CompareLessThan<TDelegate>(this Emit<TDelegate> emiter, bool isSigned) Parameters Type Name Description Emit <TDelegate> emiter System.Boolean isSigned Returns Type Description Emit <TDelegate> Type Parameters Name Description TDelegate Decrement<TDelegate>(Emit<TDelegate>, Type) Declaration public static Emit<TDelegate> Decrement<TDelegate>(this Emit<TDelegate> emiter, Type valueType) Parameters Type Name Description Emit <TDelegate> emiter Type valueType Returns Type Description Emit <TDelegate> Type Parameters Name Description TDelegate Increment<TDelegate>(Emit<TDelegate>, Type) Declaration public static Emit<TDelegate> Increment<TDelegate>(this Emit<TDelegate> emiter, Type valueType) Parameters Type Name Description Emit <TDelegate> emiter Type valueType Returns Type Description Emit <TDelegate> Type Parameters Name Description TDelegate LoadArguments<TDelegate>(Emit<TDelegate>, UInt16[]) Declaration public static Emit<TDelegate> LoadArguments<TDelegate>(this Emit<TDelegate> emiter, params ushort[] arguments) Parameters Type Name Description Emit <TDelegate> emiter System.UInt16 [] arguments Returns Type Description Emit <TDelegate> Type Parameters Name Description TDelegate LoadConstant<TDelegate>(Emit<TDelegate>, Type, Object) Declaration public static Emit<TDelegate> LoadConstant<TDelegate>(this Emit<TDelegate> emiter, Type constantType, object constantValue) Parameters Type Name Description Emit <TDelegate> emiter Type constantType System.Object constantValue Returns Type Description Emit <TDelegate> Type Parameters Name Description TDelegate LoadConstantOne<TDelegate>(Emit<TDelegate>, Type) Declaration public static Emit<TDelegate> LoadConstantOne<TDelegate>(this Emit<TDelegate> emiter, Type constantType) Parameters Type Name Description Emit <TDelegate> emiter Type constantType Returns Type Description Emit <TDelegate> Type Parameters Name Description TDelegate"
  },
  "api/Platform.Helpers.Reflection.NotSupportedExceptionDelegateFactory-1.html": {
    "href": "api/Platform.Helpers.Reflection.NotSupportedExceptionDelegateFactory-1.html",
    "title": "Class NotSupportedExceptionDelegateFactory<TDelegate> | LinksPlatform",
    "keywords": "Class NotSupportedExceptionDelegateFactory<TDelegate> Inheritance System.Object NotSupportedExceptionDelegateFactory<TDelegate> Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class NotSupportedExceptionDelegateFactory<TDelegate> : IFactory<TDelegate> Type Parameters Name Description TDelegate Methods Create() Declaration public TDelegate Create() Returns Type Description TDelegate"
  },
  "api/Platform.Helpers.Reflection.MethodInfoExtensions.html": {
    "href": "api/Platform.Helpers.Reflection.MethodInfoExtensions.html",
    "title": "Class MethodInfoExtensions | LinksPlatform",
    "keywords": "Class MethodInfoExtensions Inheritance System.Object MethodInfoExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public static class MethodInfoExtensions Methods GetILBytes(MethodInfo) Declaration public static byte[] GetILBytes(this MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Returns Type Description System.Byte [] Remarks Based on https://gist.github.com/nguerrera/72444715c7ea0b40addb"
  },
  "api/Platform.Helpers.PerformanceHelpers.html": {
    "href": "api/Platform.Helpers.PerformanceHelpers.html",
    "title": "Class PerformanceHelpers | LinksPlatform",
    "keywords": "Class PerformanceHelpers Inheritance System.Object PerformanceHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class PerformanceHelpers Methods Measure(Action) Declaration public static TimeSpan Measure(Action action) Parameters Type Name Description Action action Returns Type Description TimeSpan"
  },
  "api/Platform.Helpers.Numbers.html": {
    "href": "api/Platform.Helpers.Numbers.html",
    "title": "Namespace Platform.Helpers.Numbers | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Numbers Classes MathExtensions MathHelpers MathHelpers<T> Structs Integer Integer<T>"
  },
  "api/Platform.Helpers.Numbers.MathHelpers.html": {
    "href": "api/Platform.Helpers.Numbers.MathHelpers.html",
    "title": "Class MathHelpers | LinksPlatform",
    "keywords": "Class MathHelpers Inheritance System.Object MathHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Numbers Assembly : cs.temp.dll.dll Syntax public class MathHelpers Remarks Resizable array (FileMappedMemory) for values cache may be used. or cached oeis.org Methods Abs<T>(T) Declaration public static T Abs<T>(T x) Parameters Type Name Description T x Returns Type Description T Type Parameters Name Description T Add<T>(T, T) Declaration public static T Add<T>(T x, T y) Parameters Type Name Description T x T y Returns Type Description T Type Parameters Name Description T And<T>(T, T) Declaration public static T And<T>(T x, T y) Parameters Type Name Description T x T y Returns Type Description T Type Parameters Name Description T Catalan(Double) Declaration public static double Catalan(double n) Parameters Type Name Description System.Double n Returns Type Description System.Double CountBits(Int64) Declaration public static long CountBits(long x) Parameters Type Name Description System.Int64 x Returns Type Description System.Int64 Decrement<T>(T) Declaration public static T Decrement<T>(T x) Parameters Type Name Description T x Returns Type Description T Type Parameters Name Description T Factorial(Double) Declaration public static double Factorial(double n) Parameters Type Name Description System.Double n Returns Type Description System.Double GetLowestBitPosition(UInt64) Declaration public static int GetLowestBitPosition(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Int32 GreaterOrEqualThan<T>(T, T) Declaration public static bool GreaterOrEqualThan<T>(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean Type Parameters Name Description T GreaterThan<T>(T, T) Declaration public static bool GreaterThan<T>(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean Type Parameters Name Description T Increment<T>(T) Declaration public static T Increment<T>(T x) Parameters Type Name Description T x Returns Type Description T Type Parameters Name Description T IsEquals<T>(T, T) Declaration public static bool IsEquals<T>(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean Type Parameters Name Description T IsPowerOfTwo(UInt64) Declaration public static bool IsPowerOfTwo(ulong x) Parameters Type Name Description System.UInt64 x Returns Type Description System.Boolean LessOrEqualThan<T>(T, T) Declaration public static bool LessOrEqualThan<T>(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean Type Parameters Name Description T LessThan<T>(T, T) Declaration public static bool LessThan<T>(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean Type Parameters Name Description T Negate<T>(T) Declaration public static T Negate<T>(T x) Parameters Type Name Description T x Returns Type Description T Type Parameters Name Description T PartialRead<T>(T, Int32, Int32) Declaration public static T PartialRead<T>(T target, int shift, int limit) Parameters Type Name Description T target System.Int32 shift System.Int32 limit Returns Type Description T Type Parameters Name Description T PartialWrite<T>(T, T, Int32, Int32) Declaration public static T PartialWrite<T>(T target, T source, int shift, int limit) Parameters Type Name Description T target T source System.Int32 shift System.Int32 limit Returns Type Description T Type Parameters Name Description T Subtract<T>(T, T) Declaration public static T Subtract<T>(T x, T y) Parameters Type Name Description T x T y Returns Type Description T Type Parameters Name Description T Subtract<T>(Integer<T>, Integer<T>) Declaration public static T Subtract<T>(Integer<T> x, Integer<T> y) Parameters Type Name Description Integer <T> x Integer <T> y Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Numbers.Integer-1.html": {
    "href": "api/Platform.Helpers.Numbers.Integer-1.html",
    "title": "Struct Integer<T> | LinksPlatform",
    "keywords": "Struct Integer<T> Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Numbers Assembly : cs.temp.dll.dll Syntax public struct Integer<T> Type Parameters Name Description T Constructors Integer(T) Declaration public Integer(T value) Parameters Type Name Description T value Fields One Declaration public static readonly T One Field Value Type Description T Two Declaration public static readonly T Two Field Value Type Description T Value Declaration public readonly T Value Field Value Type Description T Zero Declaration public static readonly T Zero Field Value Type Description T Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(T to Integer<T>) Declaration public static implicit operator Integer<T>(T integer) Parameters Type Name Description T integer Returns Type Description Integer <T> Implicit(Integer to Integer<T>) Declaration public static implicit operator Integer<T>(Integer integer) Parameters Type Name Description Integer integer Returns Type Description Integer <T> Implicit(Integer<T> to T) Declaration public static implicit operator T(Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description T Implicit(Integer<T> to Integer) Declaration public static implicit operator Integer(Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description Integer Implicit(Integer<T> to Boolean) Declaration public static implicit operator bool (Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description System.Boolean Implicit(Integer<T> to Byte) Declaration public static implicit operator byte (Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description System.Byte Implicit(Integer<T> to Int16) Declaration public static implicit operator short (Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description System.Int16 Implicit(Integer<T> to Int32) Declaration public static implicit operator int (Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description System.Int32 Implicit(Integer<T> to Int64) Declaration public static implicit operator long (Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description System.Int64 Implicit(Integer<T> to SByte) Declaration public static implicit operator sbyte (Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description System.SByte Implicit(Integer<T> to UInt16) Declaration public static implicit operator ushort (Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description System.UInt16 Implicit(Integer<T> to UInt32) Declaration public static implicit operator uint (Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description System.UInt32 Implicit(Integer<T> to UInt64) Declaration public static implicit operator ulong (Integer<T> integer) Parameters Type Name Description Integer <T> integer Returns Type Description System.UInt64 Implicit(Boolean to Integer<T>) Declaration public static implicit operator Integer<T>(bool integer) Parameters Type Name Description System.Boolean integer Returns Type Description Integer <T> Implicit(Byte to Integer<T>) Declaration public static implicit operator Integer<T>(byte integer) Parameters Type Name Description System.Byte integer Returns Type Description Integer <T> Implicit(Int16 to Integer<T>) Declaration public static implicit operator Integer<T>(short integer) Parameters Type Name Description System.Int16 integer Returns Type Description Integer <T> Implicit(Int32 to Integer<T>) Declaration public static implicit operator Integer<T>(int integer) Parameters Type Name Description System.Int32 integer Returns Type Description Integer <T> Implicit(Int64 to Integer<T>) Declaration public static implicit operator Integer<T>(long integer) Parameters Type Name Description System.Int64 integer Returns Type Description Integer <T> Implicit(SByte to Integer<T>) Declaration public static implicit operator Integer<T>(sbyte integer) Parameters Type Name Description System.SByte integer Returns Type Description Integer <T> Implicit(UInt16 to Integer<T>) Declaration public static implicit operator Integer<T>(ushort integer) Parameters Type Name Description System.UInt16 integer Returns Type Description Integer <T> Implicit(UInt32 to Integer<T>) Declaration public static implicit operator Integer<T>(uint integer) Parameters Type Name Description System.UInt32 integer Returns Type Description Integer <T> Implicit(UInt64 to Integer<T>) Declaration public static implicit operator Integer<T>(ulong integer) Parameters Type Name Description System.UInt64 integer Returns Type Description Integer <T>"
  },
  "api/Platform.Helpers.Node.html": {
    "href": "api/Platform.Helpers.Node.html",
    "title": "Class Node | LinksPlatform",
    "keywords": "Class Node Inheritance System.Object Node Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Node Constructors Node() Declaration public Node() Node(Object) Declaration public Node(object value) Parameters Type Name Description System.Object value Properties ChildNodes Declaration public Dictionary<object, Node> ChildNodes { get; } Property Value Type Description Dictionary < System.Object , Node > Item[Object] Declaration public Node this[object key] { get; set; } Parameters Type Name Description System.Object key Property Value Type Description Node Value Declaration public object Value { get; set; } Property Value Type Description System.Object Methods AddChild(Object) Declaration public Node AddChild(object key) Parameters Type Name Description System.Object key Returns Type Description Node AddChild(Object, Node) Declaration public Node AddChild(object key, Node child) Parameters Type Name Description System.Object key Node child Returns Type Description Node AddChild(Object, Object) Declaration public Node AddChild(object key, object value) Parameters Type Name Description System.Object key System.Object value Returns Type Description Node ContainsChild(Object[]) Declaration public bool ContainsChild(params object[] keys) Parameters Type Name Description System.Object [] keys Returns Type Description System.Boolean GetChild(Object[]) Declaration public Node GetChild(params object[] keys) Parameters Type Name Description System.Object [] keys Returns Type Description Node GetChildValue(Object[]) Declaration public object GetChildValue(params object[] keys) Parameters Type Name Description System.Object [] keys Returns Type Description System.Object SetChild(Object) Declaration public Node SetChild(object key) Parameters Type Name Description System.Object key Returns Type Description Node SetChild(Object[]) Declaration public Node SetChild(params object[] keys) Parameters Type Name Description System.Object [] keys Returns Type Description Node SetChildValue(Object, Object) Declaration public Node SetChildValue(object value, object key) Parameters Type Name Description System.Object value System.Object key Returns Type Description Node SetChildValue(Object, Object[]) Declaration public Node SetChildValue(object value, params object[] keys) Parameters Type Name Description System.Object value System.Object [] keys Returns Type Description Node"
  },
  "api/Platform.Helpers.Counter-2.html": {
    "href": "api/Platform.Helpers.Counter-2.html",
    "title": "Class Counter<TValue, TDecision> | LinksPlatform",
    "keywords": "Class Counter<TValue, TDecision> Inheritance System.Object Counter Counter<TValue, TDecision> Inherited Members Counter.Count Counter.Increment() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Counter<TValue, TDecision> : Counter Type Parameters Name Description TValue TDecision Constructors Counter(TDecision) Declaration public Counter(TDecision trueValue = null) Parameters Type Name Description TDecision trueValue Methods IncrementAndReturnTrue() Declaration public TDecision IncrementAndReturnTrue() Returns Type Description TDecision IncrementAndReturnTrue(TValue) Declaration public TDecision IncrementAndReturnTrue(TValue value) Parameters Type Name Description TValue value Returns Type Description TDecision"
  },
  "api/Platform.Examples.FileIndexerCLI.html": {
    "href": "api/Platform.Examples.FileIndexerCLI.html",
    "title": "Class FileIndexerCLI | LinksPlatform",
    "keywords": "Class FileIndexerCLI Inheritance System.Object FileIndexerCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class FileIndexerCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Examples.FileIndexer.html": {
    "href": "api/Platform.Examples.FileIndexer.html",
    "title": "Class FileIndexer | LinksPlatform",
    "keywords": "Class FileIndexer Inheritance System.Object FileIndexer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class FileIndexer Constructors FileIndexer(SynchronizedLinks<UInt64>, SequencesIndexer<UInt64>) Declaration public FileIndexer(SynchronizedLinks<ulong> links, SequencesIndexer<ulong> indexer) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links SequencesIndexer < System.UInt64 > indexer Methods IndexAsync(String, CancellationToken) Declaration public Task IndexAsync(string path, CancellationToken cancellationToken) Parameters Type Name Description System.String path CancellationToken cancellationToken Returns Type Description Task IndexParallel(String, CancellationToken) Declaration public void IndexParallel(string path, CancellationToken cancellationToken) Parameters Type Name Description System.String path CancellationToken cancellationToken IndexSync(String, CancellationToken) Declaration public void IndexSync(string path, CancellationToken cancellationToken) Parameters Type Name Description System.String path CancellationToken cancellationToken"
  },
  "api/Platform.Examples.CSVSequencesExporter.html": {
    "href": "api/Platform.Examples.CSVSequencesExporter.html",
    "title": "Class CSVSequencesExporter | LinksPlatform",
    "keywords": "Class CSVSequencesExporter Inheritance System.Object CSVExporter CSVSequencesExporter Inherited Members CSVExporter._links CSVExporter._unicodeMapped CSVExporter._convertUnicodeLinksToCharacters CSVExporter._referenceByLines CSVExporter._visited CSVExporter._addressToLineNumber CSVExporter._linksCounter CSVExporter._linesCounter CSVExporter.Export(SynchronizedLinks<UInt64>, String, Boolean, Boolean, Boolean, CancellationToken) CSVExporter.Visit(UInt64) CSVExporter.FormatLink(UInt64) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class CSVSequencesExporter : CSVExporter Methods WriteLink(StreamWriter, IList<UInt64>) Declaration protected override void WriteLink(StreamWriter writer, IList<ulong> link) Parameters Type Name Description StreamWriter writer IList < System.UInt64 > link Overrides CSVExporter.WriteLink(StreamWriter, IList<UInt64>)"
  },
  "api/Platform.Data.Core.Triplets.SequenceHelpers.html": {
    "href": "api/Platform.Data.Core.Triplets.SequenceHelpers.html",
    "title": "Class SequenceHelpers | LinksPlatform",
    "keywords": "Class SequenceHelpers Inheritance System.Object SequenceHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public class SequenceHelpers Remarks TODO: Check that CollectMatchingSequences algorithm is working, if not throw it away. TODO: Think of the abstraction on Sequences that can be equally usefull for triple links, doublet links and so on. Fields MaxSequenceFormatSize Declaration public const int MaxSequenceFormatSize = 20 Field Value Type Description System.Int32 Methods CollectMatchingSequences(Link[]) Declaration public static List<Link> CollectMatchingSequences(Link[] links) Parameters Type Name Description Link [] links Returns Type Description List < Link > FormatSequence(Link) Declaration public static string FormatSequence(Link sequence) Parameters Type Name Description Link sequence Returns Type Description System.String GetLeftElements(Link, Link) Declaration public static Link[] GetLeftElements(Link startLink, Link leftLink) Parameters Type Name Description Link startLink Link leftLink Returns Type Description Link [] GetRightElements(Link, Link) Declaration public static Link[] GetRightElements(Link startLink, Link rightLink) Parameters Type Name Description Link startLink Link rightLink Returns Type Description Link [] TryStepLeft(Link, Link, Link[], Int32) Declaration public static bool TryStepLeft(Link startLink, Link leftLink, Link[] result, int offset) Parameters Type Name Description Link startLink Link leftLink Link [] result System.Int32 offset Returns Type Description System.Boolean TryStepRight(Link, Link, Link[], Int32) Declaration public static bool TryStepRight(Link startLink, Link rightLink, Link[] result, int offset) Parameters Type Name Description Link startLink Link rightLink Link [] result System.Int32 offset Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Triplets.NumberHelpers.html": {
    "href": "api/Platform.Data.Core.Triplets.NumberHelpers.html",
    "title": "Class NumberHelpers | LinksPlatform",
    "keywords": "Class NumberHelpers Inheritance System.Object NumberHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class NumberHelpers Fields LinksToNumbers Declaration public static Dictionary<Link, long> LinksToNumbers Field Value Type Description Dictionary < Link , System.Int64 > NumbersToLinks Declaration public static Link[] NumbersToLinks Field Value Type Description Link [] Methods FromNumber(Int64) Declaration public static Link FromNumber(long number) Parameters Type Name Description System.Int64 number Returns Type Description Link Recreate() Declaration public static void Recreate() ToNumber(Link) Declaration public static long ToNumber(Link link) Parameters Type Name Description Link link Returns Type Description System.Int64"
  },
  "api/Platform.Data.Core.Triplets.Link.CreatedDelegate.html": {
    "href": "api/Platform.Data.Core.Triplets.Link.CreatedDelegate.html",
    "title": "Delegate Link.CreatedDelegate | LinksPlatform",
    "keywords": "Delegate Link.CreatedDelegate Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public delegate void CreatedDelegate(LinkDefinition createdLink); Parameters Type Name Description LinkDefinition createdLink"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyOneOffCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyOneOffCounter-1.html",
    "title": "Class TotalSequenceSymbolFrequencyOneOffCounter<TLink> | LinksPlatform",
    "keywords": "Class TotalSequenceSymbolFrequencyOneOffCounter<TLink> Inheritance System.Object TotalSequenceSymbolFrequencyOneOffCounter<TLink> TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class TotalSequenceSymbolFrequencyOneOffCounter<TLink> : ICounter<TLink> Type Parameters Name Description TLink Constructors TotalSequenceSymbolFrequencyOneOffCounter(ILinks<TLink>, TLink) Declaration public TotalSequenceSymbolFrequencyOneOffCounter(ILinks<TLink> links, TLink symbol) Parameters Type Name Description ILinks <TLink> links TLink symbol Fields _links Declaration protected readonly ILinks<TLink> _links Field Value Type Description ILinks <TLink> _symbol Declaration protected readonly TLink _symbol Field Value Type Description TLink _total Declaration protected TLink _total Field Value Type Description TLink _visits Declaration protected readonly HashSet<TLink> _visits Field Value Type Description HashSet <TLink> Methods Count() Declaration public TLink Count() Returns Type Description TLink CountSequenceSymbolFrequency(TLink) Declaration protected virtual void CountSequenceSymbolFrequency(TLink link) Parameters Type Name Description TLink link"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyCounter-1.html",
    "title": "Class TotalSequenceSymbolFrequencyCounter<TLink> | LinksPlatform",
    "keywords": "Class TotalSequenceSymbolFrequencyCounter<TLink> Inheritance System.Object TotalSequenceSymbolFrequencyCounter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class TotalSequenceSymbolFrequencyCounter<TLink> : ICounter<TLink, TLink> Type Parameters Name Description TLink Constructors TotalSequenceSymbolFrequencyCounter(ILinks<TLink>) Declaration public TotalSequenceSymbolFrequencyCounter(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods Count(TLink) Declaration public TLink Count(TLink symbol) Parameters Type Name Description TLink symbol Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.html",
    "title": "Namespace Platform.Data.Core.Sequences.Frequencies.Cache | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Sequences.Frequencies.Cache Classes DoubletComparer<T> FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> LinkFrequenciesCache<TLink> LinkFrequency<TLink> Structs Doublet<T>"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.LinkFrequency-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.LinkFrequency-1.html",
    "title": "Class LinkFrequency<TLink> | LinksPlatform",
    "keywords": "Class LinkFrequency<TLink> Inheritance System.Object LinkFrequency<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class LinkFrequency<TLink> Type Parameters Name Description TLink Constructors LinkFrequency() Declaration public LinkFrequency() LinkFrequency(TLink, TLink) Declaration public LinkFrequency(TLink frequency, TLink link) Parameters Type Name Description TLink frequency TLink link Fields Frequency Declaration public TLink Frequency Field Value Type Description TLink Link Declaration public TLink Link Field Value Type Description TLink Methods DecrementFrequency() Declaration public void DecrementFrequency() IncrementFrequency() Declaration public void IncrementFrequency() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/Platform.Data.Core.Exceptions.ArgumentLinkDoesNotExistsException-1.html": {
    "href": "api/Platform.Data.Core.Exceptions.ArgumentLinkDoesNotExistsException-1.html",
    "title": "Class ArgumentLinkDoesNotExistsException<TLink> | LinksPlatform",
    "keywords": "Class ArgumentLinkDoesNotExistsException<TLink> Inheritance System.Object ArgumentLinkDoesNotExistsException<TLink> Namespace : Platform.Data.Core.Exceptions Assembly : cs.temp.dll.dll Syntax public class ArgumentLinkDoesNotExistsException<TLink> : ArgumentException Type Parameters Name Description TLink Remarks TODO: Multilingual support for messages formats. Constructors ArgumentLinkDoesNotExistsException(TLink) Declaration public ArgumentLinkDoesNotExistsException(TLink link) Parameters Type Name Description TLink link ArgumentLinkDoesNotExistsException(TLink, String) Declaration public ArgumentLinkDoesNotExistsException(TLink link, string paramName) Parameters Type Name Description TLink link System.String paramName"
  },
  "api/Platform.Data.Core.Doublets.html": {
    "href": "api/Platform.Data.Core.Doublets.html",
    "title": "Namespace Platform.Data.Core.Doublets | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Doublets Classes AddressToUnaryNumberConverter<TLink> DefaultLinkPropertyOperator<TLink> DefaultSequenceElementCreteriaMatcher<TLink> FrequencyIncrementer<TLink> FrequencyPropertyOperator<TLink> Hybrid<T> LinkExtensions LinkFrequencyIncrementer<TLink> LinksCascadeDependenciesResolver<T> LinksCascadeUniquenessAndDependenciesResolver<T> LinksConstants<TDecision> LinksConstants<TDecision, TAddress> LinksConstants<TDecision, TAddress, TPartIndex> LinksDecoratorBase<T> LinksDependenciesValidator<T> LinksDisposableDecoratorBase<T> LinksExtensions LinksInnerReferenceValidator<T> LinksNonExistentReferencesCreator<T> LinksNullToSelfReferenceResolver<T> LinksOperatorBase<TLink> LinksSelfReferenceResolver<T> LinksUniquenessResolver<T> LinksUniquenessValidator<T> LinkToItsFrequencyNumberConveter<TLink> NonNullContentsLinkDeletionResolver<T> PowerOf2ToUnaryNumberConverter<TLink> ResizableDirectMemoryLinks<T> Stack<TLink> StackExtensions SynchronizedLinks<T> UInt64Links Представляет объект для работы с базой данных (файлом) в формате Links (массива взаимосвязей). UInt64LinksTransactionsLayer UInt64LinksTransactionsLayer.Transaction UInt64ResizableDirectMemoryLinks UnaryNumberIncrementer<TLink> UnaryNumberToAddressAddOperationConverter<TLink> UnaryNumberToAddressOrOperationConverter<TLink> Structs Link<T> Структура описывающая уникальную связь. UInt64Link Структура описывающая уникальную связь. UInt64LinksTransactionsLayer.Transition Interfaces ILinks<TLink> Представляет интерфейс для работы с данными в формате Links (хранилища взаимосвязей). ILinksAddressConstants<TAddress> ILinksCombinedConstants<TDecision, TAddress, TPartIndex> ILinksDecisionConstants<TDecision> ILinksOptions<TLink> ILinksPartConstants<TPartIndex> ISynchronizedLinks<T>"
  },
  "api/Platform.Data.Core.Doublets.ResizableDirectMemoryLinks-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ResizableDirectMemoryLinks-1.html",
    "title": "Class ResizableDirectMemoryLinks<T> | LinksPlatform",
    "keywords": "Class ResizableDirectMemoryLinks<T> Inheritance System.Object ResizableDirectMemoryLinks<T> Implements ILinks <T> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class ResizableDirectMemoryLinks<T> : DisposableBase, ILinks<T> Type Parameters Name Description T Remarks TODO: Вместо address и size принимать IMemory (возможно потребуется добавить Step и StepSize). Constructors ResizableDirectMemoryLinks(IResizableDirectMemory) Declaration public ResizableDirectMemoryLinks(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory ResizableDirectMemoryLinks(IResizableDirectMemory, Int64) Declaration public ResizableDirectMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory memory System.Int64 memoryReservationStep ResizableDirectMemoryLinks(String) Declaration public ResizableDirectMemoryLinks(string address) Parameters Type Name Description System.String address ResizableDirectMemoryLinks(String, Int64) Создаёт экземпляр базы данных Links в файле по указанному адресу, с указанным минимальным шагом расширения базы данных. Declaration public ResizableDirectMemoryLinks(string address, long memoryReservationStep) Parameters Type Name Description System.String address Полный пусть к файлу базы данных. System.Int64 memoryReservationStep Минимальный шаг расширения базы данных в байтах. Fields DefaultLinksSizeStep Declaration public static readonly long DefaultLinksSizeStep Field Value Type Description System.Int64 LinkHeaderSizeInBytes Declaration public static readonly int LinkHeaderSizeInBytes Field Value Type Description System.Int32 LinkSizeInBytes Возвращает размер одной связи в байтах. Declaration public static readonly int LinkSizeInBytes Field Value Type Description System.Int32 Properties AllowMultipleDisposeCalls Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description System.Boolean Constants Declaration public ILinksCombinedConstants<T, T, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <T, T, System.Int32 > Methods Count(IList<T>) Declaration public T Count(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Create() Declaration public T Create() Returns Type Description T Remarks TODO: Возможно нужно будет заполнение нулями, если внешнее API ими не заполняет пространство Delete(T) Declaration public void Delete(T link) Parameters Type Name Description T link DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Each(Func<IList<T>, T>, IList<T>) Declaration public T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description Func < IList <T>, T> handler IList <T> restrictions Returns Type Description T GetLinkStruct(T) Declaration public Link<T> GetLinkStruct(T linkIndex) Parameters Type Name Description T linkIndex Returns Type Description Link <T> Update(IList<T>) Declaration public T Update(IList<T> values) Parameters Type Name Description IList <T> values Returns Type Description T Remarks TODO: Возможно можно перемещать значения, если указан индекс, но значение существует в другом месте (но не в менеджере памяти, а в логике Links) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.PowerOf2ToUnaryNumberConverter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.PowerOf2ToUnaryNumberConverter-1.html",
    "title": "Class PowerOf2ToUnaryNumberConverter<TLink> | LinksPlatform",
    "keywords": "Class PowerOf2ToUnaryNumberConverter<TLink> Inheritance System.Object LinksOperatorBase <TLink> PowerOf2ToUnaryNumberConverter<TLink> Implements IConverter < System.Int32 , TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class PowerOf2ToUnaryNumberConverter<TLink> : LinksOperatorBase<TLink>, IConverter<int, TLink> Type Parameters Name Description TLink Constructors PowerOf2ToUnaryNumberConverter(ILinks<TLink>, TLink) Declaration public PowerOf2ToUnaryNumberConverter(ILinks<TLink> links, TLink one) Parameters Type Name Description ILinks <TLink> links TLink one Methods Convert(Int32) Declaration public TLink Convert(int power) Parameters Type Name Description System.Int32 power Returns Type Description TLink Implements IConverter<, >"
  },
  "api/Platform.Data.Core.Doublets.NonNullContentsLinkDeletionResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.NonNullContentsLinkDeletionResolver-1.html",
    "title": "Class NonNullContentsLinkDeletionResolver<T> | LinksPlatform",
    "keywords": "Class NonNullContentsLinkDeletionResolver<T> Inheritance System.Object LinksDecoratorBase <T> NonNullContentsLinkDeletionResolver<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Update(IList<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class NonNullContentsLinkDeletionResolver<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors NonNullContentsLinkDeletionResolver(ILinks<T>) Declaration public NonNullContentsLinkDeletionResolver(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Delete(T) Declaration public override void Delete(T link) Parameters Type Name Description T link Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Delete(T) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksUniquenessValidator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksUniquenessValidator-1.html",
    "title": "Class LinksUniquenessValidator<T> | LinksPlatform",
    "keywords": "Class LinksUniquenessValidator<T> Inheritance System.Object LinksDecoratorBase <T> LinksUniquenessValidator<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Delete(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksUniquenessValidator<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksUniquenessValidator(ILinks<T>) Declaration public LinksUniquenessValidator(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Collections.Trees.SizedAndThreadedAVLBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.SizedAndThreadedAVLBalancedTreeMethods-1.html",
    "title": "Class SizedAndThreadedAVLBalancedTreeMethods<TElement> | LinksPlatform",
    "keywords": "Class SizedAndThreadedAVLBalancedTreeMethods<TElement> Combination of Size, Height (AVL), and threads. Based on: https://github.com/programmatom/TreeLib/blob/master/TreeLib/TreeLib/Generated/AVLTreeList.cs Which itself based on: https://github.com/GNOME/glib/blob/master/glib/gtree.c Inheritance System.Object GenericCollectionMethodsBase <TElement> BinaryTreeMethodsBase <TElement> SizedAndThreadedAVLBalancedTreeMethods<TElement> Inherited Members BinaryTreeMethodsBase<TElement>.GetLeftPointer(TElement) BinaryTreeMethodsBase<TElement>.GetRightPointer(TElement) BinaryTreeMethodsBase<TElement>.GetLeftValue(TElement) BinaryTreeMethodsBase<TElement>.GetRightValue(TElement) BinaryTreeMethodsBase<TElement>.GetSize(TElement) BinaryTreeMethodsBase<TElement>.SetLeft(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetRight(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetSize(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheLeftOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheRightOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.IncrementSize(TElement) BinaryTreeMethodsBase<TElement>.DecrementSize(TElement) BinaryTreeMethodsBase<TElement>.GetLeftSize(TElement) BinaryTreeMethodsBase<TElement>.GetRightSize(TElement) BinaryTreeMethodsBase<TElement>.GetSizeOrZero(TElement) BinaryTreeMethodsBase<TElement>.FixSize(TElement) BinaryTreeMethodsBase<TElement>.LeftRotate(IntPtr) BinaryTreeMethodsBase<TElement>.LeftRotate(TElement) BinaryTreeMethodsBase<TElement>.RightRotate(IntPtr) BinaryTreeMethodsBase<TElement>.RightRotate(TElement) BinaryTreeMethodsBase<TElement>.Contains(TElement, TElement) BinaryTreeMethodsBase<TElement>.Attach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.Detach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.GetSize(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSizes(IntPtr) BinaryTreeMethodsBase<TElement>.ValidateSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSize(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(IntPtr) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNode(TElement) BinaryTreeMethodsBase<TElement>.PrintNodeValue(TElement, StringBuilder) GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Trees Assembly : cs.temp.dll.dll Syntax public abstract class SizedAndThreadedAVLBalancedTreeMethods<TElement> : BinaryTreeMethodsBase<TElement> Type Parameters Name Description TElement Remarks TODO: Compare performance with and without unchecked. Methods AttachCore(IntPtr, TElement) Declaration protected override void AttachCore(IntPtr root, TElement node) Parameters Type Name Description IntPtr root TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.AttachCore(IntPtr, TElement) ClearNode(TElement) Declaration protected override void ClearNode(TElement node) Parameters Type Name Description TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.ClearNode(TElement) DecrementBalance(TElement) Declaration protected void DecrementBalance(TElement node) Parameters Type Name Description TElement node DetachCore(IntPtr, TElement) Declaration protected override void DetachCore(IntPtr root, TElement node) Parameters Type Name Description IntPtr root TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.DetachCore(IntPtr, TElement) GetBalance(TElement) Declaration protected abstract sbyte GetBalance(TElement node) Parameters Type Name Description TElement node Returns Type Description System.SByte GetLeftIsChild(TElement) Declaration protected abstract bool GetLeftIsChild(TElement node) Parameters Type Name Description TElement node Returns Type Description System.Boolean GetLeftOrDefault(TElement) Declaration protected override TElement GetLeftOrDefault(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.GetLeftOrDefault(TElement) GetNext(TElement) Declaration protected TElement GetNext(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetPrevious(TElement) Declaration protected TElement GetPrevious(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetRightIsChild(TElement) Declaration protected abstract bool GetRightIsChild(TElement node) Parameters Type Name Description TElement node Returns Type Description System.Boolean GetRightOrDefault(TElement) Declaration protected override TElement GetRightOrDefault(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.GetRightOrDefault(TElement) IncrementBalance(TElement) Declaration protected void IncrementBalance(TElement node) Parameters Type Name Description TElement node LeftRotateWithBalance(TElement) Declaration protected TElement LeftRotateWithBalance(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement PrintNode(TElement, StringBuilder, Int32) Declaration protected override void PrintNode(TElement node, StringBuilder sb, int level = 0) Parameters Type Name Description TElement node StringBuilder sb System.Int32 level Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.PrintNode(TElement, StringBuilder, System.Int32) RightRotateWithBalance(TElement) Declaration protected TElement RightRotateWithBalance(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement SetBalance(TElement, SByte) Declaration protected abstract void SetBalance(TElement node, sbyte value) Parameters Type Name Description TElement node System.SByte value SetLeftIsChild(TElement, Boolean) Declaration protected abstract void SetLeftIsChild(TElement node, bool value) Parameters Type Name Description TElement node System.Boolean value SetRightIsChild(TElement, Boolean) Declaration protected abstract void SetRightIsChild(TElement node, bool value) Parameters Type Name Description TElement node System.Boolean value"
  },
  "api/Platform.Helpers.Reflection.Types-7.html": {
    "href": "api/Platform.Helpers.Reflection.Types-7.html",
    "title": "Class Types<T1, T2, T3, T4, T5, T6, T7> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5, T6, T7> Inheritance System.Object Types Types<T1, T2, T3, T4, T5, T6, T7> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5, T6, T7> : Types Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-6.html": {
    "href": "api/Platform.Helpers.Reflection.Types-6.html",
    "title": "Class Types<T1, T2, T3, T4, T5, T6> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5, T6> Inheritance System.Object Types Types<T1, T2, T3, T4, T5, T6> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5, T6> : Types Type Parameters Name Description T1 T2 T3 T4 T5 T6 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-5.html": {
    "href": "api/Platform.Helpers.Reflection.Types-5.html",
    "title": "Class Types<T1, T2, T3, T4, T5> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5> Inheritance System.Object Types Types<T1, T2, T3, T4, T5> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5> : Types Type Parameters Name Description T1 T2 T3 T4 T5 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-4.html": {
    "href": "api/Platform.Helpers.Reflection.Types-4.html",
    "title": "Class Types<T1, T2, T3, T4> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4> Inheritance System.Object Types Types<T1, T2, T3, T4> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4> : Types Type Parameters Name Description T1 T2 T3 T4 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-3.html": {
    "href": "api/Platform.Helpers.Reflection.Types-3.html",
    "title": "Class Types<T1, T2, T3> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3> Inheritance System.Object Types Types<T1, T2, T3> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3> : Types Type Parameters Name Description T1 T2 T3 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-2.html": {
    "href": "api/Platform.Helpers.Reflection.Types-2.html",
    "title": "Class Types<T1, T2> | LinksPlatform",
    "keywords": "Class Types<T1, T2> Inheritance System.Object Types Types<T1, T2> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2> : Types Type Parameters Name Description T1 T2 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-14.html": {
    "href": "api/Platform.Helpers.Reflection.Types-14.html",
    "title": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Inheritance System.Object Types Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : Types Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Random.RandomExtensions.html": {
    "href": "api/Platform.Helpers.Random.RandomExtensions.html",
    "title": "Class RandomExtensions | LinksPlatform",
    "keywords": "Class RandomExtensions Inheritance System.Object RandomExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Random Assembly : cs.temp.dll.dll Syntax public static class RandomExtensions Methods NextBoolean(Random) Declaration public static bool NextBoolean(this Random rnd) Parameters Type Name Description System.Random rnd Returns Type Description System.Boolean NextUInt64(Random, UInt64, UInt64) Declaration public static ulong NextUInt64(this Random rnd, ulong minValue = 0UL, ulong maxValue = 18446744073709551615UL) Parameters Type Name Description System.Random rnd System.UInt64 minValue System.UInt64 maxValue Returns Type Description System.UInt64"
  },
  "api/Platform.Helpers.IO.html": {
    "href": "api/Platform.Helpers.IO.html",
    "title": "Namespace Platform.Helpers.IO | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.IO Classes FileHelpers StreamExtensions"
  },
  "api/Platform.Helpers.IO.StreamExtensions.html": {
    "href": "api/Platform.Helpers.IO.StreamExtensions.html",
    "title": "Class StreamExtensions | LinksPlatform",
    "keywords": "Class StreamExtensions Inheritance System.Object StreamExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.IO Assembly : cs.temp.dll.dll Syntax public static class StreamExtensions Methods ReadAll<T>(Stream) Declaration public static T[] ReadAll<T>(this Stream stream) where T : struct Parameters Type Name Description Stream stream Returns Type Description T[] Type Parameters Name Description T ReadOrDefault<T>(Stream) Declaration public static T ReadOrDefault<T>(this Stream stream) where T : struct Parameters Type Name Description Stream stream Returns Type Description T Type Parameters Name Description T Write<T>(Stream, T) Declaration public static void Write<T>(this Stream stream, T value) where T : struct Parameters Type Name Description Stream stream T value Type Parameters Name Description T"
  },
  "api/Platform.Helpers.IO.FileHelpers.html": {
    "href": "api/Platform.Helpers.IO.FileHelpers.html",
    "title": "Class FileHelpers | LinksPlatform",
    "keywords": "Class FileHelpers Inheritance System.Object FileHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.IO Assembly : cs.temp.dll.dll Syntax public static class FileHelpers Methods Append(String) Declaration public static FileStream Append(string path) Parameters Type Name Description System.String path Returns Type Description FileStream GetSize(String) Declaration public static long GetSize(string path) Parameters Type Name Description System.String path Returns Type Description System.Int64 ReadAll<T>(String) Declaration public static T[] ReadAll<T>(string path) where T : struct Parameters Type Name Description System.String path Returns Type Description T[] Type Parameters Name Description T ReadAllChars(String) Declaration public static char[] ReadAllChars(string path) Parameters Type Name Description System.String path Returns Type Description System.Char [] ReadFirstOrDefault<T>(String) Declaration public static T ReadFirstOrDefault<T>(string path) where T : struct Parameters Type Name Description System.String path Returns Type Description T Type Parameters Name Description T ReadLastOrDefault<T>(String) Declaration public static T ReadLastOrDefault<T>(string path) where T : struct Parameters Type Name Description System.String path Returns Type Description T Type Parameters Name Description T SetSize(String, Int64) Declaration public static void SetSize(string path, long size) Parameters Type Name Description System.String path System.Int64 size WriteFirst<T>(String, T) Declaration public static void WriteFirst<T>(string path, T value) where T : struct Parameters Type Name Description System.String path T value Type Parameters Name Description T"
  },
  "api/Platform.Helpers.HashHelpers.html": {
    "href": "api/Platform.Helpers.HashHelpers.html",
    "title": "Class HashHelpers | LinksPlatform",
    "keywords": "Class HashHelpers Inheritance System.Object HashHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public static class HashHelpers Methods Generate<T>(T[]) Declaration public static int Generate<T>(params T[] hashCodes) Parameters Type Name Description T[] hashCodes Returns Type Description System.Int32 Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Global.html": {
    "href": "api/Platform.Helpers.Global.html",
    "title": "Class Global | LinksPlatform",
    "keywords": "Class Global Inheritance System.Object Global Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public static class Global Fields Scope Declaration public static Scope Scope Field Value Type Description Scope Trash Представляет поле-помойку, куда можно сбрасывать ненужные значения. В некоторых случаях это может помочь избежать нежелательной оптимизации (исключения записи в переменную в конце функции) и сделать вид, что значение действительно используется. Фактически таким образом мы обманываем компилятор. Такое может быть полезно при реализации тестов на производительность. Declaration public static object Trash Field Value Type Description System.Object Methods OnIgnoredException(Exception) Declaration public static void OnIgnoredException(Exception exception) Parameters Type Name Description Exception exception Events IgnoredException Declaration public static event EventHandler<Exception> IgnoredException Event Type Type Description EventHandler < Exception >"
  },
  "api/Platform.Helpers.Default.html": {
    "href": "api/Platform.Helpers.Default.html",
    "title": "Class Default | LinksPlatform",
    "keywords": "Class Default Inheritance System.Object Default Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Default Methods GetOrCreateThreadInstance<T>() Declaration public static T GetOrCreateThreadInstance<T>() where T : class, new() Returns Type Description T Type Parameters Name Description T GetOrCreateThreadInstance<T>(T) Declaration public static T GetOrCreateThreadInstance<T>(T nullValue) where T : struct Parameters Type Name Description T nullValue Returns Type Description T Type Parameters Name Description T InitializeThreadInstance<T>() Declaration public static void InitializeThreadInstance<T>() where T : new() Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Collections.Segments.Walkers.DuplicateSegmentsWalkerBase-2.html": {
    "href": "api/Platform.Helpers.Collections.Segments.Walkers.DuplicateSegmentsWalkerBase-2.html",
    "title": "Class DuplicateSegmentsWalkerBase<T, TSegment> | LinksPlatform",
    "keywords": "Class DuplicateSegmentsWalkerBase<T, TSegment> Inheritance System.Object AllSegmentsWalkerBase <T, TSegment> DuplicateSegmentsWalkerBase<T, TSegment> DictionaryBasedDuplicateSegmentsWalkerBase<T, TSegment> DuplicateSegmentsWalkerBase<T> Inherited Members AllSegmentsWalkerBase<T, TSegment>.DefaultMinimumStringSegmentLength AllSegmentsWalkerBase<T, TSegment>.WalkAll(IList<T>) AllSegmentsWalkerBase<T, TSegment>.CreateSegment(IList<T>, Int32, Int32) AllSegmentsWalkerBase<T, TSegment>.Iteration(TSegment) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Segments.Walkers Assembly : cs.temp.dll.dll Syntax public abstract class DuplicateSegmentsWalkerBase<T, TSegment> : AllSegmentsWalkerBase<T, TSegment> where TSegment : Segment<T> Type Parameters Name Description T TSegment Constructors DuplicateSegmentsWalkerBase(Int32) Declaration protected DuplicateSegmentsWalkerBase(int minimumStringSegmentLength = 2) Parameters Type Name Description System.Int32 minimumStringSegmentLength Methods GetSegmentFrequency(TSegment) Declaration protected abstract long GetSegmentFrequency(TSegment segment) Parameters Type Name Description TSegment segment Returns Type Description System.Int64 Iteration(TSegment) Declaration protected override void Iteration(TSegment segment) Parameters Type Name Description TSegment segment Overrides Platform.Helpers.Collections.Segments.Walkers.AllSegmentsWalkerBase<T, TSegment>.Iteration(TSegment) OnDublicateFound(TSegment) Declaration protected abstract void OnDublicateFound(TSegment segment) Parameters Type Name Description TSegment segment SetSegmentFrequency(TSegment, Int64) Declaration protected abstract void SetSegmentFrequency(TSegment segment, long frequency) Parameters Type Name Description TSegment segment System.Int64 frequency"
  },
  "api/Platform.Helpers.Collections.Lists.html": {
    "href": "api/Platform.Helpers.Collections.Lists.html",
    "title": "Namespace Platform.Helpers.Collections.Lists | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Collections.Lists Classes IListComparer<T> IListEqualityComparer<T> ListExtensions"
  },
  "api/Platform.Helpers.Collections.Lists.ListExtensions.html": {
    "href": "api/Platform.Helpers.Collections.Lists.ListExtensions.html",
    "title": "Class ListExtensions | LinksPlatform",
    "keywords": "Class ListExtensions Inheritance System.Object ListExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections.Lists Assembly : cs.temp.dll.dll Syntax public static class ListExtensions Methods AddAndReturnTrue<T>(IList<T>, T) Declaration public static bool AddAndReturnTrue<T>(this IList<T> list, T element) Parameters Type Name Description IList <T> list T element Returns Type Description System.Boolean Type Parameters Name Description T CompareTo<T>(IList<T>, IList<T>) Declaration public static int CompareTo<T>(this IList<T> left, IList<T> right) Parameters Type Name Description IList <T> left IList <T> right Returns Type Description System.Int32 Type Parameters Name Description T EqualTo<T>(IList<T>, IList<T>) Declaration public static bool EqualTo<T>(this IList<T> list, IList<T> other) Parameters Type Name Description IList <T> list IList <T> other Returns Type Description System.Boolean Type Parameters Name Description T ForEach<T>(IList<T>, Action<T>) Declaration public static void ForEach<T>(this IList<T> list, Action<T> action) Parameters Type Name Description IList <T> list Action <T> action Type Parameters Name Description T GenerateHashCode<T>(IList<T>) Declaration public static int GenerateHashCode<T>(this IList<T> list) Parameters Type Name Description IList <T> list Returns Type Description System.Int32 Type Parameters Name Description T Remarks Based on http://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode ToArray<T>(IList<T>, Func<T, Boolean>) Declaration public static T[] ToArray<T>(this IList<T> list, Func<T, bool> predicate) Parameters Type Name Description IList <T> list Func <T, System.Boolean > predicate Returns Type Description T[] Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Collections.Lists.IListEqualityComparer-1.html": {
    "href": "api/Platform.Helpers.Collections.Lists.IListEqualityComparer-1.html",
    "title": "Class IListEqualityComparer<T> | LinksPlatform",
    "keywords": "Class IListEqualityComparer<T> Inheritance System.Object IListEqualityComparer<T> Namespace : Platform.Helpers.Collections.Lists Assembly : cs.temp.dll.dll Syntax public class IListEqualityComparer<T> : IEqualityComparer<IList<T>> Type Parameters Name Description T Methods Equals(IList<T>, IList<T>) Declaration public bool Equals(IList<T> left, IList<T> right) Parameters Type Name Description IList <T> left IList <T> right Returns Type Description System.Boolean GetHashCode(IList<T>) Declaration public int GetHashCode(IList<T> list) Parameters Type Name Description IList <T> list Returns Type Description System.Int32"
  },
  "api/Platform.Helpers.Collections.Lists.IListComparer-1.html": {
    "href": "api/Platform.Helpers.Collections.Lists.IListComparer-1.html",
    "title": "Class IListComparer<T> | LinksPlatform",
    "keywords": "Class IListComparer<T> Inheritance System.Object IListComparer<T> Namespace : Platform.Helpers.Collections.Lists Assembly : cs.temp.dll.dll Syntax public class IListComparer<T> : IComparer<IList<T>> Type Parameters Name Description T Methods Compare(IList<T>, IList<T>) Declaration public int Compare(IList<T> left, IList<T> right) Parameters Type Name Description IList <T> left IList <T> right Returns Type Description System.Int32"
  },
  "api/Platform.Helpers.Collections.IDictionaryExtensions.html": {
    "href": "api/Platform.Helpers.Collections.IDictionaryExtensions.html",
    "title": "Class IDictionaryExtensions | LinksPlatform",
    "keywords": "Class IDictionaryExtensions Inheritance System.Object IDictionaryExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections Assembly : cs.temp.dll.dll Syntax public static class IDictionaryExtensions Methods GetOrAdd<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TKey, TValue>) Declaration public static TValue GetOrAdd<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, Func<TKey, TValue> valueFactory) Parameters Type Name Description IDictionary <TKey, TValue> dictionary TKey key Func <TKey, TValue> valueFactory Returns Type Description TValue Type Parameters Name Description TKey TValue GetOrDefault<TKey, TValue>(IDictionary<TKey, TValue>, TKey) Declaration public static TValue GetOrDefault<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key) Parameters Type Name Description IDictionary <TKey, TValue> dictionary TKey key Returns Type Description TValue Type Parameters Name Description TKey TValue"
  },
  "api/Platform.Helpers.Collections.ICollectionExtensions.html": {
    "href": "api/Platform.Helpers.Collections.ICollectionExtensions.html",
    "title": "Class ICollectionExtensions | LinksPlatform",
    "keywords": "Class ICollectionExtensions Inheritance System.Object ICollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections Assembly : cs.temp.dll.dll Syntax public static class ICollectionExtensions Methods AllEqualToDefault<T>(ICollection<T>) Declaration public static bool AllEqualToDefault<T>(this ICollection<T> collection) Parameters Type Name Description ICollection <T> collection Returns Type Description System.Boolean Type Parameters Name Description T IsNullOrEmpty<T>(ICollection<T>) Declaration public static bool IsNullOrEmpty<T>(this ICollection<T> collection) Parameters Type Name Description ICollection <T> collection Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Collections.Concurrent.html": {
    "href": "api/Platform.Helpers.Collections.Concurrent.html",
    "title": "Namespace Platform.Helpers.Collections.Concurrent | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Collections.Concurrent Classes ConcurrentQueueExtensions ConcurrentStackExtensions"
  },
  "api/Platform.Examples.MasterServerCLI.html": {
    "href": "api/Platform.Examples.MasterServerCLI.html",
    "title": "Class MasterServerCLI | LinksPlatform",
    "keywords": "Class MasterServerCLI Inheritance System.Object MasterServerCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class MasterServerCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.SequenceSymbolFrequencyOneOffCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.SequenceSymbolFrequencyOneOffCounter-1.html",
    "title": "Class SequenceSymbolFrequencyOneOffCounter<TLink> | LinksPlatform",
    "keywords": "Class SequenceSymbolFrequencyOneOffCounter<TLink> Inheritance System.Object SequenceSymbolFrequencyOneOffCounter<TLink> MarkedSequenceSymbolFrequencyOneOffCounter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class SequenceSymbolFrequencyOneOffCounter<TLink> : ICounter<TLink> Type Parameters Name Description TLink Constructors SequenceSymbolFrequencyOneOffCounter(ILinks<TLink>, TLink, TLink) Declaration public SequenceSymbolFrequencyOneOffCounter(ILinks<TLink> links, TLink sequenceLink, TLink symbol) Parameters Type Name Description ILinks <TLink> links TLink sequenceLink TLink symbol Fields _links Declaration protected readonly ILinks<TLink> _links Field Value Type Description ILinks <TLink> _sequenceLink Declaration protected readonly TLink _sequenceLink Field Value Type Description TLink _symbol Declaration protected readonly TLink _symbol Field Value Type Description TLink _total Declaration protected TLink _total Field Value Type Description TLink Methods Count() Declaration public virtual TLink Count() Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.MarkedSequenceSymbolFrequencyOneOffCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.MarkedSequenceSymbolFrequencyOneOffCounter-1.html",
    "title": "Class MarkedSequenceSymbolFrequencyOneOffCounter<TLink> | LinksPlatform",
    "keywords": "Class MarkedSequenceSymbolFrequencyOneOffCounter<TLink> Inheritance System.Object SequenceSymbolFrequencyOneOffCounter <TLink> MarkedSequenceSymbolFrequencyOneOffCounter<TLink> Inherited Members SequenceSymbolFrequencyOneOffCounter<TLink>._links SequenceSymbolFrequencyOneOffCounter<TLink>._sequenceLink SequenceSymbolFrequencyOneOffCounter<TLink>._symbol SequenceSymbolFrequencyOneOffCounter<TLink>._total Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class MarkedSequenceSymbolFrequencyOneOffCounter<TLink> : SequenceSymbolFrequencyOneOffCounter<TLink> Type Parameters Name Description TLink Constructors MarkedSequenceSymbolFrequencyOneOffCounter(ILinks<TLink>, ICreteriaMatcher<TLink>, TLink, TLink) Declaration public MarkedSequenceSymbolFrequencyOneOffCounter(ILinks<TLink> links, ICreteriaMatcher<TLink> markedSequenceMatcher, TLink sequenceLink, TLink symbol) Parameters Type Name Description ILinks <TLink> links ICreteriaMatcher <TLink> markedSequenceMatcher TLink sequenceLink TLink symbol Methods Count() Declaration public override TLink Count() Returns Type Description TLink Overrides Platform.Data.Core.Sequences.Frequencies.Counters.SequenceSymbolFrequencyOneOffCounter<TLink>.Count()"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.FrequenciesCacheBasedLinkFrequencyIncrementer-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.FrequenciesCacheBasedLinkFrequencyIncrementer-1.html",
    "title": "Class FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> | LinksPlatform",
    "keywords": "Class FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> Inheritance System.Object FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> : IIncrementer<IList<TLink>> Type Parameters Name Description TLink Constructors FrequenciesCacheBasedLinkFrequencyIncrementer(LinkFrequenciesCache<TLink>) Declaration public FrequenciesCacheBasedLinkFrequencyIncrementer(LinkFrequenciesCache<TLink> cache) Parameters Type Name Description LinkFrequenciesCache <TLink> cache Methods Increment(IList<TLink>) Declaration public IList<TLink> Increment(IList<TLink> sequence) Parameters Type Name Description IList <TLink> sequence Returns Type Description IList <TLink> Remarks Sequence itseft is not changed, only frequency of its doublets is incremented."
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.DoubletComparer-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.DoubletComparer-1.html",
    "title": "Class DoubletComparer<T> | LinksPlatform",
    "keywords": "Class DoubletComparer<T> Inheritance System.Object DoubletComparer<T> Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class DoubletComparer<T> : IEqualityComparer<Doublet<T>> Type Parameters Name Description T Remarks TODO: Может стоит попробовать ref во всех методах (IRefEqualityComparer) 2x faster with comparer Fields Default Declaration public static readonly DoubletComparer<T> Default Field Value Type Description DoubletComparer <T> Methods Equals(Doublet<T>, Doublet<T>) Declaration public bool Equals(Doublet<T> x, Doublet<T> y) Parameters Type Name Description Doublet <T> x Doublet <T> y Returns Type Description System.Boolean GetHashCode(Doublet<T>) Declaration public int GetHashCode(Doublet<T> obj) Parameters Type Name Description Doublet <T> obj Returns Type Description System.Int32"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.Doublet-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.Doublet-1.html",
    "title": "Struct Doublet<T> | LinksPlatform",
    "keywords": "Struct Doublet<T> Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public struct Doublet<T> Type Parameters Name Description T Constructors Doublet(T, T) Declaration public Doublet(T source, T target) Parameters Type Name Description T source T target Fields Source Declaration public T Source Field Value Type Description T Target Declaration public T Target Field Value Type Description T Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/Platform.Data.Core.Sequences.DuplicateSegmentsProvider-1.html": {
    "href": "api/Platform.Data.Core.Sequences.DuplicateSegmentsProvider-1.html",
    "title": "Class DuplicateSegmentsProvider<TLink> | LinksPlatform",
    "keywords": "Class DuplicateSegmentsProvider<TLink> Inheritance System.Object DuplicateSegmentsProvider<TLink> Implements IProvider < IList < KeyValuePair < IList <TLink>, IList <TLink>>>> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class DuplicateSegmentsProvider<TLink> : DictionaryBasedDuplicateSegmentsWalkerBase<TLink>, IProvider<IList<KeyValuePair<IList<TLink>, IList<TLink>>>> Type Parameters Name Description TLink Constructors DuplicateSegmentsProvider(ILinks<TLink>, ISequences<TLink>) Declaration public DuplicateSegmentsProvider(ILinks<TLink> links, ISequences<TLink> sequences) Parameters Type Name Description ILinks <TLink> links ISequences <TLink> sequences Methods CreateSegment(IList<TLink>, Int32, Int32) Declaration protected override Segment<TLink> CreateSegment(IList<TLink> elements, int offset, int length) Parameters Type Name Description IList <TLink> elements System.Int32 offset System.Int32 length Returns Type Description Segment <TLink> Get() Declaration public IList<KeyValuePair<IList<TLink>, IList<TLink>>> Get() Returns Type Description IList < KeyValuePair < IList <TLink>, IList <TLink>>> OnDublicateFound(Segment<TLink>) Declaration protected override void OnDublicateFound(Segment<TLink> segment) Parameters Type Name Description Segment <TLink> segment Implements IProvider<>"
  },
  "api/Platform.Data.Core.Doublets.UInt64ResizableDirectMemoryLinks.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64ResizableDirectMemoryLinks.html",
    "title": "Class UInt64ResizableDirectMemoryLinks | LinksPlatform",
    "keywords": "Class UInt64ResizableDirectMemoryLinks Inheritance System.Object UInt64ResizableDirectMemoryLinks Implements ILinks < UInt64 > Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UInt64ResizableDirectMemoryLinks : DisposableBase, ILinks<UInt64> Remarks TODO: Вместо address и size принимать IMemory (возможно потребуется добавить Step и StepSize). Constructors UInt64ResizableDirectMemoryLinks(IResizableDirectMemory) Declaration public UInt64ResizableDirectMemoryLinks(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory UInt64ResizableDirectMemoryLinks(IResizableDirectMemory, Int64) Declaration public UInt64ResizableDirectMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory memory System.Int64 memoryReservationStep UInt64ResizableDirectMemoryLinks(String) Declaration public UInt64ResizableDirectMemoryLinks(string address) Parameters Type Name Description System.String address UInt64ResizableDirectMemoryLinks(String, Int64) Создаёт экземпляр базы данных Links в файле по указанному адресу, с указанным минимальным шагом расширения базы данных. Declaration public UInt64ResizableDirectMemoryLinks(string address, long memoryReservationStep) Parameters Type Name Description System.String address Полный пусть к файлу базы данных. System.Int64 memoryReservationStep Минимальный шаг расширения базы данных в байтах. Fields DefaultLinksSizeStep Declaration public static readonly long DefaultLinksSizeStep Field Value Type Description System.Int64 LinkSizeInBytes Возвращает размер одной связи в байтах. Declaration public static readonly int LinkSizeInBytes Field Value Type Description System.Int32 Remarks Используется только во вне класса, не рекомедуется использовать внутри. Так как во вне не обязательно будет доступен unsafe С#. Properties AllowMultipleDisposeCalls Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description System.Boolean Constants Declaration public ILinksCombinedConstants<UInt64, UInt64, int> Constants { get; } Property Value Type Description ILinksCombinedConstants < UInt64 , UInt64 , System.Int32 > Methods Count(IList<UInt64>) Declaration public UInt64 Count(IList<UInt64> restrictions) Parameters Type Name Description IList < UInt64 > restrictions Returns Type Description UInt64 Create() Declaration public UInt64 Create() Returns Type Description UInt64 Remarks TODO: Возможно нужно будет заполнение нулями, если внешнее API ими не заполняет пространство Delete(UInt64) Declaration public void Delete(UInt64 link) Parameters Type Name Description UInt64 link DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Each(Func<IList<UInt64>, UInt64>, IList<UInt64>) Declaration public UInt64 Each(Func<IList<UInt64>, UInt64> handler, IList<UInt64> restrictions) Parameters Type Name Description Func < IList < UInt64 >, UInt64 > handler IList < UInt64 > restrictions Returns Type Description UInt64 Update(IList<UInt64>) Declaration public UInt64 Update(IList<UInt64> values) Parameters Type Name Description IList < UInt64 > values Returns Type Description UInt64 Remarks TODO: Возможно можно перемещать значения, если указан индекс, но значение существует в другом месте (но не в менеджере памяти, а в логике Links) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.UInt64Link.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64Link.html",
    "title": "Struct UInt64Link | LinksPlatform",
    "keywords": "Struct UInt64Link Структура описывающая уникальную связь. Implements IEquatable < UInt64Link > IList < System.UInt64 > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public struct UInt64Link : IEquatable<UInt64Link>, IList<ulong> Constructors UInt64Link(IList<UInt64>) Declaration public UInt64Link(IList<ulong> values) Parameters Type Name Description IList < System.UInt64 > values UInt64Link(UInt64, UInt64) Declaration public UInt64Link(ulong source, ulong target) Parameters Type Name Description System.UInt64 source System.UInt64 target UInt64Link(UInt64, UInt64, UInt64) Declaration public UInt64Link(ulong index, ulong source, ulong target) Parameters Type Name Description System.UInt64 index System.UInt64 source System.UInt64 target UInt64Link(UInt64[]) Declaration public UInt64Link(params ulong[] values) Parameters Type Name Description System.UInt64 [] values Fields Index Declaration public readonly ulong Index Field Value Type Description System.UInt64 Null Declaration public static readonly UInt64Link Null Field Value Type Description UInt64Link Source Declaration public readonly ulong Source Field Value Type Description System.UInt64 Target Declaration public readonly ulong Target Field Value Type Description System.UInt64 Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Item[Int32] Declaration public ulong this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.UInt64 Methods Add(UInt64) Declaration public void Add(ulong item) Parameters Type Name Description System.UInt64 item Clear() Declaration public void Clear() Contains(UInt64) Declaration public bool Contains(ulong item) Parameters Type Name Description System.UInt64 item Returns Type Description System.Boolean CopyTo(UInt64[], Int32) Declaration public void CopyTo(ulong[] array, int arrayIndex) Parameters Type Name Description System.UInt64 [] array System.Int32 arrayIndex Create(UInt64, UInt64) Declaration public static UInt64Link Create(ulong source, ulong target) Parameters Type Name Description System.UInt64 source System.UInt64 target Returns Type Description UInt64Link Equals(UInt64Link) Declaration public bool Equals(UInt64Link other) Parameters Type Name Description UInt64Link other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetEnumerator() Declaration public IEnumerator<ulong> GetEnumerator() Returns Type Description IEnumerator < System.UInt64 > GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() IndexOf(UInt64) Declaration public int IndexOf(ulong item) Parameters Type Name Description System.UInt64 item Returns Type Description System.Int32 Insert(Int32, UInt64) Declaration public void Insert(int index, ulong item) Parameters Type Name Description System.Int32 index System.UInt64 item IsNull() Declaration public bool IsNull() Returns Type Description System.Boolean Remove(UInt64) Declaration public bool Remove(ulong item) Parameters Type Name Description System.UInt64 item Returns Type Description System.Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index ToArray() Declaration public ulong[] ToArray() Returns Type Description System.UInt64 [] ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString(UInt64, UInt64) Declaration public static string ToString(ulong source, ulong target) Parameters Type Name Description System.UInt64 source System.UInt64 target Returns Type Description System.String ToString(UInt64, UInt64, UInt64) Declaration public static string ToString(ulong index, ulong source, ulong target) Parameters Type Name Description System.UInt64 index System.UInt64 source System.UInt64 target Returns Type Description System.String Operators Implicit(UInt64Link to UInt64[]) Declaration public static implicit operator ulong[](UInt64Link link) Parameters Type Name Description UInt64Link link Returns Type Description System.UInt64 [] Implicit(UInt64[] to UInt64Link) Declaration public static implicit operator UInt64Link(ulong[] linkArray) Parameters Type Name Description System.UInt64 [] linkArray Returns Type Description UInt64Link Implements IEquatable<> IList<>"
  },
  "api/Platform.Data.Core.Doublets.LinksSelfReferenceResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksSelfReferenceResolver-1.html",
    "title": "Class LinksSelfReferenceResolver<T> | LinksPlatform",
    "keywords": "Class LinksSelfReferenceResolver<T> Inheritance System.Object LinksDecoratorBase <T> LinksSelfReferenceResolver<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Delete(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksSelfReferenceResolver<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksSelfReferenceResolver(ILinks<T>) Declaration public LinksSelfReferenceResolver(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Each(Func<IList<T>, T>, IList<T>) Declaration public override T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description Func < IList <T>, T> handler IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksOperatorBase-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksOperatorBase-1.html",
    "title": "Class LinksOperatorBase<TLink> | LinksPlatform",
    "keywords": "Class LinksOperatorBase<TLink> Inheritance System.Object LinksOperatorBase<TLink> AddressToUnaryNumberConverter<TLink> DefaultLinkPropertyOperator<TLink> DefaultSequenceElementCreteriaMatcher<TLink> FrequencyIncrementer<TLink> FrequencyPropertyOperator<TLink> LinkFrequencyIncrementer<TLink> LinkToItsFrequencyNumberConveter<TLink> PowerOf2ToUnaryNumberConverter<TLink> UnaryNumberIncrementer<TLink> UnaryNumberToAddressAddOperationConverter<TLink> UnaryNumberToAddressOrOperationConverter<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public abstract class LinksOperatorBase<TLink> Type Parameters Name Description TLink Constructors LinksOperatorBase(ILinks<TLink>) Declaration protected LinksOperatorBase(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Fields Links Declaration protected readonly ILinks<TLink> Links Field Value Type Description ILinks <TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksNullToSelfReferenceResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksNullToSelfReferenceResolver-1.html",
    "title": "Class LinksNullToSelfReferenceResolver<T> | LinksPlatform",
    "keywords": "Class LinksNullToSelfReferenceResolver<T> Inheritance System.Object LinksDecoratorBase <T> LinksNullToSelfReferenceResolver<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Delete(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksNullToSelfReferenceResolver<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksNullToSelfReferenceResolver(ILinks<T>) Declaration public LinksNullToSelfReferenceResolver(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Create() Declaration public override T Create() Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Create() Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksDependenciesValidator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksDependenciesValidator-1.html",
    "title": "Class LinksDependenciesValidator<T> | LinksPlatform",
    "keywords": "Class LinksDependenciesValidator<T> Inheritance System.Object LinksDecoratorBase <T> LinksDependenciesValidator<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksDependenciesValidator<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksDependenciesValidator(ILinks<T>) Declaration public LinksDependenciesValidator(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Delete(T) Declaration public override void Delete(T link) Parameters Type Name Description T link Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Delete(T) Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksCascadeDependenciesResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksCascadeDependenciesResolver-1.html",
    "title": "Class LinksCascadeDependenciesResolver<T> | LinksPlatform",
    "keywords": "Class LinksCascadeDependenciesResolver<T> Inheritance System.Object LinksDecoratorBase <T> LinksCascadeDependenciesResolver<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Update(IList<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksCascadeDependenciesResolver<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksCascadeDependenciesResolver(ILinks<T>) Declaration public LinksCascadeDependenciesResolver(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Delete(T) Declaration public override void Delete(T link) Parameters Type Name Description T link Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Delete(T) EnsureNoDependenciesOnDelete(T) Declaration public void EnsureNoDependenciesOnDelete(T link) Parameters Type Name Description T link Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinkToItsFrequencyNumberConveter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinkToItsFrequencyNumberConveter-1.html",
    "title": "Class LinkToItsFrequencyNumberConveter<TLink> | LinksPlatform",
    "keywords": "Class LinkToItsFrequencyNumberConveter<TLink> Inheritance System.Object LinksOperatorBase <TLink> LinkToItsFrequencyNumberConveter<TLink> Implements IConverter < Doublet <TLink>, TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinkToItsFrequencyNumberConveter<TLink> : LinksOperatorBase<TLink>, IConverter<Doublet<TLink>, TLink> Type Parameters Name Description TLink Constructors LinkToItsFrequencyNumberConveter(ILinks<TLink>, ISpecificPropertyOperator<TLink, TLink>, IConverter<TLink>) Declaration public LinkToItsFrequencyNumberConveter(ILinks<TLink> links, ISpecificPropertyOperator<TLink, TLink> frequencyPropertyOperator, IConverter<TLink> unaryNumberToAddressConverter) Parameters Type Name Description ILinks <TLink> links ISpecificPropertyOperator <TLink, TLink> frequencyPropertyOperator IConverter <TLink> unaryNumberToAddressConverter Methods Convert(Doublet<TLink>) Declaration public TLink Convert(Doublet<TLink> doublet) Parameters Type Name Description Doublet <TLink> doublet Returns Type Description TLink Implements IConverter<, >"
  },
  "api/Platform.Data.Core.Doublets.Link-1.html": {
    "href": "api/Platform.Data.Core.Doublets.Link-1.html",
    "title": "Struct Link<T> | LinksPlatform",
    "keywords": "Struct Link<T> Структура описывающая уникальную связь. Implements IEquatable < Link <T>> IList <T> Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public struct Link<T> : IEquatable<Link<T>>, IList<T> Type Parameters Name Description T Constructors Link(T, T) Declaration public Link(T source, T target) Parameters Type Name Description T source T target Link(T, T, T) Declaration public Link(T index, T source, T target) Parameters Type Name Description T index T source T target Link(T[]) Declaration public Link(params T[] values) Parameters Type Name Description T[] values Link(IList<T>) Declaration public Link(IList<T> values) Parameters Type Name Description IList <T> values Fields Index Declaration public readonly T Index Field Value Type Description T Null Declaration public static readonly Link<T> Null Field Value Type Description Link <T> Source Declaration public readonly T Source Field Value Type Description T Target Declaration public readonly T Target Field Value Type Description T Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Item[Int32] Declaration public T this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description T Methods Add(T) Declaration public void Add(T item) Parameters Type Name Description T item Clear() Declaration public void Clear() Contains(T) Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description System.Boolean CopyTo(T[], Int32) Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array System.Int32 arrayIndex Create(T, T) Declaration public static Link<T> Create(T source, T target) Parameters Type Name Description T source T target Returns Type Description Link <T> Equals(Link<T>) Declaration public bool Equals(Link<T> other) Parameters Type Name Description Link <T> other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() IndexOf(T) Declaration public int IndexOf(T item) Parameters Type Name Description T item Returns Type Description System.Int32 Insert(Int32, T) Declaration public void Insert(int index, T item) Parameters Type Name Description System.Int32 index T item IsNull() Declaration public bool IsNull() Returns Type Description System.Boolean Remove(T) Declaration public bool Remove(T item) Parameters Type Name Description T item Returns Type Description System.Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index ToArray() Declaration public T[] ToArray() Returns Type Description T[] ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString(T, T) Declaration public static string ToString(T source, T target) Parameters Type Name Description T source T target Returns Type Description System.String ToString(T, T, T) Declaration public static string ToString(T index, T source, T target) Parameters Type Name Description T index T source T target Returns Type Description System.String Operators Implicit(T[] to Link<T>) Declaration public static implicit operator Link<T>(T[] linkArray) Parameters Type Name Description T[] linkArray Returns Type Description Link <T> Implicit(Link<T> to T[]) Declaration public static implicit operator T[](Link<T> link) Parameters Type Name Description Link <T> link Returns Type Description T[] Implements IEquatable<> IList<>"
  },
  "api/Platform.Tests.Helpers.MathExtensionsTests.html": {
    "href": "api/Platform.Tests.Helpers.MathExtensionsTests.html",
    "title": "Class MathExtensionsTests | LinksPlatform",
    "keywords": "Class MathExtensionsTests Inheritance System.Object MathExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class MathExtensionsTests Methods AbsTest() Declaration public void AbsTest() DecrementTest() Declaration public void DecrementTest() IncrementTest() Declaration public void IncrementTest() NegateTest() Declaration public void NegateTest()"
  },
  "api/Platform.Tests.Helpers.IntPtrExtensionsTests.html": {
    "href": "api/Platform.Tests.Helpers.IntPtrExtensionsTests.html",
    "title": "Class IntPtrExtensionsTests | LinksPlatform",
    "keywords": "Class IntPtrExtensionsTests Inheritance System.Object IntPtrExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class IntPtrExtensionsTests Methods ReadAndWriteOperationsForPointerValuesTest() Declaration public void ReadAndWriteOperationsForPointerValuesTest()"
  },
  "api/Platform.Tests.Helpers.CharsSegmentTests.html": {
    "href": "api/Platform.Tests.Helpers.CharsSegmentTests.html",
    "title": "Class CharsSegmentTests | LinksPlatform",
    "keywords": "Class CharsSegmentTests Inheritance System.Object CharsSegmentTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class CharsSegmentTests Methods EqualsTest() Declaration public static void EqualsTest() GetHashCodeEqualsTest() Declaration public static void GetHashCodeEqualsTest()"
  },
  "api/Platform.Tests.Data.Core.html": {
    "href": "api/Platform.Tests.Data.Core.html",
    "title": "Namespace Platform.Tests.Data.Core | LinksPlatform",
    "keywords": "Namespace Platform.Tests.Data.Core Classes BitStringTests DoubletLinksTests LinksTests OptimalVariantSequenceTests ReadSequenceTests ResizableDirectMemoryLinksTests SequencesTests TempLinksTestScope"
  },
  "api/Platform.Tests.Data.Core.TempLinksTestScope.html": {
    "href": "api/Platform.Tests.Data.Core.TempLinksTestScope.html",
    "title": "Class TempLinksTestScope | LinksPlatform",
    "keywords": "Class TempLinksTestScope Inheritance System.Object TempLinksTestScope Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class TempLinksTestScope : DisposableBase Constructors TempLinksTestScope(Boolean, Boolean, SequencesOptions<UInt64>, Boolean) Declaration public TempLinksTestScope(bool deleteFiles = true, bool useSequences = false, SequencesOptions<ulong> sequencesOptions = null, bool useLog = false) Parameters Type Name Description System.Boolean deleteFiles System.Boolean useSequences SequencesOptions < System.UInt64 > sequencesOptions System.Boolean useLog Fields Links Declaration public readonly SynchronizedLinks<ulong> Links Field Value Type Description SynchronizedLinks < System.UInt64 > MemoryAdapter Declaration public readonly ILinks<ulong> MemoryAdapter Field Value Type Description ILinks < System.UInt64 > Sequences Declaration public readonly Sequences Sequences Field Value Type Description Sequences TempFilename Declaration public readonly string TempFilename Field Value Type Description System.String TempTransactionLogFilename Declaration public readonly string TempTransactionLogFilename Field Value Type Description System.String Methods DeleteFiles() Declaration public void DeleteFiles() DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed"
  },
  "api/Platform.Tests.Data.Core.SequencesTests.html": {
    "href": "api/Platform.Tests.Data.Core.SequencesTests.html",
    "title": "Class SequencesTests | LinksPlatform",
    "keywords": "Class SequencesTests Inheritance System.Object SequencesTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class SequencesTests Methods AllPartialVariantsSearchTest() Declaration public void AllPartialVariantsSearchTest() AllPossibleConnectionsTest() Declaration public void AllPossibleConnectionsTest() AllTreeBreakDownAtSequencesCreationBugTest() Declaration public void AllTreeBreakDownAtSequencesCreationBugTest() AllVariantsSearchTest() Declaration public void AllVariantsSearchTest() BalancedPartialVariantsSearchTest() Declaration public void BalancedPartialVariantsSearchTest() BalancedVariantSearchTest() Declaration public void BalancedVariantSearchTest() CalculateAllUsagesTest() Declaration public void CalculateAllUsagesTest() CompressionEfficiencyTest() Declaration public static void CompressionEfficiencyTest() CompressionStabilityTest() Declaration public static void CompressionStabilityTest() CompressionTest() Declaration public void CompressionTest() CreateAllVariantsTest() Declaration public void CreateAllVariantsTest() IndexTest() Declaration public void IndexTest() PatternMatchTest() Declaration public void PatternMatchTest() RundomNumbersCompressionQualityTest() Declaration public static void RundomNumbersCompressionQualityTest()"
  },
  "api/Platform.Tests.Data.Core.ResizableDirectMemoryLinksTests.html": {
    "href": "api/Platform.Tests.Data.Core.ResizableDirectMemoryLinksTests.html",
    "title": "Class ResizableDirectMemoryLinksTests | LinksPlatform",
    "keywords": "Class ResizableDirectMemoryLinksTests Inheritance System.Object ResizableDirectMemoryLinksTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public static class ResizableDirectMemoryLinksTests Methods BasicFileMappedMemoryTest() Declaration public static void BasicFileMappedMemoryTest() BasicHeapMemoryTest() Declaration public static void BasicHeapMemoryTest() NonexistentReferencesHeapMemoryTest() Declaration public static void NonexistentReferencesHeapMemoryTest()"
  },
  "api/Platform.Sandbox.OperationsExperiments.Mapping.html": {
    "href": "api/Platform.Sandbox.OperationsExperiments.Mapping.html",
    "title": "Enum OperationsExperiments.Mapping | LinksPlatform",
    "keywords": "Enum OperationsExperiments.Mapping Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public enum Mapping Fields Name Description Absence Argument As Creation Deletion Execution For From InCaseMatchingValueIs Itself Linker Links OfMatchingOperationFrom Reference Representation Result Selection Source Target ThatExactlyIs To Update With"
  },
  "api/Platform.Sandbox.NetParserTest.html": {
    "href": "api/Platform.Sandbox.NetParserTest.html",
    "title": "Class NetParserTest | LinksPlatform",
    "keywords": "Class NetParserTest Inheritance System.Object NetParserTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class NetParserTest Methods Run() Declaration public static void Run()"
  },
  "api/Platform.Sandbox.NetParser.html": {
    "href": "api/Platform.Sandbox.NetParser.html",
    "title": "Class NetParser | LinksPlatform",
    "keywords": "Class NetParser Inheritance System.Object NetParser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class NetParser Remarks TODO: Use PEG instead. Methods ParseStatement(String) Declaration public static void ParseStatement(string statement) Parameters Type Name Description System.String statement"
  },
  "api/Platform.Sandbox.IterationsCounter.html": {
    "href": "api/Platform.Sandbox.IterationsCounter.html",
    "title": "Class IterationsCounter | LinksPlatform",
    "keywords": "Class IterationsCounter Inheritance System.Object IterationsCounter Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class IterationsCounter : AllSegmentsWalkerBase<char> Fields IterationsCount Declaration public long IterationsCount Field Value Type Description System.Int64 Methods Iteration(Segment<Char>) Declaration protected override void Iteration(Segment<char> segment) Parameters Type Name Description Segment < System.Char > segment"
  },
  "api/Platform.Sandbox.Inherited.html": {
    "href": "api/Platform.Sandbox.Inherited.html",
    "title": "Class Inherited | LinksPlatform",
    "keywords": "Class Inherited Inheritance System.Object StaticBase < Base > Base Inherited Inherited Members StaticBase<Base>.Instance System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Inherited : Base Methods MethodA() Declaration public static void MethodA()"
  },
  "api/Platform.Helpers.Setter-2.html": {
    "href": "api/Platform.Helpers.Setter-2.html",
    "title": "Class Setter<TResult, TDecision> | LinksPlatform",
    "keywords": "Class Setter<TResult, TDecision> Inheritance System.Object SetterBase <TResult> Setter<TResult, TDecision> Inherited Members SetterBase<TResult>.Result SetterBase<TResult>.Set(TResult) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Setter<TResult, TDecision> : SetterBase<TResult> Type Parameters Name Description TResult TDecision Constructors Setter(TDecision, TDecision, TResult) Declaration public Setter(TDecision trueValue = null, TDecision falseValue = null, TResult defaultValue = null) Parameters Type Name Description TDecision trueValue TDecision falseValue TResult defaultValue Methods SetAndReturnFalse(TResult) Declaration public TDecision SetAndReturnFalse(TResult value) Parameters Type Name Description TResult value Returns Type Description TDecision SetAndReturnTrue(TResult) Declaration public TDecision SetAndReturnTrue(TResult value) Parameters Type Name Description TResult value Returns Type Description TDecision SetFirstAndReturnFalse(IList<TResult>) Declaration public TDecision SetFirstAndReturnFalse(IList<TResult> list) Parameters Type Name Description IList <TResult> list Returns Type Description TDecision SetFirstAndReturnTrue(IList<TResult>) Declaration public TDecision SetFirstAndReturnTrue(IList<TResult> list) Parameters Type Name Description IList <TResult> list Returns Type Description TDecision"
  },
  "api/Platform.Helpers.Reflection.Types-12.html": {
    "href": "api/Platform.Helpers.Reflection.Types-12.html",
    "title": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inheritance System.Object Types Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : Types Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-11.html": {
    "href": "api/Platform.Helpers.Reflection.Types-11.html",
    "title": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inheritance System.Object Types Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : Types Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-10.html": {
    "href": "api/Platform.Helpers.Reflection.Types-10.html",
    "title": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | LinksPlatform",
    "keywords": "Class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inheritance System.Object Types Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : Types Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.Types-1.html": {
    "href": "api/Platform.Helpers.Reflection.Types-1.html",
    "title": "Class Types<T> | LinksPlatform",
    "keywords": "Class Types<T> Inheritance System.Object Types Types<T> Inherited Members Types.ToArray() Types.Get<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public class Types<T> : Types Type Parameters Name Description T Fields Array Declaration public static readonly Type[] Array Field Value Type Description Type []"
  },
  "api/Platform.Helpers.Reflection.TypeExtensions.html": {
    "href": "api/Platform.Helpers.Reflection.TypeExtensions.html",
    "title": "Class TypeExtensions | LinksPlatform",
    "keywords": "Class TypeExtensions Inheritance System.Object TypeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Reflection Assembly : cs.temp.dll.dll Syntax public static class TypeExtensions Methods GetAssembly(Type) Declaration public static Assembly GetAssembly(this Type type) Parameters Type Name Description Type type Returns Type Description Assembly GetBaseType(Type) Declaration public static Type GetBaseType(this Type type) Parameters Type Name Description Type type Returns Type Description Type GetFirstField(Type) Declaration public static FieldInfo GetFirstField(this Type type) Parameters Type Name Description Type type Returns Type Description FieldInfo GetGenericMethod(Type, String, Type[], Type[]) Declaration public static MethodInfo GetGenericMethod(this Type type, string name, Type[] genericParameterTypes, Type[] argumentTypes) Parameters Type Name Description Type type System.String name Type [] genericParameterTypes Type [] argumentTypes Returns Type Description MethodInfo GetStaticFieldValue<T>(Type, String) Declaration public static T GetStaticFieldValue<T>(this Type type, string name) Parameters Type Name Description Type type System.String name Returns Type Description T Type Parameters Name Description T IsGeneric(Type) Declaration public static bool IsGeneric(this Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean IsGeneric(Type, Type) Declaration public static bool IsGeneric(this Type type, Type genericTypeDefinition) Parameters Type Name Description Type type Type genericTypeDefinition Returns Type Description System.Boolean IsNullable(Type) Declaration public static bool IsNullable(this Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean IsSubclassOf(Type, Type) Declaration public static bool IsSubclassOf(this Type type, Type superClass) Parameters Type Name Description Type type Type superClass Returns Type Description System.Boolean IsValueType(Type) Declaration public static bool IsValueType(this Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean"
  },
  "api/Platform.Helpers.Numbers.MathHelpers-1.html": {
    "href": "api/Platform.Helpers.Numbers.MathHelpers-1.html",
    "title": "Class MathHelpers<T> | LinksPlatform",
    "keywords": "Class MathHelpers<T> Inheritance System.Object MathHelpers<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Numbers Assembly : cs.temp.dll.dll Syntax public static class MathHelpers<T> Type Parameters Name Description T Fields Abs Declaration public static readonly Func<T, T> Abs Field Value Type Description Func <T, T> Add Declaration public static readonly Func<T, T, T> Add Field Value Type Description Func <T, T, T> Remarks TODO: Возможно, если компиляцию производить не в делегат, а в объект с методом, то оптимизация компилятором будет работать лучше. TODO: Возможно использовать ссылку на существующий метод - оператор, а не компилировать новый ( http://stackoverflow.com/questions/11113259/how-to-call-custom-operator-with-reflection ) TODO: Решить что лучше dynamic operator или Auto<T> c заранее созданными операторами и возможность расширения через статические методы And Declaration public static readonly Func<T, T, T> And Field Value Type Description Func <T, T, T> Decrement Declaration public static readonly Func<T, T> Decrement Field Value Type Description Func <T, T> GreaterOrEqualThan Declaration public static readonly Func<T, T, bool> GreaterOrEqualThan Field Value Type Description Func <T, T, System.Boolean > GreaterThan Declaration public static readonly Func<T, T, bool> GreaterThan Field Value Type Description Func <T, T, System.Boolean > Increment Declaration public static readonly Func<T, T> Increment Field Value Type Description Func <T, T> IsEquals Declaration public static readonly Func<T, T, bool> IsEquals Field Value Type Description Func <T, T, System.Boolean > LessOrEqualThan Declaration public static readonly Func<T, T, bool> LessOrEqualThan Field Value Type Description Func <T, T, System.Boolean > LessThan Declaration public static readonly Func<T, T, bool> LessThan Field Value Type Description Func <T, T, System.Boolean > Negate Declaration public static readonly Func<T, T> Negate Field Value Type Description Func <T, T> PartialRead Declaration public static readonly Func<T, int, int, T> PartialRead Field Value Type Description Func <T, System.Int32 , System.Int32 , T> PartialWrite Declaration public static readonly Func<T, T, int, int, T> PartialWrite Field Value Type Description Func <T, T, System.Int32 , System.Int32 , T> Subtract Declaration public static readonly Func<T, T, T> Subtract Field Value Type Description Func <T, T, T>"
  },
  "api/Platform.Helpers.Numbers.MathExtensions.html": {
    "href": "api/Platform.Helpers.Numbers.MathExtensions.html",
    "title": "Class MathExtensions | LinksPlatform",
    "keywords": "Class MathExtensions Inheritance System.Object MathExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Numbers Assembly : cs.temp.dll.dll Syntax public static class MathExtensions Methods Abs<T>(ref T) Declaration public static T Abs<T>(this ref T x) where T : struct Parameters Type Name Description T x Returns Type Description T Type Parameters Name Description T Decrement<T>(ref T) Declaration public static T Decrement<T>(this ref T x) where T : struct Parameters Type Name Description T x Returns Type Description T Type Parameters Name Description T Increment<T>(ref T) Declaration public static T Increment<T>(this ref T x) where T : struct Parameters Type Name Description T x Returns Type Description T Type Parameters Name Description T Negate<T>(ref T) Declaration public static T Negate<T>(this ref T x) where T : struct Parameters Type Name Description T x Returns Type Description T Type Parameters Name Description T PartialRead<T>(T, Int32, Int32) Declaration public static T PartialRead<T>(this T target, int shift, int limit) Parameters Type Name Description T target System.Int32 shift System.Int32 limit Returns Type Description T Type Parameters Name Description T PartialWrite<T>(ref T, T, Int32, Int32) Declaration public static T PartialWrite<T>(this ref T target, T source, int shift, int limit) where T : struct Parameters Type Name Description T target T source System.Int32 shift System.Int32 limit Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Numbers.Integer.html": {
    "href": "api/Platform.Helpers.Numbers.Integer.html",
    "title": "Struct Integer | LinksPlatform",
    "keywords": "Struct Integer Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Numbers Assembly : cs.temp.dll.dll Syntax public struct Integer Constructors Integer(UInt64) Declaration public Integer(ulong value) Parameters Type Name Description System.UInt64 value Fields Value Declaration public readonly ulong Value Field Value Type Description System.UInt64 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(Integer to Boolean) Declaration public static implicit operator bool (Integer integer) Parameters Type Name Description Integer integer Returns Type Description System.Boolean Implicit(Integer to Byte) Declaration public static implicit operator byte (Integer integer) Parameters Type Name Description Integer integer Returns Type Description System.Byte Implicit(Integer to Int16) Declaration public static implicit operator short (Integer integer) Parameters Type Name Description Integer integer Returns Type Description System.Int16 Implicit(Integer to Int32) Declaration public static implicit operator int (Integer integer) Parameters Type Name Description Integer integer Returns Type Description System.Int32 Implicit(Integer to Int64) Declaration public static implicit operator long (Integer integer) Parameters Type Name Description Integer integer Returns Type Description System.Int64 Implicit(Integer to SByte) Declaration public static implicit operator sbyte (Integer integer) Parameters Type Name Description Integer integer Returns Type Description System.SByte Implicit(Integer to UInt16) Declaration public static implicit operator ushort (Integer integer) Parameters Type Name Description Integer integer Returns Type Description System.UInt16 Implicit(Integer to UInt32) Declaration public static implicit operator uint (Integer integer) Parameters Type Name Description Integer integer Returns Type Description System.UInt32 Implicit(Integer to UInt64) Declaration public static implicit operator ulong (Integer integer) Parameters Type Name Description Integer integer Returns Type Description System.UInt64 Implicit(Boolean to Integer) Declaration public static implicit operator Integer(bool integer) Parameters Type Name Description System.Boolean integer Returns Type Description Integer Implicit(Byte to Integer) Declaration public static implicit operator Integer(byte integer) Parameters Type Name Description System.Byte integer Returns Type Description Integer Implicit(Int16 to Integer) Declaration public static implicit operator Integer(short integer) Parameters Type Name Description System.Int16 integer Returns Type Description Integer Implicit(Int32 to Integer) Declaration public static implicit operator Integer(int integer) Parameters Type Name Description System.Int32 integer Returns Type Description Integer Implicit(Int64 to Integer) Declaration public static implicit operator Integer(long integer) Parameters Type Name Description System.Int64 integer Returns Type Description Integer Implicit(SByte to Integer) Declaration public static implicit operator Integer(sbyte integer) Parameters Type Name Description System.SByte integer Returns Type Description Integer Implicit(UInt16 to Integer) Declaration public static implicit operator Integer(ushort integer) Parameters Type Name Description System.UInt16 integer Returns Type Description Integer Implicit(UInt32 to Integer) Declaration public static implicit operator Integer(uint integer) Parameters Type Name Description System.UInt32 integer Returns Type Description Integer Implicit(UInt64 to Integer) Declaration public static implicit operator Integer(ulong integer) Parameters Type Name Description System.UInt64 integer Returns Type Description Integer"
  },
  "api/Platform.Helpers.Counter-1.html": {
    "href": "api/Platform.Helpers.Counter-1.html",
    "title": "Class Counter<TValue> | LinksPlatform",
    "keywords": "Class Counter<TValue> Inheritance System.Object Counter Counter<TValue> Inherited Members Counter.Count Counter.Increment() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public class Counter<TValue> : Counter Type Parameters Name Description TValue Methods IncrementAndReturnTrue() Declaration public bool IncrementAndReturnTrue() Returns Type Description System.Boolean IncrementAndReturnTrue(TValue) Declaration public bool IncrementAndReturnTrue(TValue value) Parameters Type Name Description TValue value Returns Type Description System.Boolean"
  },
  "api/Platform.Helpers.Console.html": {
    "href": "api/Platform.Helpers.Console.html",
    "title": "Namespace Platform.Helpers.Console | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Console Classes ConsoleCancellationHandler ConsoleHelpers"
  },
  "api/Platform.Helpers.Console.ConsoleHelpers.html": {
    "href": "api/Platform.Helpers.Console.ConsoleHelpers.html",
    "title": "Class ConsoleHelpers | LinksPlatform",
    "keywords": "Class ConsoleHelpers Inheritance System.Object ConsoleHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Console Assembly : cs.temp.dll.dll Syntax public static class ConsoleHelpers Methods Debug(String, Object[]) Declaration public static void Debug(string format, params object[] args) Parameters Type Name Description System.String format System.Object [] args DisableIgnoredExceptionsAutoPrint() Declaration public static void DisableIgnoredExceptionsAutoPrint() EnableIgnoredExceptionsAutoPrint() Declaration public static void EnableIgnoredExceptionsAutoPrint() GetOrReadArgument(Int32, String, String[]) Declaration public static string GetOrReadArgument(int index, string readMessage, params string[] args) Parameters Type Name Description System.Int32 index System.String readMessage System.String [] args Returns Type Description System.String GetOrReadArgument(Int32, String[]) Declaration public static string GetOrReadArgument(int index, params string[] args) Parameters Type Name Description System.Int32 index System.String [] args Returns Type Description System.String PressAnyKeyToContinue() Declaration public static void PressAnyKeyToContinue()"
  },
  "api/Platform.Helpers.Console.ConsoleCancellationHandler.html": {
    "href": "api/Platform.Helpers.Console.ConsoleCancellationHandler.html",
    "title": "Class ConsoleCancellationHandler | LinksPlatform",
    "keywords": "Class ConsoleCancellationHandler Inheritance System.Object ConsoleCancellationHandler Namespace : Platform.Helpers.Console Assembly : cs.temp.dll.dll Syntax public class ConsoleCancellationHandler : DisposableBase Constructors ConsoleCancellationHandler(Boolean) Declaration public ConsoleCancellationHandler(bool showDefaultIntroMessage = true) Parameters Type Name Description System.Boolean showDefaultIntroMessage Properties IsCancellationRequested Declaration public bool IsCancellationRequested { get; } Property Value Type Description System.Boolean NoCancellationRequested Declaration public bool NoCancellationRequested { get; } Property Value Type Description System.Boolean Source Declaration public CancellationTokenSource Source { get; } Property Value Type Description CancellationTokenSource Token Declaration public CancellationToken Token { get; } Property Value Type Description CancellationToken Methods DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed ForceCancellation() Declaration public void ForceCancellation() Wait() Declaration public void Wait()"
  },
  "api/Platform.Data.Core.Sequences.DuplicateSegmentsCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.DuplicateSegmentsCounter-1.html",
    "title": "Class DuplicateSegmentsCounter<TLink> | LinksPlatform",
    "keywords": "Class DuplicateSegmentsCounter<TLink> Inheritance System.Object DuplicateSegmentsCounter<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class DuplicateSegmentsCounter<TLink> : ICounter<int> Type Parameters Name Description TLink Constructors DuplicateSegmentsCounter(IProvider<IList<KeyValuePair<IList<TLink>, IList<TLink>>>>) Declaration public DuplicateSegmentsCounter(IProvider<IList<KeyValuePair<IList<TLink>, IList<TLink>>>> duplicateFragmentsProvider) Parameters Type Name Description IProvider < IList < KeyValuePair < IList <TLink>, IList <TLink>>>> duplicateFragmentsProvider Methods Count() Declaration public int Count() Returns Type Description System.Int32"
  },
  "api/Platform.Data.Core.Sequences.DefaultSequenceRightHeightProvider-1.html": {
    "href": "api/Platform.Data.Core.Sequences.DefaultSequenceRightHeightProvider-1.html",
    "title": "Class DefaultSequenceRightHeightProvider<TLink> | LinksPlatform",
    "keywords": "Class DefaultSequenceRightHeightProvider<TLink> Inheritance System.Object DefaultSequenceRightHeightProvider<TLink> Implements ISequenceHeightProvider <TLink> IProvider <TLink, TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class DefaultSequenceRightHeightProvider<TLink> : LinksOperatorBase<TLink>, ISequenceHeightProvider<TLink>, IProvider<TLink, TLink> Type Parameters Name Description TLink Constructors DefaultSequenceRightHeightProvider(ILinks<TLink>, ICreteriaMatcher<TLink>) Declaration public DefaultSequenceRightHeightProvider(ILinks<TLink> links, ICreteriaMatcher<TLink> elementMatcher) Parameters Type Name Description ILinks <TLink> links ICreteriaMatcher <TLink> elementMatcher Methods Get(TLink) Declaration public TLink Get(TLink sequence) Parameters Type Name Description TLink sequence Returns Type Description TLink Implements ISequenceHeightProvider<TLink> IProvider<, >"
  },
  "api/Platform.Data.Core.Sequences.DefaultSequenceAppender-1.html": {
    "href": "api/Platform.Data.Core.Sequences.DefaultSequenceAppender-1.html",
    "title": "Class DefaultSequenceAppender<TLink> | LinksPlatform",
    "keywords": "Class DefaultSequenceAppender<TLink> Inheritance System.Object DefaultSequenceAppender<TLink> Implements ISequenceAppender <TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class DefaultSequenceAppender<TLink> : LinksOperatorBase<TLink>, ISequenceAppender<TLink> Type Parameters Name Description TLink Constructors DefaultSequenceAppender(ILinks<TLink>, IStack<TLink>, ISequenceHeightProvider<TLink>) Declaration public DefaultSequenceAppender(ILinks<TLink> links, IStack<TLink> stack, ISequenceHeightProvider<TLink> heightProvider) Parameters Type Name Description ILinks <TLink> links IStack <TLink> stack ISequenceHeightProvider <TLink> heightProvider Methods Append(TLink, TLink) Declaration public TLink Append(TLink sequence, TLink appendant) Parameters Type Name Description TLink sequence TLink appendant Returns Type Description TLink Implements ISequenceAppender<TLink>"
  },
  "api/Platform.Data.Core.Sequences.CompressingConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.CompressingConverter-1.html",
    "title": "Class CompressingConverter<TLink> | LinksPlatform",
    "keywords": "Class CompressingConverter<TLink> Inheritance System.Object LinksListToSequenceConverterBase <TLink> CompressingConverter<TLink> Inherited Members LinksListToSequenceConverterBase<TLink>.Links Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class CompressingConverter<TLink> : LinksListToSequenceConverterBase<TLink> Type Parameters Name Description TLink Remarks TODO: Возможно будет лучше если алгоритм будет выполняться полностью изолированно от Links на этапе сжатия. А именно будет создаваться временный список пар необходимых для выполнения сжатия, в таком случае тип значения элемента массива может быть любым, как char так и ulong. Как только список/словарь пар был выявлен можно разом выполнить создание всех этих пар, а так же разом выполнить замену. Constructors CompressingConverter(ILinks<TLink>, IConverter<IList<TLink>, TLink>, LinkFrequenciesCache<TLink>) Declaration public CompressingConverter(ILinks<TLink> links, IConverter<IList<TLink>, TLink> baseConverter, LinkFrequenciesCache<TLink> doubletFrequenciesCache) Parameters Type Name Description ILinks <TLink> links IConverter < IList <TLink>, TLink> baseConverter LinkFrequenciesCache <TLink> doubletFrequenciesCache CompressingConverter(ILinks<TLink>, IConverter<IList<TLink>, TLink>, LinkFrequenciesCache<TLink>, TLink, Boolean) Declaration public CompressingConverter(ILinks<TLink> links, IConverter<IList<TLink>, TLink> baseConverter, LinkFrequenciesCache<TLink> doubletFrequenciesCache, TLink minFrequencyToCompress, bool doInitialFrequenciesIncrement) Parameters Type Name Description ILinks <TLink> links IConverter < IList <TLink>, TLink> baseConverter LinkFrequenciesCache <TLink> doubletFrequenciesCache TLink minFrequencyToCompress System.Boolean doInitialFrequenciesIncrement CompressingConverter(ILinks<TLink>, IConverter<IList<TLink>, TLink>, LinkFrequenciesCache<TLink>, Boolean) Declaration public CompressingConverter(ILinks<TLink> links, IConverter<IList<TLink>, TLink> baseConverter, LinkFrequenciesCache<TLink> doubletFrequenciesCache, bool doInitialFrequenciesIncrement) Parameters Type Name Description ILinks <TLink> links IConverter < IList <TLink>, TLink> baseConverter LinkFrequenciesCache <TLink> doubletFrequenciesCache System.Boolean doInitialFrequenciesIncrement Methods Convert(IList<TLink>) Declaration public override TLink Convert(IList<TLink> source) Parameters Type Name Description IList <TLink> source Returns Type Description TLink Overrides Platform.Data.Core.Sequences.LinksListToSequenceConverterBase<TLink>.Convert(IList<TLink>)"
  },
  "api/Platform.Data.Core.Exceptions.LinkWithSameValueAlreadyExistsException.html": {
    "href": "api/Platform.Data.Core.Exceptions.LinkWithSameValueAlreadyExistsException.html",
    "title": "Class LinkWithSameValueAlreadyExistsException | LinksPlatform",
    "keywords": "Class LinkWithSameValueAlreadyExistsException Inheritance System.Object LinkWithSameValueAlreadyExistsException Namespace : Platform.Data.Core.Exceptions Assembly : cs.temp.dll.dll Syntax public class LinkWithSameValueAlreadyExistsException : Exception Constructors LinkWithSameValueAlreadyExistsException(String) Declaration public LinkWithSameValueAlreadyExistsException(string message = \"Связь с таким же значением уже существует.\") Parameters Type Name Description System.String message"
  },
  "api/Platform.Data.Core.Exceptions.ArgumentLinkHasDependenciesException-1.html": {
    "href": "api/Platform.Data.Core.Exceptions.ArgumentLinkHasDependenciesException-1.html",
    "title": "Class ArgumentLinkHasDependenciesException<TLink> | LinksPlatform",
    "keywords": "Class ArgumentLinkHasDependenciesException<TLink> Inheritance System.Object ArgumentLinkHasDependenciesException<TLink> Namespace : Platform.Data.Core.Exceptions Assembly : cs.temp.dll.dll Syntax public class ArgumentLinkHasDependenciesException<TLink> : ArgumentException Type Parameters Name Description TLink Constructors ArgumentLinkHasDependenciesException(TLink) Declaration public ArgumentLinkHasDependenciesException(TLink link) Parameters Type Name Description TLink link ArgumentLinkHasDependenciesException(TLink, String) Declaration public ArgumentLinkHasDependenciesException(TLink link, string paramName) Parameters Type Name Description TLink link System.String paramName"
  },
  "api/Platform.Data.Core.Doublets.LinksNonExistentReferencesCreator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksNonExistentReferencesCreator-1.html",
    "title": "Class LinksNonExistentReferencesCreator<T> | LinksPlatform",
    "keywords": "Class LinksNonExistentReferencesCreator<T> Inheritance System.Object LinksDecoratorBase <T> LinksNonExistentReferencesCreator<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Delete(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksNonExistentReferencesCreator<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Remarks Not practical if newSource and newTarget are too big. To be able to use practical version we should allow to create link at any specific location inside ResizableDirectMemoryLinks. This in turn will require to implement not a list of empty links, but a list of ranges to store it more efficiently. Constructors LinksNonExistentReferencesCreator(ILinks<T>) Declaration public LinksNonExistentReferencesCreator(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksInnerReferenceValidator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksInnerReferenceValidator-1.html",
    "title": "Class LinksInnerReferenceValidator<T> | LinksPlatform",
    "keywords": "Class LinksInnerReferenceValidator<T> Inheritance System.Object LinksDecoratorBase <T> LinksInnerReferenceValidator<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Create() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksInnerReferenceValidator<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksInnerReferenceValidator(ILinks<T>) Declaration public LinksInnerReferenceValidator(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Count(IList<T>) Declaration public override T Count(IList<T> restriction) Parameters Type Name Description IList <T> restriction Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Count(IList<T>) Delete(T) Declaration public override void Delete(T link) Parameters Type Name Description T link Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Delete(T) Each(Func<IList<T>, T>, IList<T>) Declaration public override T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description Func < IList <T>, T> handler IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksExtensions.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksExtensions.html",
    "title": "Class LinksExtensions | LinksPlatform",
    "keywords": "Class LinksExtensions Inheritance System.Object LinksExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public static class LinksExtensions Fields Constants Declaration public static readonly LinksConstants<bool, ulong, int> Constants Field Value Type Description LinksConstants < System.Boolean , System.UInt64 , System.Int32 > Methods All<TLink>(ILinks<TLink>, TLink[]) Declaration public static IList<IList<TLink>> All<TLink>(this ILinks<TLink> links, params TLink[] restrictions) Parameters Type Name Description ILinks <TLink> links TLink[] restrictions Returns Type Description IList < IList <TLink>> Type Parameters Name Description TLink AnyLinkIsAny(ILinks<UInt64>, UInt64[]) Declaration public static bool AnyLinkIsAny(this ILinks<ulong> links, params ulong[] sequence) Parameters Type Name Description ILinks < System.UInt64 > links System.UInt64 [] sequence Returns Type Description System.Boolean AppendStructure(ILinks<UInt64>, StringBuilder, HashSet<UInt64>, UInt64, Func<UInt64Link, Boolean>, Action<StringBuilder, UInt64Link>, Boolean, Boolean) Declaration public static void AppendStructure(this ILinks<ulong> links, StringBuilder sb, HashSet<ulong> visited, ulong linkIndex, Func<UInt64Link, bool> isElement, Action<StringBuilder, UInt64Link> appendElement, bool renderIndex = false, bool renderDebug = false) Parameters Type Name Description ILinks < System.UInt64 > links StringBuilder sb HashSet < System.UInt64 > visited System.UInt64 linkIndex Func < UInt64Link , System.Boolean > isElement Action < StringBuilder , UInt64Link > appendElement System.Boolean renderIndex System.Boolean renderDebug CheckPathExistance<T>(ILinks<T>, T[]) Declaration public static bool CheckPathExistance<T>(this ILinks<T> links, params T[] path) Parameters Type Name Description ILinks <T> links T[] path Returns Type Description System.Boolean Type Parameters Name Description T Remarks TODO: Как так? Как то что ниже может быть корректно? Скорее всего практически не применимо Предполагалось, что можно было конвертировать формируемый в проходе через SequenceWalker Stack в конкретный путь из Source, Target до связи, но это не всегда так. TODO: Возможно нужен метод, который именно выбрасывает исключения (EnsurePathExists) Count<TLink>(ILinks<TLink>, TLink[]) Declaration public static TLink Count<TLink>(this ILinks<TLink> links, params TLink[] restrictions) Parameters Type Name Description ILinks <TLink> links TLink[] restrictions Returns Type Description TLink Type Parameters Name Description TLink CreateAndUpdate<T>(ILinks<T>, T, T) Declaration public static T CreateAndUpdate<T>(this ILinks<T> links, T source, T target) Parameters Type Name Description ILinks <T> links Хранилище связей. T source T target Returns Type Description T Type Parameters Name Description T CreatePoint<T>(ILinks<T>) Declaration public static T CreatePoint<T>(this ILinks<T> links) Parameters Type Name Description ILinks <T> links Хранилище связей. Returns Type Description T Type Parameters Name Description T DeleteAll<TLink>(ILinks<TLink>) Declaration public static void DeleteAll<TLink>(this ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Type Parameters Name Description TLink Remarks TODO: Возможно есть очень простой способ это сделать. (Например просто удалить файл, или изменить его размер таким образом, чтобы удалился весь контент) Например через _header->AllocatedLinks в ResizableDirectMemoryLinks DeleteIfExists<T>(ILinks<T>, T, T) Удаляет связь с указанными началом (Source) и концом (Target). Declaration public static T DeleteIfExists<T>(this ILinks<T> links, T source, T target) Parameters Type Name Description ILinks <T> links Хранилище связей. T source Индекс связи, которая является началом удаляемой связи. T target Индекс связи, которая является концом удаляемой связи. Returns Type Description T Type Parameters Name Description T DeleteMany<T>(ILinks<T>, IList<T>) Удаляет несколько связей. Declaration public static void DeleteMany<T>(this ILinks<T> links, IList<T> deletedLinks) Parameters Type Name Description ILinks <T> links Хранилище связей. IList <T> deletedLinks Список адресов связей к удалению. Type Parameters Name Description T DependenciesCount<T>(ILinks<T>, T) Declaration public static ulong DependenciesCount<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links Хранилище связей. T link Returns Type Description System.UInt64 Type Parameters Name Description T DependenciesExist<T>(ILinks<T>, T) Declaration public static bool DependenciesExist<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links Хранилище связей. T link Returns Type Description System.Boolean Type Parameters Name Description T Each<TLink>(ILinks<TLink>, TLink, TLink, Func<TLink, Boolean>) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static bool Each<TLink>(this ILinks<TLink> links, TLink source, TLink target, Func<TLink, bool> handler) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве начала, Constants.Any - любое начало, 1..∞ конкретное начало) TLink target Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве конца, Constants.Any - любой конец, 1..∞ конкретный конец) Func <TLink, System.Boolean > handler Обработчик каждой подходящей связи. Returns Type Description System.Boolean True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLink Each<TLink>(ILinks<TLink>, TLink, TLink, Func<IList<TLink>, TLink>) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static bool Each<TLink>(this ILinks<TLink> links, TLink source, TLink target, Func<IList<TLink>, TLink> handler) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве начала, Constants.Any - любое начало, 1..∞ конкретное начало) TLink target Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве конца, Constants.Any - любой конец, 1..∞ конкретный конец) Func < IList <TLink>, TLink> handler Обработчик каждой подходящей связи. Returns Type Description System.Boolean True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLink Each<TLink>(ILinks<TLink>, Func<IList<TLink>, TLink>, TLink[]) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static bool Each<TLink>(this ILinks<TLink> links, Func<IList<TLink>, TLink> handler, params TLink[] restrictions) Parameters Type Name Description ILinks <TLink> links Хранилище связей. Func < IList <TLink>, TLink> handler Обработчик каждой подходящей связи. TLink[] restrictions Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Any - отсутствие ограничения, 1..∞ конкретный адрес связи. Returns Type Description System.Boolean True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLink EnsureCreated<T>(ILinks<T>, T[]) Declaration public static void EnsureCreated<T>(this ILinks<T> links, params T[] addresses) Parameters Type Name Description ILinks <T> links Хранилище связей. T[] addresses Type Parameters Name Description T EnsureCreated<T>(ILinks<T>, Func<T>, T[]) Declaration public static void EnsureCreated<T>(this ILinks<T> links, Func<T> creator, params T[] addresses) Parameters Type Name Description ILinks <T> links Хранилище связей. Func <T> creator T[] addresses Type Parameters Name Description T EnsureDoesNotExists<T>(ILinks<T>, T, T) Declaration public static void EnsureDoesNotExists<T>(this ILinks<T> links, T source, T target) Parameters Type Name Description ILinks <T> links Хранилище связей. T source T target Type Parameters Name Description T EnsureEachLinkExists(ILinks<UInt64>, IList<UInt64>) Declaration public static void EnsureEachLinkExists(this ILinks<ulong> links, IList<ulong> sequence) Parameters Type Name Description ILinks < System.UInt64 > links IList < System.UInt64 > sequence EnsureEachLinkIsAnyOrExists(ILinks<UInt64>, IList<UInt64>) Declaration public static void EnsureEachLinkIsAnyOrExists(this ILinks<ulong> links, IList<ulong> sequence) Parameters Type Name Description ILinks < System.UInt64 > links IList < System.UInt64 > sequence EnsureInnerReferenceExists<T>(ILinks<T>, T, String) Declaration public static void EnsureInnerReferenceExists<T>(this ILinks<T> links, T reference, string argumentName) Parameters Type Name Description ILinks <T> links T reference System.String argumentName Type Parameters Name Description T EnsureInnerReferenceExists<T>(ILinks<T>, IList<T>, String) Declaration public static void EnsureInnerReferenceExists<T>(this ILinks<T> links, IList<T> restrictions, string argumentName) Parameters Type Name Description ILinks <T> links IList <T> restrictions System.String argumentName Type Parameters Name Description T EnsureLinkExists<T>(ILinks<T>, T) Declaration public static void EnsureLinkExists<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links Хранилище связей. T link Type Parameters Name Description T EnsureLinkExists<T>(ILinks<T>, T, String) Declaration public static void EnsureLinkExists<T>(this ILinks<T> links, T link, string argumentName) Parameters Type Name Description ILinks <T> links Хранилище связей. T link System.String argumentName Type Parameters Name Description T EnsureLinkIsAnyOrExists<T>(ILinks<T>, T, String) Declaration public static void EnsureLinkIsAnyOrExists<T>(this ILinks<T> links, T link, string argumentName) Parameters Type Name Description ILinks <T> links T link System.String argumentName Type Parameters Name Description T EnsureLinkIsAnyOrExists<T>(ILinks<T>, IList<T>) Declaration public static void EnsureLinkIsAnyOrExists<T>(this ILinks<T> links, IList<T> restrictions) Parameters Type Name Description ILinks <T> links IList <T> restrictions Type Parameters Name Description T EnsureLinkIsItselfOrExists<T>(ILinks<T>, T, String) Declaration public static void EnsureLinkIsItselfOrExists<T>(this ILinks<T> links, T link, string argumentName) Parameters Type Name Description ILinks <T> links T link System.String argumentName Type Parameters Name Description T EnsureNoDependencies<T>(ILinks<T>, T) Declaration public static void EnsureNoDependencies<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links Хранилище связей. T link Type Parameters Name Description T EnsurePointsCreated<T>(ILinks<T>, T[]) Declaration public static void EnsurePointsCreated<T>(this ILinks<T> links, params T[] addresses) Parameters Type Name Description ILinks <T> links Хранилище связей. T[] addresses Type Parameters Name Description T Equals<T>(ILinks<T>, T, T, T) Declaration public static bool Equals<T>(this ILinks<T> links, T link, T source, T target) Parameters Type Name Description ILinks <T> links Хранилище связей. T link T source T target Returns Type Description System.Boolean Type Parameters Name Description T Exists<T>(ILinks<T>, T) Возвращает значение, определяющее существует ли связь с указанным индексом в хранилище связей. Declaration public static bool Exists<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links Хранилище связей. T link Индекс проверяемой на существование связи. Returns Type Description System.Boolean Значение, определяющее существует ли связь. Type Parameters Name Description T Exists<T>(ILinks<T>, T, T) Возвращает значение, определяющее существует ли связь с указанными началом и концом в хранилище связей. Declaration public static bool Exists<T>(this ILinks<T> links, T source, T target) Parameters Type Name Description ILinks <T> links Хранилище связей. T source Начало связи. T target Конец связи. Returns Type Description System.Boolean Значение, определяющее существует ли связь. Type Parameters Name Description T First<TLink>(ILinks<TLink>) Declaration public static TLink First<TLink>(this ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Returns Type Description TLink Type Parameters Name Description TLink FormatStructure(ILinks<UInt64>, UInt64, Func<UInt64Link, Boolean>, Action<StringBuilder, UInt64Link>, Boolean, Boolean) Declaration public static string FormatStructure(this ILinks<ulong> links, ulong linkIndex, Func<UInt64Link, bool> isElement, Action<StringBuilder, UInt64Link> appendElement, bool renderIndex = false, bool renderDebug = false) Parameters Type Name Description ILinks < System.UInt64 > links System.UInt64 linkIndex Func < UInt64Link , System.Boolean > isElement Action < StringBuilder , UInt64Link > appendElement System.Boolean renderIndex System.Boolean renderDebug Returns Type Description System.String FormatStructure(ILinks<UInt64>, UInt64, Func<UInt64Link, Boolean>, Boolean, Boolean) Declaration public static string FormatStructure(this ILinks<ulong> links, ulong linkIndex, Func<UInt64Link, bool> isElement, bool renderIndex = false, bool renderDebug = false) Parameters Type Name Description ILinks < System.UInt64 > links System.UInt64 linkIndex Func < UInt64Link , System.Boolean > isElement System.Boolean renderIndex System.Boolean renderDebug Returns Type Description System.String GetByKeys<T>(ILinks<T>, T, Int32[]) Declaration public static T GetByKeys<T>(this ILinks<T> links, T root, params int[] path) Parameters Type Name Description ILinks <T> links T root System.Int32 [] path Returns Type Description T Type Parameters Name Description T Remarks Может потребовать дополнительного стека для PathElement's при использовании SequenceWalker. GetIndex<T>(ILinks<T>, IList<T>) Возвращает индекс указанной связи. Declaration public static T GetIndex<T>(this ILinks<T> links, IList<T> link) Parameters Type Name Description ILinks <T> links Хранилище связей. IList <T> link Связь представленная списком, состоящим из её адреса и содержимого. Returns Type Description T Индекс начальной связи для указанной связи. Type Parameters Name Description T GetLink<TLink>(ILinks<TLink>, TLink) Возвращает части-значения для связи с указанным индексом. Declaration public static IList<TLink> GetLink<TLink>(this ILinks<TLink> links, TLink link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Индекс связи. Returns Type Description IList <TLink> Уникальную связь. Type Parameters Name Description TLink GetOrCreate<T>(ILinks<T>, T, T) Создаёт связь (если она не существовала), либо возвращает индекс существующей связи с указанными Source (началом) и Target (концом). Declaration public static T GetOrCreate<T>(this ILinks<T> links, T source, T target) Parameters Type Name Description ILinks <T> links Хранилище связей. T source Индекс связи, которая является началом на создаваемой связи. T target Индекс связи, которая является концом для создаваемой связи. Returns Type Description T Индекс связи, с указанным Source (началом) и Target (концом) Type Parameters Name Description T GetSource<T>(ILinks<T>, T) Возвращает индекс начальной (Source) связи для указанной связи. Declaration public static T GetSource<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links Хранилище связей. T link Индекс связи. Returns Type Description T Индекс начальной связи для указанной связи. Type Parameters Name Description T GetSource<T>(ILinks<T>, IList<T>) Возвращает индекс начальной (Source) связи для указанной связи. Declaration public static T GetSource<T>(this ILinks<T> links, IList<T> link) Parameters Type Name Description ILinks <T> links Хранилище связей. IList <T> link Связь представленная списком, состоящим из её адреса и содержимого. Returns Type Description T Индекс начальной связи для указанной связи. Type Parameters Name Description T GetSquareMatrixSequenceElementByIndex<T>(ILinks<T>, T, UInt64, UInt64) Declaration public static T GetSquareMatrixSequenceElementByIndex<T>(this ILinks<T> links, T root, ulong size, ulong index) Parameters Type Name Description ILinks <T> links T root System.UInt64 size System.UInt64 index Returns Type Description T Type Parameters Name Description T GetTarget<T>(ILinks<T>, T) Возвращает индекс конечной (Target) связи для указанной связи. Declaration public static T GetTarget<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links Хранилище связей. T link Индекс связи. Returns Type Description T Индекс конечной связи для указанной связи. Type Parameters Name Description T GetTarget<T>(ILinks<T>, IList<T>) Возвращает индекс конечной (Target) связи для указанной связи. Declaration public static T GetTarget<T>(this ILinks<T> links, IList<T> link) Parameters Type Name Description ILinks <T> links Хранилище связей. IList <T> link Связь представленная списком, состоящим из её адреса и содержимого. Returns Type Description T Индекс конечной связи для указанной связи. Type Parameters Name Description T IsFullPoint<T>(ILinks<T>, T) Declaration public static bool IsFullPoint<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links T link Returns Type Description System.Boolean Type Parameters Name Description T IsInnerReference<T>(ILinks<T>, T) Declaration public static bool IsInnerReference<T>(this ILinks<T> links, T reference) Parameters Type Name Description ILinks <T> links T reference Returns Type Description System.Boolean Type Parameters Name Description T IsPartialPoint<T>(ILinks<T>, T) Возвращает значение, определяющее является ли связь с указанным индексом точкой частично (связью замкнутой на себе как минимум один раз). Declaration public static bool IsPartialPoint<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links Хранилище связей. T link Индекс проверяемой связи. Returns Type Description System.Boolean Значение, определяющее является ли связь точкой частично. Type Parameters Name Description T Remarks Достаточно любой одной ссылки на себя. Также в будущем можно будет проверять и всех родителей, чтобы проверить есть ли ссылки на себя (на эту связь). Merge<T>(ILinks<T>, T, T) Declaration public static T Merge<T>(this ILinks<T> links, T linkIndex, T newLink) Parameters Type Name Description ILinks <T> links T linkIndex T newLink Returns Type Description T Type Parameters Name Description T RunRandomCreations<T>(ILinks<T>, Int64) Declaration public static void RunRandomCreations<T>(this ILinks<T> links, long amountOfCreations) Parameters Type Name Description ILinks <T> links System.Int64 amountOfCreations Type Parameters Name Description T RunRandomDeletions<T>(ILinks<T>, Int64) Declaration public static void RunRandomDeletions<T>(this ILinks<T> links, long amountOfDeletions) Parameters Type Name Description ILinks <T> links System.Int64 amountOfDeletions Type Parameters Name Description T RunRandomSearches<T>(ILinks<T>, Int64) Declaration public static void RunRandomSearches<T>(this ILinks<T> links, long amountOfSearches) Parameters Type Name Description ILinks <T> links System.Int64 amountOfSearches Type Parameters Name Description T SearchOrDefault<T>(ILinks<T>, T, T) Выполняет поиск связи с указанными Source (началом) и Target (концом). Declaration public static T SearchOrDefault<T>(this ILinks<T> links, T source, T target) Parameters Type Name Description ILinks <T> links Хранилище связей. T source Индекс связи, которая является началом для искомой связи. T target Индекс связи, которая является концом для искомой связи. Returns Type Description T Индекс искомой связи с указанными Source (началом) и Target (концом). Type Parameters Name Description T Update<TLink>(ILinks<TLink>, TLink, TLink, TLink) Обновляет связь с указанными началом (Source) и концом (Target) на связь с указанными началом (NewSource) и концом (NewTarget). Declaration public static TLink Update<TLink>(this ILinks<TLink> links, TLink link, TLink newSource, TLink newTarget) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Индекс обновляемой связи. TLink newSource Индекс связи, которая является началом связи, на которую выполняется обновление. TLink newTarget Индекс связи, которая является концом связи, на которую выполняется обновление. Returns Type Description TLink Индекс обновлённой связи. Type Parameters Name Description TLink Update<TLink>(ILinks<TLink>, TLink[]) Обновляет связь с указанными началом (Source) и концом (Target) на связь с указанными началом (NewSource) и концом (NewTarget). Declaration public static TLink Update<TLink>(this ILinks<TLink> links, params TLink[] restrictions) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink[] restrictions Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Itself - требование установить ссылку на себя, 1..∞ конкретный адрес другой связи. Returns Type Description TLink Индекс обновлённой связи. Type Parameters Name Description TLink UpdateOrCreateOrGet<T>(ILinks<T>, T, T, T, T) Обновляет связь с указанными началом (Source) и концом (Target) на связь с указанными началом (NewSource) и концом (NewTarget). Declaration public static T UpdateOrCreateOrGet<T>(this ILinks<T> links, T source, T target, T newSource, T newTarget) Parameters Type Name Description ILinks <T> links Хранилище связей. T source Индекс связи, которая является началом обновляемой связи. T target Индекс связи, которая является концом обновляемой связи. T newSource Индекс связи, которая является началом связи, на которую выполняется обновление. T newTarget Индекс связи, которая является концом связи, на которую выполняется обновление. Returns Type Description T Индекс обновлённой связи. Type Parameters Name Description T UseUnicode(ILinks<UInt64>) Declaration public static void UseUnicode(this ILinks<ulong> links) Parameters Type Name Description ILinks < System.UInt64 > links"
  },
  "api/Platform.Data.Core.Doublets.LinksDisposableDecoratorBase-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksDisposableDecoratorBase-1.html",
    "title": "Class LinksDisposableDecoratorBase<T> | LinksPlatform",
    "keywords": "Class LinksDisposableDecoratorBase<T> Inheritance System.Object LinksDisposableDecoratorBase<T> UInt64Links UInt64LinksTransactionsLayer Implements ILinks <T> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public abstract class LinksDisposableDecoratorBase<T> : DisposableBase, ILinks<T> Type Parameters Name Description T Constructors LinksDisposableDecoratorBase(ILinks<T>) Declaration protected LinksDisposableDecoratorBase(ILinks<T> links) Parameters Type Name Description ILinks <T> links Fields Links Declaration public readonly ILinks<T> Links Field Value Type Description ILinks <T> Properties AllowMultipleDisposeCalls Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description System.Boolean Constants Declaration public ILinksCombinedConstants<T, T, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <T, T, System.Int32 > Methods Count(IList<T>) Declaration public virtual T Count(IList<T> restriction) Parameters Type Name Description IList <T> restriction Returns Type Description T Create() Declaration public virtual T Create() Returns Type Description T Delete(T) Declaration public virtual void Delete(T link) Parameters Type Name Description T link DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Each(Func<IList<T>, T>, IList<T>) Declaration public virtual T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description Func < IList <T>, T> handler IList <T> restrictions Returns Type Description T Update(IList<T>) Declaration public virtual T Update(IList<T> restrictions) Parameters Type Name Description IList <T> restrictions Returns Type Description T Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksConstants-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksConstants-1.html",
    "title": "Class LinksConstants<TDecision> | LinksPlatform",
    "keywords": "Class LinksConstants<TDecision> Inheritance System.Object LinksConstants<TDecision> LinksConstants<TDecision, TAddress> Implements ILinksDecisionConstants <TDecision> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksConstants<TDecision> : ILinksDecisionConstants<TDecision> Type Parameters Name Description TDecision Remarks Возможно каждая константа должна иметь своё уникальное значение (которое можно отсчитывать от конца доступных значений), например (ulong.MaxValue - 1) и т.п. TODO: Должна быть возможность переопределить константы, т.е. нужен интерфейс. ILinksConstants Properties Break Возвращает булевское значение, обозначающее остановку прохода по связям. Declaration public TDecision Break { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each. Continue Возвращает булевское значение, обозначающее продолжение прохода по связям. Declaration public TDecision Continue { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each. Implements ILinksDecisionConstants<TDecision>"
  },
  "api/Platform.Data.Core.Doublets.LinksCascadeUniquenessAndDependenciesResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksCascadeUniquenessAndDependenciesResolver-1.html",
    "title": "Class LinksCascadeUniquenessAndDependenciesResolver<T> | LinksPlatform",
    "keywords": "Class LinksCascadeUniquenessAndDependenciesResolver<T> Inheritance System.Object LinksDecoratorBase <T> LinksUniquenessResolver <T> LinksCascadeUniquenessAndDependenciesResolver<T> Implements ILinks <T> Inherited Members LinksUniquenessResolver<T>.Update(IList<T>) LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Delete(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksCascadeUniquenessAndDependenciesResolver<T> : LinksUniquenessResolver<T>, ILinks<T> Type Parameters Name Description T Constructors LinksCascadeUniquenessAndDependenciesResolver(ILinks<T>) Declaration public LinksCascadeUniquenessAndDependenciesResolver(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods ResolveAddressChangeConflict(T, T) Declaration protected override T ResolveAddressChangeConflict(T oldLinkAddress, T newLinkAddress) Parameters Type Name Description T oldLinkAddress T newLinkAddress Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksUniquenessResolver<T>.ResolveAddressChangeConflict(T, T) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinkFrequencyIncrementer-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinkFrequencyIncrementer-1.html",
    "title": "Class LinkFrequencyIncrementer<TLink> | LinksPlatform",
    "keywords": "Class LinkFrequencyIncrementer<TLink> Inheritance System.Object LinksOperatorBase <TLink> LinkFrequencyIncrementer<TLink> Implements IIncrementer < IList <TLink>> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinkFrequencyIncrementer<TLink> : LinksOperatorBase<TLink>, IIncrementer<IList<TLink>> Type Parameters Name Description TLink Constructors LinkFrequencyIncrementer(ILinks<TLink>, ISpecificPropertyOperator<TLink, TLink>, IIncrementer<TLink>) Declaration public LinkFrequencyIncrementer(ILinks<TLink> links, ISpecificPropertyOperator<TLink, TLink> frequencyPropertyOperator, IIncrementer<TLink> frequencyIncrementer) Parameters Type Name Description ILinks <TLink> links ISpecificPropertyOperator <TLink, TLink> frequencyPropertyOperator IIncrementer <TLink> frequencyIncrementer Methods Increment(TLink) Declaration public void Increment(TLink link) Parameters Type Name Description TLink link Increment(IList<TLink>) Declaration public IList<TLink> Increment(IList<TLink> sequence) Parameters Type Name Description IList <TLink> sequence Returns Type Description IList <TLink> Remarks Sequence itseft is not changed, only frequency of its doublets is incremented. Implements IIncrementer<>"
  },
  "api/Platform.Data.Core.Doublets.LinkExtensions.html": {
    "href": "api/Platform.Data.Core.Doublets.LinkExtensions.html",
    "title": "Class LinkExtensions | LinksPlatform",
    "keywords": "Class LinkExtensions Inheritance System.Object LinkExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public static class LinkExtensions Methods IsFullPoint(UInt64Link) Declaration public static bool IsFullPoint(this UInt64Link link) Parameters Type Name Description UInt64Link link Returns Type Description System.Boolean IsPartialPoint(UInt64Link) Declaration public static bool IsPartialPoint(this UInt64Link link) Parameters Type Name Description UInt64Link link Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Doublets.ILinksDecisionConstants-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksDecisionConstants-1.html",
    "title": "Interface ILinksDecisionConstants<TDecision> | LinksPlatform",
    "keywords": "Interface ILinksDecisionConstants<TDecision> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksDecisionConstants<TDecision> Type Parameters Name Description TDecision Properties Break Возвращает булевское значение, обозначающее остановку прохода по связям. Declaration TDecision Break { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each. Continue Возвращает булевское значение, обозначающее продолжение прохода по связям. Declaration TDecision Continue { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each."
  },
  "api/Platform.Data.Core.Doublets.ILinksCombinedConstants-3.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksCombinedConstants-3.html",
    "title": "Interface ILinksCombinedConstants<TDecision, TAddress, TPartIndex> | LinksPlatform",
    "keywords": "Interface ILinksCombinedConstants<TDecision, TAddress, TPartIndex> Inherited Members ILinksDecisionConstants<TDecision>.Continue ILinksDecisionConstants<TDecision>.Break ILinksAddressConstants<TAddress>.Null ILinksAddressConstants<TAddress>.Any ILinksAddressConstants<TAddress>.Itself ILinksAddressConstants<TAddress>.MinPossibleIndex ILinksAddressConstants<TAddress>.MaxPossibleIndex ILinksPartConstants<TPartIndex>.IndexPart ILinksPartConstants<TPartIndex>.SourcePart ILinksPartConstants<TPartIndex>.TargetPart Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksCombinedConstants<TDecision, TAddress, TPartIndex> : ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress>, ILinksPartConstants<TPartIndex> Type Parameters Name Description TDecision TAddress TPartIndex"
  },
  "api/Platform.Examples.ICommandLineInterface.html": {
    "href": "api/Platform.Examples.ICommandLineInterface.html",
    "title": "Interface ICommandLineInterface | LinksPlatform",
    "keywords": "Interface ICommandLineInterface Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public interface ICommandLineInterface Methods Run(String[]) Declaration void Run(params string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Examples.GEXFExporter-1.html": {
    "href": "api/Platform.Examples.GEXFExporter-1.html",
    "title": "Class GEXFExporter<TLink> | LinksPlatform",
    "keywords": "Class GEXFExporter<TLink> Inheritance System.Object GEXFExporter<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class GEXFExporter<TLink> Type Parameters Name Description TLink Constructors GEXFExporter(ILinks<TLink>) Declaration public GEXFExporter(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods Export(String) Declaration public void Export(string outputFilename) Parameters Type Name Description System.String outputFilename"
  },
  "api/Platform.Examples.GEXFCSVExporterCLI.html": {
    "href": "api/Platform.Examples.GEXFCSVExporterCLI.html",
    "title": "Class GEXFCSVExporterCLI | LinksPlatform",
    "keywords": "Class GEXFCSVExporterCLI Inheritance System.Object GEXFCSVExporterCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class GEXFCSVExporterCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Data.Core.Triplets.GexfExporter.html": {
    "href": "api/Platform.Data.Core.Triplets.GexfExporter.html",
    "title": "Class GexfExporter | LinksPlatform",
    "keywords": "Class GexfExporter Inheritance System.Object GexfExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class GexfExporter Methods ToFile(String) Declaration public static void ToFile(string path) Parameters Type Name Description System.String path ToFile(String, Func<Link, Boolean>) Declaration public static void ToFile(string path, Func<Link, bool> filter) Parameters Type Name Description System.String path Func < Link , System.Boolean > filter ToXml() Declaration public static string ToXml() Returns Type Description System.String"
  },
  "api/Platform.Data.WebTerminal.html": {
    "href": "api/Platform.Data.WebTerminal.html",
    "title": "Namespace Platform.Data.WebTerminal | LinksPlatform",
    "keywords": "Namespace Platform.Data.WebTerminal Classes Program Startup"
  },
  "api/Platform.Data.WebTerminal.Startup.html": {
    "href": "api/Platform.Data.WebTerminal.Startup.html",
    "title": "Class Startup | LinksPlatform",
    "keywords": "Class Startup Inheritance System.Object Startup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.WebTerminal Assembly : cs.temp.dll.dll Syntax public class Startup Constructors Startup(IConfiguration) Declaration public Startup(IConfiguration configuration) Parameters Type Name Description IConfiguration configuration Properties Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration Methods Configure(IApplicationBuilder, IHostingEnvironment) Declaration public void Configure(IApplicationBuilder app, IHostingEnvironment env) Parameters Type Name Description IApplicationBuilder app IHostingEnvironment env ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description IServiceCollection services"
  },
  "api/Platform.Data.WebTerminal.Program.html": {
    "href": "api/Platform.Data.WebTerminal.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.WebTerminal Assembly : cs.temp.dll.dll Syntax public class Program Methods CreateWebHostBuilder(String[]) Declaration public static IWebHostBuilder CreateWebHostBuilder(string[] args) Parameters Type Name Description System.String [] args Returns Type Description IWebHostBuilder Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Data.WebTerminal.Models.html": {
    "href": "api/Platform.Data.WebTerminal.Models.html",
    "title": "Namespace Platform.Data.WebTerminal.Models | LinksPlatform",
    "keywords": "Namespace Platform.Data.WebTerminal.Models Classes ErrorViewModel LinkModel"
  },
  "api/Platform.Data.WebTerminal.Models.LinkModel.html": {
    "href": "api/Platform.Data.WebTerminal.Models.LinkModel.html",
    "title": "Class LinkModel | LinksPlatform",
    "keywords": "Class LinkModel Inheritance System.Object LinkModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.WebTerminal.Models Assembly : cs.temp.dll.dll Syntax public class LinkModel Constructors LinkModel(Link) Declaration public LinkModel(Link link) Parameters Type Name Description Link link LinkModel(Link, List<LinkModel>) Declaration public LinkModel(Link link, List<LinkModel> referersModels) Parameters Type Name Description Link link List < LinkModel > referersModels Properties Link Declaration public Link Link { get; set; } Property Value Type Description Link ReferersModels Declaration public List<LinkModel> ReferersModels { get; set; } Property Value Type Description List < LinkModel > Methods CreateLinkModel(Link, Int32) Declaration public static LinkModel CreateLinkModel(Link link, int nestingLevel = 5) Parameters Type Name Description Link link System.Int32 nestingLevel Returns Type Description LinkModel"
  },
  "api/Platform.Data.WebTerminal.Models.ErrorViewModel.html": {
    "href": "api/Platform.Data.WebTerminal.Models.ErrorViewModel.html",
    "title": "Class ErrorViewModel | LinksPlatform",
    "keywords": "Class ErrorViewModel Inheritance System.Object ErrorViewModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.WebTerminal.Models Assembly : cs.temp.dll.dll Syntax public class ErrorViewModel Properties RequestId Declaration public string RequestId { get; set; } Property Value Type Description System.String ShowRequestId Declaration public bool ShowRequestId { get; } Property Value Type Description System.Boolean"
  },
  "api/Platform.Data.WebTerminal.Controllers.html": {
    "href": "api/Platform.Data.WebTerminal.Controllers.html",
    "title": "Namespace Platform.Data.WebTerminal.Controllers | LinksPlatform",
    "keywords": "Namespace Platform.Data.WebTerminal.Controllers Classes HomeController LinksController"
  },
  "api/Platform.Data.WebTerminal.Controllers.LinksController.html": {
    "href": "api/Platform.Data.WebTerminal.Controllers.LinksController.html",
    "title": "Class LinksController | LinksPlatform",
    "keywords": "Class LinksController Inheritance System.Object LinksController Namespace : Platform.Data.WebTerminal.Controllers Assembly : cs.temp.dll.dll Syntax public class LinksController : Controller Methods Index(Int64) Declaration public IActionResult Index(long id = 0L) Parameters Type Name Description System.Int64 id Returns Type Description IActionResult Infinite(Int64) Declaration public IActionResult Infinite(long id = 0L) Parameters Type Name Description System.Int64 id Returns Type Description IActionResult"
  },
  "api/Platform.Data.Core.Triplets.NetMapping.html": {
    "href": "api/Platform.Data.Core.Triplets.NetMapping.html",
    "title": "Enum NetMapping | LinksPlatform",
    "keywords": "Enum NetMapping Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public enum NetMapping : long Fields Name Description Alphabet And Case Character Code ContainedBy Contains Content Empty EmptyContent Group Has IsA IsNotA Letter Link Lower LowerCase Name Of One ParsedFrom Path Set String Sum Text ThatConsistsOf ThatHas ThatIs ThatIsAfter ThatIsBefore ThatIsBetween ThatIsRepresentedBy Thing Upper UpperCase Zero"
  },
  "api/Platform.Data.Core.Triplets.Net.html": {
    "href": "api/Platform.Data.Core.Triplets.Net.html",
    "title": "Class Net | LinksPlatform",
    "keywords": "Class Net Inheritance System.Object Net Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public class Net Fields Alphabet Declaration public static Link Alphabet Field Value Type Description Link And Declaration public static Link And Field Value Type Description Link Case Declaration public static Link Case Field Value Type Description Link Character Declaration public static Link Character Field Value Type Description Link Code Declaration public static Link Code Field Value Type Description Link ContainedBy Declaration public static Link ContainedBy Field Value Type Description Link Contains Declaration public static Link Contains Field Value Type Description Link Content Declaration public static Link Content Field Value Type Description Link Empty Declaration public static Link Empty Field Value Type Description Link EmptyContent Declaration public static Link EmptyContent Field Value Type Description Link Group Declaration public static Link Group Field Value Type Description Link Has Declaration public static Link Has Field Value Type Description Link IsA Declaration public static Link IsA Field Value Type Description Link IsNotA Declaration public static Link IsNotA Field Value Type Description Link Letter Declaration public static Link Letter Field Value Type Description Link Link Declaration public static Link Link Field Value Type Description Link Lower Declaration public static Link Lower Field Value Type Description Link LowerCase Declaration public static Link LowerCase Field Value Type Description Link Name Declaration public static Link Name Field Value Type Description Link Of Declaration public static Link Of Field Value Type Description Link One Declaration public static Link One Field Value Type Description Link ParsedFrom Declaration public static Link ParsedFrom Field Value Type Description Link Path Declaration public static Link Path Field Value Type Description Link Set Declaration public static Link Set Field Value Type Description Link String Declaration public static Link String Field Value Type Description Link Sum Declaration public static Link Sum Field Value Type Description Link Text Declaration public static Link Text Field Value Type Description Link ThatConsistsOf Declaration public static Link ThatConsistsOf Field Value Type Description Link ThatHas Declaration public static Link ThatHas Field Value Type Description Link ThatIs Declaration public static Link ThatIs Field Value Type Description Link ThatIsAfter Declaration public static Link ThatIsAfter Field Value Type Description Link ThatIsBefore Declaration public static Link ThatIsBefore Field Value Type Description Link ThatIsBetween Declaration public static Link ThatIsBetween Field Value Type Description Link ThatIsRepresentedBy Declaration public static Link ThatIsRepresentedBy Field Value Type Description Link Thing Declaration public static Link Thing Field Value Type Description Link Upper Declaration public static Link Upper Field Value Type Description Link UpperCase Declaration public static Link UpperCase Field Value Type Description Link Zero Declaration public static Link Zero Field Value Type Description Link Methods CreateLink() Declaration public static Link CreateLink() Returns Type Description Link CreateMappedLink(Object) Declaration public static Link CreateMappedLink(object mapping) Parameters Type Name Description System.Object mapping Returns Type Description Link CreateMappedThing(Object) Declaration public static Link CreateMappedThing(object mapping) Parameters Type Name Description System.Object mapping Returns Type Description Link CreateSet() Declaration public static Link CreateSet() Returns Type Description Link CreateThing() Declaration public static Link CreateThing() Returns Type Description Link Recreate() Declaration public static void Recreate()"
  },
  "api/Platform.Data.Core.Triplets.LinkExtensions.html": {
    "href": "api/Platform.Data.Core.Triplets.LinkExtensions.html",
    "title": "Class LinkExtensions | LinksPlatform",
    "keywords": "Class LinkExtensions Inheritance System.Object LinkExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class LinkExtensions Methods GetArrayOfRererersByLinker(Link) Declaration public static Link[] GetArrayOfRererersByLinker(this Link link) Parameters Type Name Description Link link Returns Type Description Link [] GetArrayOfRererersBySource(Link) Declaration public static Link[] GetArrayOfRererersBySource(this Link link) Parameters Type Name Description Link link Returns Type Description Link [] GetArrayOfRererersByTarget(Link) Declaration public static Link[] GetArrayOfRererersByTarget(this Link link) Parameters Type Name Description Link link Returns Type Description Link [] Is(Link, Link) Declaration public static bool Is(this Link link, Link class) Parameters Type Name Description Link link Link class Returns Type Description System.Boolean IsChar(Link) Declaration public static bool IsChar(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean IsGroup(Link) Declaration public static bool IsGroup(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean IsName(Link) Declaration public static bool IsName(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean IsString(Link) Declaration public static bool IsString(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean IsSum(Link) Declaration public static bool IsSum(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean SetName(Link, String) Declaration public static Link SetName(this Link link, string name) Parameters Type Name Description Link link System.String name Returns Type Description Link TryGetName(Link, out String) Declaration public static bool TryGetName(this Link link, out string str) Parameters Type Name Description Link link System.String str Returns Type Description System.Boolean TryGetSpecificName(Link, out String) Declaration public static bool TryGetSpecificName(this Link link, out string name) Parameters Type Name Description Link link System.String name Returns Type Description System.Boolean WalkThroughSequence(Link, Action<Link>) Declaration public static void WalkThroughSequence(this Link link, Action<Link> action) Parameters Type Name Description Link link Action < Link > action"
  },
  "api/Platform.Data.Core.Triplets.LinkDefinition.html": {
    "href": "api/Platform.Data.Core.Triplets.LinkDefinition.html",
    "title": "Struct LinkDefinition | LinksPlatform",
    "keywords": "Struct LinkDefinition Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public struct LinkDefinition Constructors LinkDefinition(Link) Declaration public LinkDefinition(Link link) Parameters Type Name Description Link link LinkDefinition(Link, Link, Link) Declaration public LinkDefinition(Link source, Link linker, Link target) Parameters Type Name Description Link source Link linker Link target Fields Linker Declaration public Link Linker Field Value Type Description Link Source Declaration public Link Source Field Value Type Description Link Target Declaration public Link Target Field Value Type Description Link"
  },
  "api/Platform.Data.Core.Triplets.LinkConverter.html": {
    "href": "api/Platform.Data.Core.Triplets.LinkConverter.html",
    "title": "Class LinkConverter | LinksPlatform",
    "keywords": "Class LinkConverter Inheritance System.Object LinkConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class LinkConverter Methods FromChar(Char) Declaration public static Link FromChar(char c) Parameters Type Name Description System.Char c Returns Type Description Link FromChars(Char[]) Declaration public static Link FromChars(char[] chars) Parameters Type Name Description System.Char [] chars Returns Type Description Link FromChars(Char[], Int32, Int32) Declaration public static Link FromChars(char[] chars, int takeFrom, int takeUntil) Parameters Type Name Description System.Char [] chars System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromChars(String) Declaration public static Link FromChars(string str) Parameters Type Name Description System.String str Returns Type Description Link FromList(List<Link>) Declaration public static Link FromList(List<Link> links) Parameters Type Name Description List < Link > links Returns Type Description Link FromList(Link[]) Declaration public static Link FromList(Link[] links) Parameters Type Name Description Link [] links Returns Type Description Link FromNumber(Int64) Declaration public static Link FromNumber(long number) Parameters Type Name Description System.Int64 number Returns Type Description Link FromNumbers(Boolean[]) Declaration public static Link FromNumbers(bool[] numbers) Parameters Type Name Description System.Boolean [] numbers Returns Type Description Link FromNumbers(Boolean[], Int32, Int32) Declaration public static Link FromNumbers(bool[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.Boolean [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromNumbers(Byte[]) Declaration public static Link FromNumbers(byte[] numbers) Parameters Type Name Description System.Byte [] numbers Returns Type Description Link FromNumbers(Byte[], Int32, Int32) Declaration public static Link FromNumbers(byte[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.Byte [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromNumbers(Int64[]) Declaration public static Link FromNumbers(long[] numbers) Parameters Type Name Description System.Int64 [] numbers Returns Type Description Link FromNumbers(Int64[], Int32, Int32) Declaration public static Link FromNumbers(long[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.Int64 [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromNumbers(UInt16[]) Declaration public static Link FromNumbers(ushort[] numbers) Parameters Type Name Description System.UInt16 [] numbers Returns Type Description Link FromNumbers(UInt16[], Int32, Int32) Declaration public static Link FromNumbers(ushort[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.UInt16 [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromNumbers(UInt32[]) Declaration public static Link FromNumbers(uint[] numbers) Parameters Type Name Description System.UInt32 [] numbers Returns Type Description Link FromNumbers(UInt32[], Int32, Int32) Declaration public static Link FromNumbers(uint[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.UInt32 [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromObjectsToSequence<T>(T[], Func<T, Link>) Declaration public static Link FromObjectsToSequence<T>(T[] objects, Func<T, Link> converter) Parameters Type Name Description T[] objects Func <T, Link > converter Returns Type Description Link Type Parameters Name Description T FromObjectsToSequence<T>(T[], Int32, Int32, Func<T, Link>) Declaration public static Link FromObjectsToSequence<T>(T[] objects, int takeFrom, int takeUntil, Func<T, Link> converter) Parameters Type Name Description T[] objects System.Int32 takeFrom System.Int32 takeUntil Func <T, Link > converter Returns Type Description Link Type Parameters Name Description T FromString(String) Declaration public static Link FromString(string str) Parameters Type Name Description System.String str Returns Type Description Link ToChar(Link) Declaration public static char ToChar(Link charLink) Parameters Type Name Description Link charLink Returns Type Description System.Char ToList(Link) Declaration public static List<Link> ToList(Link link) Parameters Type Name Description Link link Returns Type Description List < Link > ToNumber(Link) Declaration public static long ToNumber(Link number) Parameters Type Name Description Link number Returns Type Description System.Int64 ToString(List<Link>) Declaration public static string ToString(List<Link> charLinks) Parameters Type Name Description List < Link > charLinks Returns Type Description System.String ToString(Link) Declaration public static string ToString(Link link) Parameters Type Name Description Link link Returns Type Description System.String"
  },
  "api/Platform.Data.Core.Triplets.Link.html": {
    "href": "api/Platform.Data.Core.Triplets.Link.html",
    "title": "Struct Link | LinksPlatform",
    "keywords": "Struct Link Implements IEquatable < Link > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public struct Link : ILink<Link>, IEquatable<Link> Constructors Link(LinkIndex) Declaration public Link(LinkIndex link) Parameters Type Name Description LinkIndex link Fields Continue Declaration public static readonly bool Continue Field Value Type Description System.Boolean Itself Declaration public static readonly Link Itself Field Value Type Description Link Stop Declaration public static readonly bool Stop Field Value Type Description System.Boolean Properties FirstRefererByLinker Declaration public Link FirstRefererByLinker { get; } Property Value Type Description Link FirstRefererBySource Declaration public Link FirstRefererBySource { get; } Property Value Type Description Link FirstRefererByTarget Declaration public Link FirstRefererByTarget { get; } Property Value Type Description Link Linker Declaration public Link Linker { get; } Property Value Type Description Link ReferersByLinkerCount Declaration public Int ReferersByLinkerCount { get; } Property Value Type Description Int ReferersBySourceCount Declaration public Int ReferersBySourceCount { get; } Property Value Type Description Int ReferersByTargetCount Declaration public Int ReferersByTargetCount { get; } Property Value Type Description Int Source Declaration public Link Source { get; } Property Value Type Description Link Target Declaration public Link Target { get; } Property Value Type Description Link Timestamp Declaration public DateTime Timestamp { get; } Property Value Type Description DateTime TotalReferers Declaration public Int TotalReferers { get; } Property Value Type Description Int Methods Create(Link, Link, Link) Declaration public static Link Create(Link source, Link linker, Link target) Parameters Type Name Description Link source Link linker Link target Returns Type Description Link CreateMapped(Link, Link, Link, Int) Declaration public static Link CreateMapped(Link source, Link linker, Link target, Int mappingIndex) Parameters Type Name Description Link source Link linker Link target Int mappingIndex Returns Type Description Link CreateMapped(Link, Link, Link, Object) Declaration public static Link CreateMapped(Link source, Link linker, Link target, object mappingIndex) Parameters Type Name Description Link source Link linker Link target System.Object mappingIndex Returns Type Description Link Delete(ref Link) Declaration public static void Delete(ref Link link) Parameters Type Name Description Link link Equals(Link) Declaration public bool Equals(Link other) Parameters Type Name Description Link other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Exists(Link, Link, Link) Declaration public static bool Exists(Link source, Link linker, Link target) Parameters Type Name Description Link source Link linker Link target Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetMapped(Int) Declaration public static Link GetMapped(Int mappingIndex) Parameters Type Name Description Int mappingIndex Returns Type Description Link GetMapped(Object) Declaration public static Link GetMapped(object mappingIndex) Parameters Type Name Description System.Object mappingIndex Returns Type Description Link Restore(Int) Declaration public static Link Restore(Int index) Parameters Type Name Description Int index Returns Type Description Link Restore(LinkIndex) Declaration public static Link Restore(LinkIndex index) Parameters Type Name Description LinkIndex index Returns Type Description Link Search(Link, Link, Link) Declaration public static Link Search(Link source, Link linker, Link target) Parameters Type Name Description Link source Link linker Link target Returns Type Description Link StartMemoryManager(String) Declaration public static void StartMemoryManager(string storageFilename) Parameters Type Name Description System.String storageFilename StopMemoryManager() Declaration public static void StopMemoryManager() ToIndex() Declaration public LinkIndex ToIndex() Returns Type Description LinkIndex ToInt() Declaration public Int ToInt() Returns Type Description Int ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() TryGetMapped(Int, out Link) Declaration public static bool TryGetMapped(Int mappingIndex, out Link mappedLink) Parameters Type Name Description Int mappingIndex Link mappedLink Returns Type Description System.Boolean TryGetMapped(Object, out Link) Declaration public static bool TryGetMapped(object mappingIndex, out Link mappedLink) Parameters Type Name Description System.Object mappingIndex Link mappedLink Returns Type Description System.Boolean TrySetMapped(Link, Int, Boolean) Declaration public static bool TrySetMapped(Link link, Int mappingIndex, bool rewrite = false) Parameters Type Name Description Link link Int mappingIndex System.Boolean rewrite Returns Type Description System.Boolean Update(ref Link, Link, Link, Link) Declaration public static void Update(ref Link link, Link newSource, Link newLinker, Link newTarget) Parameters Type Name Description Link link Link newSource Link newLinker Link newTarget WalkThroughAllLinks(Action<Link>) Declaration public static void WalkThroughAllLinks(Action<Link> walker) Parameters Type Name Description Action < Link > walker WalkThroughAllLinks(Func<Link, Boolean>) Declaration public static bool WalkThroughAllLinks(Func<Link, bool> walker) Parameters Type Name Description Func < Link , System.Boolean > walker Returns Type Description System.Boolean WalkThroughReferers(Action<Link>) Declaration public void WalkThroughReferers(Action<Link> walker) Parameters Type Name Description Action < Link > walker WalkThroughReferers(Func<Link, Boolean>) Declaration public void WalkThroughReferers(Func<Link, bool> walker) Parameters Type Name Description Func < Link , System.Boolean > walker WalkThroughReferersAsLinker(Action<Link>) Declaration public void WalkThroughReferersAsLinker(Action<Link> walker) Parameters Type Name Description Action < Link > walker WalkThroughReferersAsLinker(Func<Link, Boolean>) Declaration public bool WalkThroughReferersAsLinker(Func<Link, bool> walker) Parameters Type Name Description Func < Link , System.Boolean > walker Returns Type Description System.Boolean WalkThroughReferersAsSource(Action<Link>) Declaration public void WalkThroughReferersAsSource(Action<Link> walker) Parameters Type Name Description Action < Link > walker WalkThroughReferersAsSource(Func<Link, Boolean>) Declaration public bool WalkThroughReferersAsSource(Func<Link, bool> walker) Parameters Type Name Description Func < Link , System.Boolean > walker Returns Type Description System.Boolean WalkThroughReferersAsTarget(Action<Link>) Declaration public void WalkThroughReferersAsTarget(Action<Link> walker) Parameters Type Name Description Action < Link > walker WalkThroughReferersAsTarget(Func<Link, Boolean>) Declaration public bool WalkThroughReferersAsTarget(Func<Link, bool> walker) Parameters Type Name Description Func < Link , System.Boolean > walker Returns Type Description System.Boolean Events CreatedEvent Declaration public static event Link.CreatedDelegate CreatedEvent Event Type Type Description Link.CreatedDelegate DeletedEvent Declaration public static event Link.DeletedDelegate DeletedEvent Event Type Type Description Link.DeletedDelegate UpdatedEvent Declaration public static event Link.UpdatedDelegate UpdatedEvent Event Type Type Description Link.UpdatedDelegate Operators BitwiseAnd(Link, Link) Declaration public static Link operator &(Link first, Link second) Parameters Type Name Description Link first Link second Returns Type Description Link Equality(Link, Link) Declaration public static bool operator ==(Link first, Link second) Parameters Type Name Description Link first Link second Returns Type Description System.Boolean Explicit(List<Link> to Link) Declaration public static explicit operator Link(List<Link> links) Parameters Type Name Description List < Link > links Returns Type Description Link Explicit(Link[] to Link) Declaration public static explicit operator Link(Link[] links) Parameters Type Name Description Link [] links Returns Type Description Link Explicit(String to Link) Declaration public static explicit operator Link(string string) Parameters Type Name Description System.String string Returns Type Description Link Implicit(Int to Link) Declaration public static implicit operator Link(Int link) Parameters Type Name Description Int link Returns Type Description Link Implicit(LinkIndex to Link) Declaration public static implicit operator Link(LinkIndex link) Parameters Type Name Description LinkIndex link Returns Type Description Link Implicit(Link to Int) Declaration public static implicit operator Int(Link link) Parameters Type Name Description Link link Returns Type Description Int Implicit(Link to LinkIndex) Declaration public static implicit operator LinkIndex(Link link) Parameters Type Name Description Link link Returns Type Description LinkIndex Implicit(Link to Nullable<LinkIndex>) Declaration public static implicit operator LinkIndex? (Link link) Parameters Type Name Description Link link Returns Type Description System.Nullable < LinkIndex > Implicit(Nullable<LinkIndex> to Link) Declaration public static implicit operator Link(LinkIndex? link) Parameters Type Name Description System.Nullable < LinkIndex > link Returns Type Description Link Inequality(Link, Link) Declaration public static bool operator !=(Link first, Link second) Parameters Type Name Description Link first Link second Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Platform.Data.Core.Triplets.Link.UpdatedDelegate.html": {
    "href": "api/Platform.Data.Core.Triplets.Link.UpdatedDelegate.html",
    "title": "Delegate Link.UpdatedDelegate | LinksPlatform",
    "keywords": "Delegate Link.UpdatedDelegate Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public delegate void UpdatedDelegate(LinkDefinition linkBeforeUpdate, LinkDefinition linkAfterUpdate); Parameters Type Name Description LinkDefinition linkBeforeUpdate LinkDefinition linkAfterUpdate"
  },
  "api/Platform.Data.Core.Triplets.Link.DeletedDelegate.html": {
    "href": "api/Platform.Data.Core.Triplets.Link.DeletedDelegate.html",
    "title": "Delegate Link.DeletedDelegate | LinksPlatform",
    "keywords": "Delegate Link.DeletedDelegate Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public delegate void DeletedDelegate(LinkDefinition deletedLink); Parameters Type Name Description LinkDefinition deletedLink"
  },
  "api/Platform.Data.Core.Collections.Trees.SizeBalancedTreeMethods2-1.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.SizeBalancedTreeMethods2-1.html",
    "title": "Class SizeBalancedTreeMethods2<TElement> | LinksPlatform",
    "keywords": "Class SizeBalancedTreeMethods2<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> BinaryTreeMethodsBase <TElement> SizeBalancedTreeMethods2<TElement> Inherited Members BinaryTreeMethodsBase<TElement>.GetLeftPointer(TElement) BinaryTreeMethodsBase<TElement>.GetRightPointer(TElement) BinaryTreeMethodsBase<TElement>.GetLeftValue(TElement) BinaryTreeMethodsBase<TElement>.GetRightValue(TElement) BinaryTreeMethodsBase<TElement>.GetSize(TElement) BinaryTreeMethodsBase<TElement>.SetLeft(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetRight(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetSize(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheLeftOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheRightOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.GetLeftOrDefault(TElement) BinaryTreeMethodsBase<TElement>.GetRightOrDefault(TElement) BinaryTreeMethodsBase<TElement>.IncrementSize(TElement) BinaryTreeMethodsBase<TElement>.DecrementSize(TElement) BinaryTreeMethodsBase<TElement>.GetLeftSize(TElement) BinaryTreeMethodsBase<TElement>.GetRightSize(TElement) BinaryTreeMethodsBase<TElement>.GetSizeOrZero(TElement) BinaryTreeMethodsBase<TElement>.FixSize(TElement) BinaryTreeMethodsBase<TElement>.LeftRotate(IntPtr) BinaryTreeMethodsBase<TElement>.LeftRotate(TElement) BinaryTreeMethodsBase<TElement>.RightRotate(IntPtr) BinaryTreeMethodsBase<TElement>.RightRotate(TElement) BinaryTreeMethodsBase<TElement>.Contains(TElement, TElement) BinaryTreeMethodsBase<TElement>.ClearNode(TElement) BinaryTreeMethodsBase<TElement>.Attach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.Detach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.GetSize(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSizes(IntPtr) BinaryTreeMethodsBase<TElement>.ValidateSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSize(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(IntPtr) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNode(TElement) BinaryTreeMethodsBase<TElement>.PrintNode(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNodeValue(TElement, StringBuilder) GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Trees Assembly : cs.temp.dll.dll Syntax public abstract class SizeBalancedTreeMethods2<TElement> : BinaryTreeMethodsBase<TElement> Type Parameters Name Description TElement Remarks Можно сделать прошитую версию дерева, чтобы сделать проход по дереву более оптимальным. Также имеет смысл разобраться почему не работает версия с идеальной балансировкой. Methods AttachCore(IntPtr, TElement) Declaration protected override void AttachCore(IntPtr root, TElement newNode) Parameters Type Name Description IntPtr root TElement newNode Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.AttachCore(IntPtr, TElement) DetachCore(IntPtr, TElement) Declaration protected override void DetachCore(IntPtr root, TElement nodeToDetach) Parameters Type Name Description IntPtr root TElement nodeToDetach Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.DetachCore(IntPtr, TElement)"
  },
  "api/Platform.Data.Core.Collections.GenericCollectionMethodsBase-1.html": {
    "href": "api/Platform.Data.Core.Collections.GenericCollectionMethodsBase-1.html",
    "title": "Class GenericCollectionMethodsBase<TElement> | LinksPlatform",
    "keywords": "Class GenericCollectionMethodsBase<TElement> Inheritance System.Object GenericCollectionMethodsBase<TElement> DoublyLinkedListMethodsBase<TElement> BinaryTreeMethodsBase<TElement> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections Assembly : cs.temp.dll.dll Syntax public abstract class GenericCollectionMethodsBase<TElement> Type Parameters Name Description TElement Methods Add(TElement, TElement) Declaration protected virtual TElement Add(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description TElement Decrement(TElement) Declaration protected virtual TElement Decrement(TElement value) Parameters Type Name Description TElement value Returns Type Description TElement EqualToZero(TElement) Declaration protected virtual bool EqualToZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean GetOne() Declaration protected virtual TElement GetOne() Returns Type Description TElement GetTwo() Declaration protected virtual TElement GetTwo() Returns Type Description TElement GetZero() Declaration protected virtual TElement GetZero() Returns Type Description TElement GreaterOrEqualThan(TElement, TElement) Declaration protected virtual bool GreaterOrEqualThan(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean GreaterOrEqualThanZero(TElement) Declaration protected virtual bool GreaterOrEqualThanZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean GreaterThan(TElement, TElement) Declaration protected virtual bool GreaterThan(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean GreaterThanZero(TElement) Declaration protected virtual bool GreaterThanZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean Increment(TElement) Declaration protected virtual TElement Increment(TElement value) Parameters Type Name Description TElement value Returns Type Description TElement IsEquals(TElement, TElement) Declaration protected virtual bool IsEquals(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean LessOrEqualThan(TElement, TElement) Declaration protected virtual bool LessOrEqualThan(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean LessOrEqualThanZero(TElement) Declaration protected virtual bool LessOrEqualThanZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean LessThan(TElement, TElement) Declaration protected virtual bool LessThan(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean LessThanZero(TElement) Declaration protected virtual bool LessThanZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean Subtract(TElement, TElement) Declaration protected virtual TElement Subtract(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description TElement ValueEqualToZero(IntPtr) Declaration protected virtual bool ValueEqualToZero(IntPtr pointer) Parameters Type Name Description IntPtr pointer Returns Type Description System.Boolean"
  },
  "api/Platform.Data.ConsoleTerminal.html": {
    "href": "api/Platform.Data.ConsoleTerminal.html",
    "title": "Namespace Platform.Data.ConsoleTerminal | LinksPlatform",
    "keywords": "Namespace Platform.Data.ConsoleTerminal Classes Program"
  },
  "api/Platform.Communication.Protocol.Udp.html": {
    "href": "api/Platform.Communication.Protocol.Udp.html",
    "title": "Namespace Platform.Communication.Protocol.Udp | LinksPlatform",
    "keywords": "Namespace Platform.Communication.Protocol.Udp Classes UdpClientExtensions UdpReceiver Представляет получателя сообщений по протоколу UDP. UdpSender Представляет отправителя сообщений по протоколу UDP. Delegates MessageHandlerCallback"
  },
  "api/Platform.Communication.Protocol.Udp.MessageHandlerCallback.html": {
    "href": "api/Platform.Communication.Protocol.Udp.MessageHandlerCallback.html",
    "title": "Delegate MessageHandlerCallback | LinksPlatform",
    "keywords": "Delegate MessageHandlerCallback Namespace : Platform.Communication.Protocol.Udp Assembly : cs.temp.dll.dll Syntax public delegate void MessageHandlerCallback(string message); Parameters Type Name Description System.String message"
  },
  "api/Platform.Communication.Protocol.Gexf.Graph.html": {
    "href": "api/Platform.Communication.Protocol.Gexf.Graph.html",
    "title": "Class Graph | LinksPlatform",
    "keywords": "Class Graph Inheritance System.Object Graph Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Communication.Protocol.Gexf Assembly : cs.temp.dll.dll Syntax public class Graph Constructors Graph() Declaration public Graph() Fields DefaultEdgeTypeAttributeName Declaration public const string DefaultEdgeTypeAttributeName = \"defaultedgetype\" Field Value Type Description System.String EdgeElementName Declaration public const string EdgeElementName = \"edge\" Field Value Type Description System.String EdgesElementName Declaration public const string EdgesElementName = \"edges\" Field Value Type Description System.String ElementName Declaration public const string ElementName = \"graph\" Field Value Type Description System.String ModeAttributeName Declaration public const string ModeAttributeName = \"mode\" Field Value Type Description System.String NodeElementName Declaration public const string NodeElementName = \"node\" Field Value Type Description System.String NodesElementName Declaration public const string NodesElementName = \"nodes\" Field Value Type Description System.String Properties DefaultEdgeType Declaration public GraphDefaultEdgeType DefaultEdgeType { get; set; } Property Value Type Description GraphDefaultEdgeType Edges Declaration public List<Edge> Edges { get; set; } Property Value Type Description List < Edge > Mode Declaration public GraphMode Mode { get; set; } Property Value Type Description GraphMode Nodes Declaration public List<Node> Nodes { get; set; } Property Value Type Description List < Node > Methods WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer WriteXml(XmlWriter, Action, Action, GraphMode, GraphDefaultEdgeType) Declaration public static void WriteXml(XmlWriter writer, Action writeNodes, Action writeEdges, GraphMode mode = GraphMode.Static, GraphDefaultEdgeType defaultEdgeType = GraphDefaultEdgeType.Directed) Parameters Type Name Description XmlWriter writer Action writeNodes Action writeEdges GraphMode mode GraphDefaultEdgeType defaultEdgeType"
  },
  "api/Platform.Tests.html": {
    "href": "api/Platform.Tests.html",
    "title": "Namespace Platform.Tests | LinksPlatform",
    "keywords": "Namespace Platform.Tests Classes SystemTests Contains tests for features of .NET Framework itself, that are required by current implementations. SystemTests.UInt64EqualityComparer"
  },
  "api/Platform.Tests.SystemTests.html": {
    "href": "api/Platform.Tests.SystemTests.html",
    "title": "Class SystemTests | LinksPlatform",
    "keywords": "Class SystemTests Contains tests for features of .NET Framework itself, that are required by current implementations. Inheritance System.Object SystemTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests Assembly : cs.temp.dll.dll Syntax public class SystemTests Methods EqualsPerfomanceTest() Declaration public static void EqualsPerfomanceTest() PossiblePackTwoValuesIntoOneTest() Declaration public void PossiblePackTwoValuesIntoOneTest() UsingSupportsNullTest() Declaration public void UsingSupportsNullTest()"
  },
  "api/Platform.Tests.Data.Core.DoubletLinksTests.html": {
    "href": "api/Platform.Tests.Data.Core.DoubletLinksTests.html",
    "title": "Class DoubletLinksTests | LinksPlatform",
    "keywords": "Class DoubletLinksTests Inheritance System.Object DoubletLinksTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public static class DoubletLinksTests Methods UInt16CRUDTest() Declaration public static void UInt16CRUDTest() UInt16RawNumbersCRUDTest() Declaration public static void UInt16RawNumbersCRUDTest() UInt32CRUDTest() Declaration public static void UInt32CRUDTest() UInt32RawNumbersCRUDTest() Declaration public static void UInt32RawNumbersCRUDTest() UInt64CRUDTest() Declaration public static void UInt64CRUDTest() UInt64RawNumbersCRUDTest() Declaration public static void UInt64RawNumbersCRUDTest() UInt8CRUDTest() Declaration public static void UInt8CRUDTest() UInt8RawNumbersCRUDTest() Declaration public static void UInt8RawNumbersCRUDTest()"
  },
  "api/Platform.Tests.Data.Core.BitStringTests.html": {
    "href": "api/Platform.Tests.Data.Core.BitStringTests.html",
    "title": "Class BitStringTests | LinksPlatform",
    "keywords": "Class BitStringTests Inheritance System.Object BitStringTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class BitStringTests Methods BitGetSetTest() Declaration public void BitGetSetTest()"
  },
  "api/Platform.Tests.Collections.html": {
    "href": "api/Platform.Tests.Collections.html",
    "title": "Namespace Platform.Tests.Collections | LinksPlatform",
    "keywords": "Namespace Platform.Tests.Collections Classes StringTests"
  },
  "api/Platform.Tests.Collections.StringTests.html": {
    "href": "api/Platform.Tests.Collections.StringTests.html",
    "title": "Class StringTests | LinksPlatform",
    "keywords": "Class StringTests Inheritance System.Object StringTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Collections Assembly : cs.temp.dll.dll Syntax public class StringTests Methods CapitalizeFirstLetterTest() Declaration public static void CapitalizeFirstLetterTest()"
  },
  "api/Platform.Sandbox.html": {
    "href": "api/Platform.Sandbox.html",
    "title": "Namespace Platform.Sandbox | LinksPlatform",
    "keywords": "Namespace Platform.Sandbox Classes A Base CompressionExperiments ConceptTest ConsolePrintedDublicateWalkerBase DllImportTest Представляет тест, который позволит определить необходимо ли указывать расширение файла при подключении библиотеки. TODO: Проверить на пользовательских DLL TODO: Далее протестировать на CoreCLR, Mono FileReadWriteTest Inherited IterationsCounter NetParser NetParserTest OperationsExperiments Program QueryExecutorExtensions Представляет класс-контейнер расширений для выполнения произвольных запросов над Links StaticBase<TSuccessor> TerminalExperiment TextParser TextParser.State Transactions TreeStructureExperiments Walker1 Walker2 Walker3 Walker4 Zadacha Structs CompressionExperiments.Compressor Enums OperationsExperiments.Mapping"
  },
  "api/Platform.Sandbox.Zadacha.html": {
    "href": "api/Platform.Sandbox.Zadacha.html",
    "title": "Class Zadacha | LinksPlatform",
    "keywords": "Class Zadacha Inheritance System.Object Zadacha Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Zadacha Fields StepsFor7DigitPhoneNumbers Declaration public const int StepsFor7DigitPhoneNumbers = 6 Field Value Type Description System.Int32 Methods RunAll() Declaration public void RunAll() RunOne() Declaration public void RunOne()"
  },
  "api/Platform.Sandbox.Walker4.html": {
    "href": "api/Platform.Sandbox.Walker4.html",
    "title": "Class Walker4 | LinksPlatform",
    "keywords": "Class Walker4 Inheritance System.Object Walker4 Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Walker4 : DictionaryBasedDuplicateSegmentsWalkerBase<char, CharsSegment> Constructors Walker4() Declaration public Walker4() Methods CreateSegment(IList<Char>, Int32, Int32) Declaration protected override CharsSegment CreateSegment(IList<char> elements, int offset, int length) Parameters Type Name Description IList < System.Char > elements System.Int32 offset System.Int32 length Returns Type Description CharsSegment OnDublicateFound(CharsSegment) Declaration protected override void OnDublicateFound(CharsSegment segment) Parameters Type Name Description CharsSegment segment WalkAll(IList<Char>) Declaration public override void WalkAll(IList<char> elements) Parameters Type Name Description IList < System.Char > elements"
  },
  "api/Platform.Sandbox.Walker3.html": {
    "href": "api/Platform.Sandbox.Walker3.html",
    "title": "Class Walker3 | LinksPlatform",
    "keywords": "Class Walker3 Inheritance System.Object ConsolePrintedDublicateWalkerBase Walker3 Inherited Members ConsolePrintedDublicateWalkerBase.OnDublicateFound(CharsSegment) ConsolePrintedDublicateWalkerBase.CreateSegment(IList<Char>, Int32, Int32) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Walker3 : ConsolePrintedDublicateWalkerBase Methods GetSegmentFrequency(CharsSegment) Declaration protected override long GetSegmentFrequency(CharsSegment segment) Parameters Type Name Description CharsSegment segment Returns Type Description System.Int64 Iteration(CharsSegment) Declaration protected override void Iteration(CharsSegment segment) Parameters Type Name Description CharsSegment segment SetSegmentFrequency(CharsSegment, Int64) Declaration protected override void SetSegmentFrequency(CharsSegment segment, long frequency) Parameters Type Name Description CharsSegment segment System.Int64 frequency WalkAll(IList<Char>) Declaration public override void WalkAll(IList<char> elements) Parameters Type Name Description IList < System.Char > elements"
  },
  "api/Platform.Data.WebTerminal.Controllers.HomeController.html": {
    "href": "api/Platform.Data.WebTerminal.Controllers.HomeController.html",
    "title": "Class HomeController | LinksPlatform",
    "keywords": "Class HomeController Inheritance System.Object HomeController Namespace : Platform.Data.WebTerminal.Controllers Assembly : cs.temp.dll.dll Syntax public class HomeController : Controller Methods Error() Declaration public IActionResult Error() Returns Type Description IActionResult Index() Declaration public IActionResult Index() Returns Type Description IActionResult Privacy() Declaration public IActionResult Privacy() Returns Type Description IActionResult"
  },
  "api/Platform.Data.SlaveServer.html": {
    "href": "api/Platform.Data.SlaveServer.html",
    "title": "Namespace Platform.Data.SlaveServer | LinksPlatform",
    "keywords": "Namespace Platform.Data.SlaveServer Classes Program"
  },
  "api/Platform.Data.SlaveServer.Program.html": {
    "href": "api/Platform.Data.SlaveServer.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.SlaveServer Assembly : cs.temp.dll.dll Syntax public class Program Methods Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Data.MasterServer.html": {
    "href": "api/Platform.Data.MasterServer.html",
    "title": "Namespace Platform.Data.MasterServer | LinksPlatform",
    "keywords": "Namespace Platform.Data.MasterServer Classes Program"
  },
  "api/Platform.Data.MasterServer.Program.html": {
    "href": "api/Platform.Data.MasterServer.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.MasterServer Assembly : cs.temp.dll.dll Syntax public class Program Methods Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Data.Core.Triplets.html": {
    "href": "api/Platform.Data.Core.Triplets.html",
    "title": "Namespace Platform.Data.Core.Triplets | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Triplets Classes CharacterHelpers GexfExporter LinkConverter LinkExtensions Net NumberHelpers SequenceHelpers Structs Link LinkDefinition Enums CharacterHelpers.CharacterMapping NetMapping Delegates Link.CreatedDelegate Link.DeletedDelegate Link.UpdatedDelegate"
  },
  "api/Platform.Data.Core.Sequences.StopableSequenceWalker.html": {
    "href": "api/Platform.Data.Core.Sequences.StopableSequenceWalker.html",
    "title": "Class StopableSequenceWalker | LinksPlatform",
    "keywords": "Class StopableSequenceWalker Inheritance System.Object StopableSequenceWalker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class StopableSequenceWalker Remarks Реализованный внутри алгоритм наглядно показывает, что совершенно не обязательна рекурсивная реализация (с вложенным вызовом функцией самой себя), так как стэк можно использовать намного эффективнее при ручном управлении. При оптимизации можно использовать встроенную поддержку стеков в процессор. Решить объединять ли логику в одну функцию, или оставить 4 отдельных реализации? Решить встраивать ли защиту от зацикливания. Альтернативой защиты от закливания может быть заранее известное ограничение на погружение вглубь. А так же качественное распознавание прохода по циклическому графу. Ограничение на уровень глубины рекурсии может позволить использовать уменьшенный размер стека. Можно использовать глобальный стек (или несколько глобальных стеков на каждый поток). Methods WalkLeft<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Func<TLink, Boolean>) Declaration public static bool WalkLeft<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Func<TLink, bool> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, System.Boolean > isElement Func <TLink, System.Boolean > visit Returns Type Description System.Boolean Type Parameters Name Description TLink WalkRight<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Action<TLink>, Action<TLink>, Func<TLink, Boolean>, Func<TLink, Boolean>) Declaration public static bool WalkRight<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Action<TLink> enter, Action<TLink> exit, Func<TLink, bool> canEnter, Func<TLink, bool> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, System.Boolean > isElement Action <TLink> enter Action <TLink> exit Func <TLink, System.Boolean > canEnter Func <TLink, System.Boolean > visit Returns Type Description System.Boolean Type Parameters Name Description TLink WalkRight<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Func<TLink, Boolean>) Declaration public static bool WalkRight<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Func<TLink, bool> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, System.Boolean > isElement Func <TLink, System.Boolean > visit Returns Type Description System.Boolean Type Parameters Name Description TLink"
  },
  "api/Platform.Data.Core.Sequences.SequencesOptions-1.html": {
    "href": "api/Platform.Data.Core.Sequences.SequencesOptions-1.html",
    "title": "Struct SequencesOptions<TLink> | LinksPlatform",
    "keywords": "Struct SequencesOptions<TLink> Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public struct SequencesOptions<TLink> Type Parameters Name Description TLink Fields EnforceSingleSequenceVersionOnWriteBasedOnExisting Declaration public bool EnforceSingleSequenceVersionOnWriteBasedOnExisting Field Value Type Description System.Boolean EnforceSingleSequenceVersionOnWriteBasedOnNew Declaration public bool EnforceSingleSequenceVersionOnWriteBasedOnNew Field Value Type Description System.Boolean Indexer Declaration public SequencesIndexer<TLink> Indexer Field Value Type Description SequencesIndexer <TLink> LinksToSequenceConverter Declaration public IConverter<IList<TLink>, TLink> LinksToSequenceConverter Field Value Type Description IConverter < IList <TLink>, TLink> MarkedSequenceMatcher Declaration public MarkedSequenceMatcher<TLink> MarkedSequenceMatcher Field Value Type Description MarkedSequenceMatcher <TLink> SequenceMarkerLink Declaration public TLink SequenceMarkerLink Field Value Type Description TLink UseCascadeDelete Declaration public bool UseCascadeDelete Field Value Type Description System.Boolean UseCascadeUpdate Declaration public bool UseCascadeUpdate Field Value Type Description System.Boolean UseCompression Declaration public bool UseCompression Field Value Type Description System.Boolean UseGarbageCollection Declaration public bool UseGarbageCollection Field Value Type Description System.Boolean UseIndex Declaration public bool UseIndex Field Value Type Description System.Boolean UseSequenceMarker Declaration public bool UseSequenceMarker Field Value Type Description System.Boolean Methods InitOptions(ISynchronizedLinks<TLink>) Declaration public void InitOptions(ISynchronizedLinks<TLink> links) Parameters Type Name Description ISynchronizedLinks <TLink> links ValidateOptions() Declaration public void ValidateOptions()"
  },
  "api/Platform.Data.Core.Sequences.RightSequenceWalker-1.html": {
    "href": "api/Platform.Data.Core.Sequences.RightSequenceWalker-1.html",
    "title": "Class RightSequenceWalker<TLink> | LinksPlatform",
    "keywords": "Class RightSequenceWalker<TLink> Inheritance System.Object SequenceWalkerBase <TLink> RightSequenceWalker<TLink> Sequences.Matcher Sequences.PatternMatcher Implements ISequenceWalker <TLink> Inherited Members SequenceWalkerBase<TLink>.Walk(TLink) SequenceWalkerBase<TLink>.IsElement(IList<TLink>) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class RightSequenceWalker<TLink> : SequenceWalkerBase<TLink>, ISequenceWalker<TLink> Type Parameters Name Description TLink Constructors RightSequenceWalker(ILinks<TLink>) Declaration public RightSequenceWalker(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods GetNextElementAfterPop(IList<TLink>) Declaration protected override IList<TLink> GetNextElementAfterPop(IList<TLink> element) Parameters Type Name Description IList <TLink> element Returns Type Description IList <TLink> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.GetNextElementAfterPop(IList<TLink>) GetNextElementAfterPush(IList<TLink>) Declaration protected override IList<TLink> GetNextElementAfterPush(IList<TLink> element) Parameters Type Name Description IList <TLink> element Returns Type Description IList <TLink> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.GetNextElementAfterPush(IList<TLink>) WalkContents(IList<TLink>) Declaration protected override IEnumerable<IList<TLink>> WalkContents(IList<TLink> element) Parameters Type Name Description IList <TLink> element Returns Type Description IEnumerable < IList <TLink>> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.WalkContents(IList<TLink>) Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Core.Sequences.OptimalVariantConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.OptimalVariantConverter-1.html",
    "title": "Class OptimalVariantConverter<TLink> | LinksPlatform",
    "keywords": "Class OptimalVariantConverter<TLink> Inheritance System.Object LinksListToSequenceConverterBase <TLink> OptimalVariantConverter<TLink> Inherited Members LinksListToSequenceConverterBase<TLink>.Links Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class OptimalVariantConverter<TLink> : LinksListToSequenceConverterBase<TLink> Type Parameters Name Description TLink Constructors OptimalVariantConverter(ILinks<TLink>, IConverter<IList<TLink>>) Declaration public OptimalVariantConverter(ILinks<TLink> links, IConverter<IList<TLink>> sequenceToItsLocalElementLevelsConverter) Parameters Type Name Description ILinks <TLink> links IConverter < IList <TLink>> sequenceToItsLocalElementLevelsConverter Methods Convert(IList<TLink>) Declaration public override TLink Convert(IList<TLink> sequence) Parameters Type Name Description IList <TLink> sequence Returns Type Description TLink Overrides Platform.Data.Core.Sequences.LinksListToSequenceConverterBase<TLink>.Convert(IList<TLink>)"
  },
  "api/Platform.Data.Core.Sequences.MarkedSequenceMatcher-1.html": {
    "href": "api/Platform.Data.Core.Sequences.MarkedSequenceMatcher-1.html",
    "title": "Class MarkedSequenceMatcher<TLink> | LinksPlatform",
    "keywords": "Class MarkedSequenceMatcher<TLink> Inheritance System.Object MarkedSequenceMatcher<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class MarkedSequenceMatcher<TLink> : ICreteriaMatcher<TLink> Type Parameters Name Description TLink Constructors MarkedSequenceMatcher(ILinks<TLink>, TLink) Declaration public MarkedSequenceMatcher(ILinks<TLink> links, TLink sequenceMarkerLink) Parameters Type Name Description ILinks <TLink> links TLink sequenceMarkerLink Methods IsMatched(TLink) Declaration public bool IsMatched(TLink sequenceCandidate) Parameters Type Name Description TLink sequenceCandidate Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Sequences.LinksListToSequenceConverterBase-1.html": {
    "href": "api/Platform.Data.Core.Sequences.LinksListToSequenceConverterBase-1.html",
    "title": "Class LinksListToSequenceConverterBase<TLink> | LinksPlatform",
    "keywords": "Class LinksListToSequenceConverterBase<TLink> Inheritance System.Object LinksListToSequenceConverterBase<TLink> BalancedVariantConverter<TLink> CompressingConverter<TLink> OptimalVariantConverter<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public abstract class LinksListToSequenceConverterBase<TLink> : IConverter<IList<TLink>, TLink> Type Parameters Name Description TLink Constructors LinksListToSequenceConverterBase(ILinks<TLink>) Declaration public LinksListToSequenceConverterBase(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Fields Links Declaration protected readonly ILinks<TLink> Links Field Value Type Description ILinks <TLink> Methods Convert(IList<TLink>) Declaration public abstract TLink Convert(IList<TLink> source) Parameters Type Name Description IList <TLink> source Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Sequences.ISequenceAppender-1.html": {
    "href": "api/Platform.Data.Core.Sequences.ISequenceAppender-1.html",
    "title": "Interface ISequenceAppender<TLink> | LinksPlatform",
    "keywords": "Interface ISequenceAppender<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public interface ISequenceAppender<TLink> Type Parameters Name Description TLink Methods Append(TLink, TLink) Declaration TLink Append(TLink sequence, TLink appendant) Parameters Type Name Description TLink sequence TLink appendant Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.html",
    "title": "Namespace Platform.Data.Core.Sequences.Frequencies.Counters | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Sequences.Frequencies.Counters Classes MarkedSequenceSymbolFrequencyOneOffCounter<TLink> SequenceSymbolFrequencyOneOffCounter<TLink> TotalMarkedSequenceSymbolFrequencyCounter<TLink> TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> TotalSequenceSymbolFrequencyCounter<TLink> TotalSequenceSymbolFrequencyOneOffCounter<TLink>"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.LinkFrequenciesCache-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.LinkFrequenciesCache-1.html",
    "title": "Class LinkFrequenciesCache<TLink> | LinksPlatform",
    "keywords": "Class LinkFrequenciesCache<TLink> Inheritance System.Object LinkFrequenciesCache<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class LinkFrequenciesCache<TLink> : LinksOperatorBase<TLink> Type Parameters Name Description TLink Remarks Can be used to operate with many CompressingConverters (to keep global frequencies data between them). TODO: Extract interface to implement frequencies storage inside Links storage Constructors LinkFrequenciesCache(ILinks<TLink>, ICounter<TLink, TLink>) Declaration public LinkFrequenciesCache(ILinks<TLink> links, ICounter<TLink, TLink> frequencyCounter) Parameters Type Name Description ILinks <TLink> links ICounter <TLink, TLink> frequencyCounter Methods GetFrequency(TLink, TLink) Declaration public LinkFrequency<TLink> GetFrequency(TLink source, TLink target) Parameters Type Name Description TLink source TLink target Returns Type Description LinkFrequency <TLink> GetFrequency(ref Doublet<TLink>) Declaration public LinkFrequency<TLink> GetFrequency(ref Doublet<TLink> doublet) Parameters Type Name Description Doublet <TLink> doublet Returns Type Description LinkFrequency <TLink> IncrementFrequencies(IList<TLink>) Declaration public void IncrementFrequencies(IList<TLink> sequence) Parameters Type Name Description IList <TLink> sequence IncrementFrequency(TLink, TLink) Declaration public LinkFrequency<TLink> IncrementFrequency(TLink source, TLink target) Parameters Type Name Description TLink source TLink target Returns Type Description LinkFrequency <TLink> IncrementFrequency(ref Doublet<TLink>) Declaration public LinkFrequency<TLink> IncrementFrequency(ref Doublet<TLink> doublet) Parameters Type Name Description Doublet <TLink> doublet Returns Type Description LinkFrequency <TLink> PrintFrequencies(IList<TLink>) Declaration public void PrintFrequencies(IList<TLink> sequence) Parameters Type Name Description IList <TLink> sequence PrintFrequency(TLink, TLink) Declaration public void PrintFrequency(TLink source, TLink target) Parameters Type Name Description TLink source TLink target ValidateFrequencies() Declaration public void ValidateFrequencies()"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.FrequenciesCacheBasedLinkToItsFrequencyNumberConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.FrequenciesCacheBasedLinkToItsFrequencyNumberConverter-1.html",
    "title": "Class FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> | LinksPlatform",
    "keywords": "Class FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> Inheritance System.Object FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> : IConverter<Doublet<TLink>, TLink> Type Parameters Name Description TLink Constructors FrequenciesCacheBasedLinkToItsFrequencyNumberConverter(LinkFrequenciesCache<TLink>) Declaration public FrequenciesCacheBasedLinkToItsFrequencyNumberConverter(LinkFrequenciesCache<TLink> cache) Parameters Type Name Description LinkFrequenciesCache <TLink> cache Methods Convert(Doublet<TLink>) Declaration public TLink Convert(Doublet<TLink> source) Parameters Type Name Description Doublet <TLink> source Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Doublets.Hybrid-1.html": {
    "href": "api/Platform.Data.Core.Doublets.Hybrid-1.html",
    "title": "Class Hybrid<T> | LinksPlatform",
    "keywords": "Class Hybrid<T> Inheritance System.Object Hybrid<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class Hybrid<T> Type Parameters Name Description T Constructors Hybrid(T) Declaration public Hybrid(T value) Parameters Type Name Description T value Hybrid(Object) Declaration public Hybrid(object value) Parameters Type Name Description System.Object value Hybrid(Object, Boolean) Declaration public Hybrid(object value, bool isExternal) Parameters Type Name Description System.Object value System.Boolean isExternal Fields Value Declaration public readonly T Value Field Value Type Description T Properties AbsoluteValue Declaration public long AbsoluteValue { get; } Property Value Type Description System.Int64 IsExternal Declaration public bool IsExternal { get; } Property Value Type Description System.Boolean IsInternal Declaration public bool IsInternal { get; } Property Value Type Description System.Boolean IsNothing Declaration public bool IsNothing { get; } Property Value Type Description System.Boolean Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Operators Explicit(Hybrid<T> to Byte) Declaration public static explicit operator byte (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.Byte Explicit(Hybrid<T> to Int16) Declaration public static explicit operator short (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.Int16 Explicit(Hybrid<T> to Int32) Declaration public static explicit operator int (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.Int32 Explicit(Hybrid<T> to Int64) Declaration public static explicit operator long (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.Int64 Explicit(Hybrid<T> to SByte) Declaration public static explicit operator sbyte (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.SByte Explicit(Hybrid<T> to UInt16) Declaration public static explicit operator ushort (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.UInt16 Explicit(Hybrid<T> to UInt32) Declaration public static explicit operator uint (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.UInt32 Explicit(Hybrid<T> to UInt64) Declaration public static explicit operator ulong (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.UInt64 Explicit(Byte to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(byte integer) Parameters Type Name Description System.Byte integer Returns Type Description Hybrid <T> Explicit(Int16 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(short integer) Parameters Type Name Description System.Int16 integer Returns Type Description Hybrid <T> Explicit(Int32 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(int integer) Parameters Type Name Description System.Int32 integer Returns Type Description Hybrid <T> Explicit(Int64 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(long integer) Parameters Type Name Description System.Int64 integer Returns Type Description Hybrid <T> Explicit(SByte to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(sbyte integer) Parameters Type Name Description System.SByte integer Returns Type Description Hybrid <T> Explicit(UInt16 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(ushort integer) Parameters Type Name Description System.UInt16 integer Returns Type Description Hybrid <T> Explicit(UInt32 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(uint integer) Parameters Type Name Description System.UInt32 integer Returns Type Description Hybrid <T> Explicit(UInt64 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(ulong integer) Parameters Type Name Description System.UInt64 integer Returns Type Description Hybrid <T> Implicit(T to Hybrid<T>) Declaration public static implicit operator Hybrid<T>(T integer) Parameters Type Name Description T integer Returns Type Description Hybrid <T> Implicit(Hybrid<T> to T) Declaration public static implicit operator T(Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description T"
  },
  "api/Platform.Data.Core.Doublets.FrequencyPropertyOperator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.FrequencyPropertyOperator-1.html",
    "title": "Class FrequencyPropertyOperator<TLink> | LinksPlatform",
    "keywords": "Class FrequencyPropertyOperator<TLink> Inheritance System.Object LinksOperatorBase <TLink> FrequencyPropertyOperator<TLink> Implements ISpecificPropertyOperator <TLink, TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class FrequencyPropertyOperator<TLink> : LinksOperatorBase<TLink>, ISpecificPropertyOperator<TLink, TLink> Type Parameters Name Description TLink Constructors FrequencyPropertyOperator(ILinks<TLink>, TLink, TLink) Declaration public FrequencyPropertyOperator(ILinks<TLink> links, TLink frequencyPropertyMarker, TLink frequencyMarker) Parameters Type Name Description ILinks <TLink> links TLink frequencyPropertyMarker TLink frequencyMarker Methods Get(TLink) Declaration public TLink Get(TLink link) Parameters Type Name Description TLink link Returns Type Description TLink Set(TLink, TLink) Declaration public void Set(TLink link, TLink frequency) Parameters Type Name Description TLink link TLink frequency Implements ISpecificPropertyOperator<, >"
  },
  "api/Platform.Data.Core.Doublets.DefaultLinkPropertyOperator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.DefaultLinkPropertyOperator-1.html",
    "title": "Class DefaultLinkPropertyOperator<TLink> | LinksPlatform",
    "keywords": "Class DefaultLinkPropertyOperator<TLink> Inheritance System.Object LinksOperatorBase <TLink> DefaultLinkPropertyOperator<TLink> Implements IPropertyOperator <TLink, TLink, TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class DefaultLinkPropertyOperator<TLink> : LinksOperatorBase<TLink>, IPropertyOperator<TLink, TLink, TLink> Type Parameters Name Description TLink Constructors DefaultLinkPropertyOperator(ILinks<TLink>) Declaration public DefaultLinkPropertyOperator(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods GetValue(TLink, TLink) Declaration public TLink GetValue(TLink object, TLink property) Parameters Type Name Description TLink object TLink property Returns Type Description TLink SetValue(TLink, TLink, TLink) Declaration public void SetValue(TLink object, TLink property, TLink value) Parameters Type Name Description TLink object TLink property TLink value Implements IPropertyOperator<, , >"
  },
  "api/Platform.Data.Core.Doublets.AddressToUnaryNumberConverter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.AddressToUnaryNumberConverter-1.html",
    "title": "Class AddressToUnaryNumberConverter<TLink> | LinksPlatform",
    "keywords": "Class AddressToUnaryNumberConverter<TLink> Inheritance System.Object LinksOperatorBase <TLink> AddressToUnaryNumberConverter<TLink> Implements IConverter <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class AddressToUnaryNumberConverter<TLink> : LinksOperatorBase<TLink>, IConverter<TLink> Type Parameters Name Description TLink Constructors AddressToUnaryNumberConverter(ILinks<TLink>, IConverter<Int32, TLink>) Declaration public AddressToUnaryNumberConverter(ILinks<TLink> links, IConverter<int, TLink> powerOf2ToUnaryNumberConverter) Parameters Type Name Description ILinks <TLink> links IConverter < System.Int32 , TLink> powerOf2ToUnaryNumberConverter Methods Convert(TLink) Declaration public TLink Convert(TLink sourceAddress) Parameters Type Name Description TLink sourceAddress Returns Type Description TLink Implements IConverter<>"
  },
  "api/Platform.Data.Core.Collections.html": {
    "href": "api/Platform.Data.Core.Collections.html",
    "title": "Namespace Platform.Data.Core.Collections | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Collections Classes BitString GenericCollectionMethodsBase<TElement>"
  },
  "api/Platform.Data.Core.Collections.Trees.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.html",
    "title": "Namespace Platform.Data.Core.Collections.Trees | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Collections.Trees Classes BinaryTreeMethodsBase<TElement> SizeBalancedTreeMethods<TElement> SizeBalancedTreeMethods2<TElement> SizedAndThreadedAVLBalancedTreeMethods<TElement> Combination of Size, Height (AVL), and threads. Based on: https://github.com/programmatom/TreeLib/blob/master/TreeLib/TreeLib/Generated/AVLTreeList.cs Which itself based on: https://github.com/GNOME/glib/blob/master/glib/gtree.c"
  },
  "api/Platform.Data.Core.Collections.Lists.html": {
    "href": "api/Platform.Data.Core.Collections.Lists.html",
    "title": "Namespace Platform.Data.Core.Collections.Lists | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Collections.Lists Classes CircularDoublyLinkedListMethods<TElement> DoublyLinkedListMethodsBase<TElement> OpenDoublyLinkedListMethods<TElement>"
  },
  "api/Platform.Data.Core.Collections.Lists.OpenDoublyLinkedListMethods-1.html": {
    "href": "api/Platform.Data.Core.Collections.Lists.OpenDoublyLinkedListMethods-1.html",
    "title": "Class OpenDoublyLinkedListMethods<TElement> | LinksPlatform",
    "keywords": "Class OpenDoublyLinkedListMethods<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> DoublyLinkedListMethodsBase <TElement> OpenDoublyLinkedListMethods<TElement> Inherited Members DoublyLinkedListMethodsBase<TElement>.GetFirst() DoublyLinkedListMethodsBase<TElement>.GetLast() DoublyLinkedListMethodsBase<TElement>.GetPrevious(TElement) DoublyLinkedListMethodsBase<TElement>.GetNext(TElement) DoublyLinkedListMethodsBase<TElement>.GetSize() DoublyLinkedListMethodsBase<TElement>.SetFirst(TElement) DoublyLinkedListMethodsBase<TElement>.SetLast(TElement) DoublyLinkedListMethodsBase<TElement>.SetPrevious(TElement, TElement) DoublyLinkedListMethodsBase<TElement>.SetNext(TElement, TElement) DoublyLinkedListMethodsBase<TElement>.SetSize(TElement) DoublyLinkedListMethodsBase<TElement>.IncrementSize() DoublyLinkedListMethodsBase<TElement>.DecrementSize() GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Lists Assembly : cs.temp.dll.dll Syntax public abstract class OpenDoublyLinkedListMethods<TElement> : DoublyLinkedListMethodsBase<TElement> Type Parameters Name Description TElement Remarks Based on https://en.wikipedia.org/wiki/Doubly_linked_list Methods AttachAfter(TElement, TElement) Declaration public void AttachAfter(TElement baseElement, TElement newElement) Parameters Type Name Description TElement baseElement TElement newElement AttachAsFirst(TElement) Declaration public void AttachAsFirst(TElement element) Parameters Type Name Description TElement element AttachAsLast(TElement) Declaration public void AttachAsLast(TElement element) Parameters Type Name Description TElement element AttachBefore(TElement, TElement) Declaration public void AttachBefore(TElement baseElement, TElement newElement) Parameters Type Name Description TElement baseElement TElement newElement Detach(TElement) Declaration public void Detach(TElement element) Parameters Type Name Description TElement element"
  },
  "api/Platform.Communication.Protocol.Udp.UdpReceiver.html": {
    "href": "api/Platform.Communication.Protocol.Udp.UdpReceiver.html",
    "title": "Class UdpReceiver | LinksPlatform",
    "keywords": "Class UdpReceiver Представляет получателя сообщений по протоколу UDP. Inheritance System.Object UdpReceiver Namespace : Platform.Communication.Protocol.Udp Assembly : cs.temp.dll.dll Syntax public class UdpReceiver : DisposableBase Remarks TODO: Попробовать ThreadPool / Tasks Constructors UdpReceiver() Declaration public UdpReceiver() UdpReceiver(MessageHandlerCallback) Declaration public UdpReceiver(MessageHandlerCallback messageHandler) Parameters Type Name Description MessageHandlerCallback messageHandler UdpReceiver(Int32, MessageHandlerCallback) Declaration public UdpReceiver(int listenPort, MessageHandlerCallback messageHandler) Parameters Type Name Description System.Int32 listenPort MessageHandlerCallback messageHandler UdpReceiver(Int32, Boolean, MessageHandlerCallback) Declaration public UdpReceiver(int listenPort, bool autoStart, MessageHandlerCallback messageHandler) Parameters Type Name Description System.Int32 listenPort System.Boolean autoStart MessageHandlerCallback messageHandler Properties Available Declaration public bool Available { get; } Property Value Type Description System.Boolean Methods DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Receive() Declaration public string Receive() Returns Type Description System.String ReceiveAndHandle() Declaration public void ReceiveAndHandle() Start() Declaration public void Start() Stop() Declaration public void Stop()"
  },
  "api/Platform.Communication.Protocol.Gexf.GraphMode.html": {
    "href": "api/Platform.Communication.Protocol.Gexf.GraphMode.html",
    "title": "Enum GraphMode | LinksPlatform",
    "keywords": "Enum GraphMode Namespace : Platform.Communication.Protocol.Gexf Assembly : cs.temp.dll.dll Syntax public enum GraphMode Fields Name Description Dynamic Static"
  },
  "api/Platform.Communication.Protocol.Gexf.Gexf.html": {
    "href": "api/Platform.Communication.Protocol.Gexf.Gexf.html",
    "title": "Class Gexf | LinksPlatform",
    "keywords": "Class Gexf Inheritance System.Object Gexf Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Communication.Protocol.Gexf Assembly : cs.temp.dll.dll Syntax public class Gexf Constructors Gexf() Declaration public Gexf() Fields CurrentVersion Declaration public const string CurrentVersion = \"1.2\" Field Value Type Description System.String ElementName Declaration public const string ElementName = \"gexf\" Field Value Type Description System.String GraphElementName Declaration public const string GraphElementName = \"graph\" Field Value Type Description System.String Namespace Declaration public const string Namespace = \"http://www.gexf.net/1.2draft\" Field Value Type Description System.String VersionAttributeName Declaration public const string VersionAttributeName = \"version\" Field Value Type Description System.String Properties Graph Declaration public Graph Graph { get; set; } Property Value Type Description Graph Version Declaration public string Version { get; set; } Property Value Type Description System.String Methods WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer WriteXml(XmlWriter, Action, Action, String, GraphMode, GraphDefaultEdgeType) Declaration public static void WriteXml(XmlWriter writer, Action writeNodes, Action writeEdges, string version = \"1.2\", GraphMode mode = GraphMode.Static, GraphDefaultEdgeType defaultEdgeType = GraphDefaultEdgeType.Directed) Parameters Type Name Description XmlWriter writer Action writeNodes Action writeEdges System.String version GraphMode mode GraphDefaultEdgeType defaultEdgeType WriteXml(XmlWriter, Action, String) Declaration public static void WriteXml(XmlWriter writer, Action writeGraph, string version = \"1.2\") Parameters Type Name Description XmlWriter writer Action writeGraph System.String version"
  },
  "api/Platform.Sandbox.Walker2.html": {
    "href": "api/Platform.Sandbox.Walker2.html",
    "title": "Class Walker2 | LinksPlatform",
    "keywords": "Class Walker2 Inheritance System.Object ConsolePrintedDublicateWalkerBase Walker2 Inherited Members ConsolePrintedDublicateWalkerBase.OnDublicateFound(CharsSegment) ConsolePrintedDublicateWalkerBase.CreateSegment(IList<Char>, Int32, Int32) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Walker2 : ConsolePrintedDublicateWalkerBase Methods GetSegmentFrequency(CharsSegment) Declaration protected override long GetSegmentFrequency(CharsSegment segment) Parameters Type Name Description CharsSegment segment Returns Type Description System.Int64 Iteration(CharsSegment) Declaration protected override void Iteration(CharsSegment segment) Parameters Type Name Description CharsSegment segment SetSegmentFrequency(CharsSegment, Int64) Declaration protected override void SetSegmentFrequency(CharsSegment segment, long frequency) Parameters Type Name Description CharsSegment segment System.Int64 frequency WalkAll(IList<Char>) Declaration public override void WalkAll(IList<char> elements) Parameters Type Name Description IList < System.Char > elements"
  },
  "api/Platform.Sandbox.Walker1.html": {
    "href": "api/Platform.Sandbox.Walker1.html",
    "title": "Class Walker1 | LinksPlatform",
    "keywords": "Class Walker1 Inheritance System.Object ConsolePrintedDublicateWalkerBase Walker1 Inherited Members ConsolePrintedDublicateWalkerBase.OnDublicateFound(CharsSegment) ConsolePrintedDublicateWalkerBase.CreateSegment(IList<Char>, Int32, Int32) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Walker1 : ConsolePrintedDublicateWalkerBase Methods GetSegmentFrequency(CharsSegment) Declaration protected override long GetSegmentFrequency(CharsSegment segment) Parameters Type Name Description CharsSegment segment Returns Type Description System.Int64 Iteration(CharsSegment) Declaration protected override void Iteration(CharsSegment segment) Parameters Type Name Description CharsSegment segment SetSegmentFrequency(CharsSegment, Int64) Declaration protected override void SetSegmentFrequency(CharsSegment segment, long frequency) Parameters Type Name Description CharsSegment segment System.Int64 frequency WalkAll(IList<Char>) Declaration public override void WalkAll(IList<char> elements) Parameters Type Name Description IList < System.Char > elements"
  },
  "api/Platform.Sandbox.TreeStructureExperiments.html": {
    "href": "api/Platform.Sandbox.TreeStructureExperiments.html",
    "title": "Class TreeStructureExperiments | LinksPlatform",
    "keywords": "Class TreeStructureExperiments Inheritance System.Object TreeStructureExperiments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class TreeStructureExperiments Methods RunExperiment() Declaration public static void RunExperiment()"
  },
  "api/Platform.Sandbox.Transactions.html": {
    "href": "api/Platform.Sandbox.Transactions.html",
    "title": "Class Transactions | LinksPlatform",
    "keywords": "Class Transactions Inheritance System.Object Transactions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class Transactions Methods Run() Declaration public static void Run()"
  },
  "api/Platform.Sandbox.TextParser.html": {
    "href": "api/Platform.Sandbox.TextParser.html",
    "title": "Class TextParser | LinksPlatform",
    "keywords": "Class TextParser Inheritance System.Object TextParser Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class TextParser : IDisposable Constructors TextParser() Declaration public TextParser() TextParser(Stream, Int32) Declaration public TextParser(Stream stream, int bufferSize = 81920) Parameters Type Name Description Stream stream System.Int32 bufferSize TextParser(String, Int32) Declaration public TextParser(string path, int bufferSize = 81920) Parameters Type Name Description System.String path System.Int32 bufferSize Methods Dispose() Declaration public void Dispose()"
  },
  "api/Platform.Sandbox.TextParser.State.html": {
    "href": "api/Platform.Sandbox.TextParser.State.html",
    "title": "Class TextParser.State | LinksPlatform",
    "keywords": "Class TextParser.State Inheritance System.Object TextParser.State Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax protected class State Fields ParsedFromPath Declaration public string ParsedFromPath Field Value Type Description System.String ResultSequence Declaration public Link ResultSequence Field Value Type Description Link"
  },
  "api/Platform.Sandbox.TerminalExperiment.html": {
    "href": "api/Platform.Sandbox.TerminalExperiment.html",
    "title": "Class TerminalExperiment | LinksPlatform",
    "keywords": "Class TerminalExperiment Inheritance System.Object TerminalExperiment Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class TerminalExperiment Properties IsRunning Declaration public static bool IsRunning { get; set; } Property Value Type Description System.Boolean Methods LinkCreated(LinkDefinition) Declaration public static void LinkCreated(LinkDefinition createdLink) Parameters Type Name Description LinkDefinition createdLink Run() Declaration public static void Run()"
  },
  "api/Platform.Sandbox.StaticBase-1.html": {
    "href": "api/Platform.Sandbox.StaticBase-1.html",
    "title": "Class StaticBase<TSuccessor> | LinksPlatform",
    "keywords": "Class StaticBase<TSuccessor> Inheritance System.Object StaticBase<TSuccessor> Base Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public abstract class StaticBase<TSuccessor> where TSuccessor : StaticBase<TSuccessor>, new() Type Parameters Name Description TSuccessor Fields Instance Declaration protected static readonly TSuccessor Instance Field Value Type Description TSuccessor"
  },
  "api/Platform.Memory.html": {
    "href": "api/Platform.Memory.html",
    "title": "Namespace Platform.Memory | LinksPlatform",
    "keywords": "Namespace Platform.Memory Classes ArrayMemory<TElement> Represents a memory block with access via indexer. Представляет блок памяти с доступом через индексатор. DirectMemoryAsArrayMemoryAdapter<TElement> Represents adapter to a memory block with access via indexer. Представляет адаптер к блоку памяти с доступом через индексатор. FileArrayMemory<TElement> Represents a memory block with access via indexer and stored as file on disk. Представляет блок памяти с доступом через индексатор и хранящийся в виде файла на диске. FileMappedResizableDirectMemory Represents a memory block stored as a file on disk. Представляет блок памяти, хранящийся в виде файла на диске. HeapResizableDirectMemory Represents a memory block allocated in Heap. Представляет блок памяти, выделенный в \"куче\". ResizableDirectMemoryBase Provides a base implementation for the resizable memory block with direct access (via unmanaged pointers). Предоставляет базовую реализацию для блока памяти c изменяемым размером и прямым доступом (через неуправляемые указатели). TemporaryFileMappedResizableDirectMemory Represents a memory block stored as a temporary file on disk. Представляет блок памяти, хранящийся в виде временного файла на диске. Interfaces IArrayMemory<TElement> Represents a memory block interface with access via indexer. Представляет интерфейс блока памяти с доступом через индексатор. IDirectMemory Represents a memory block interface with direct access (via unmanaged pointers). Представляет интерфейс блока памяти с прямым доступом (через неуправляемые указатели). IMemory Represents a memory block interface with size in bytes. Представляет интерфейс блока памяти с размером в байтах. IResizableDirectMemory Represents a resizable memory block interface with direct access (via unmanaged pointers). Представляет интерфейс блока памяти c изменяемым размером и прямым доступом (через неуправляемые указатели)."
  },
  "api/Platform.Memory.TemporaryFileMappedResizableDirectMemory.html": {
    "href": "api/Platform.Memory.TemporaryFileMappedResizableDirectMemory.html",
    "title": "Class TemporaryFileMappedResizableDirectMemory | LinksPlatform",
    "keywords": "Class TemporaryFileMappedResizableDirectMemory Represents a memory block stored as a temporary file on disk. Представляет блок памяти, хранящийся в виде временного файла на диске. Inheritance System.Object ResizableDirectMemoryBase FileMappedResizableDirectMemory TemporaryFileMappedResizableDirectMemory Implements IResizableDirectMemory IDirectMemory IMemory IDisposable Inherited Members FileMappedResizableDirectMemory.Address FileMappedResizableDirectMemory.OnReservedCapacityChanged(Int64, Int64) FileMappedResizableDirectMemory.DisposePointer(IntPtr, Int64) ResizableDirectMemoryBase.MinimumCapacity ResizableDirectMemoryBase.Size ResizableDirectMemoryBase.Pointer ResizableDirectMemoryBase.ReservedCapacity ResizableDirectMemoryBase.UsedCapacity ResizableDirectMemoryBase.AllowMultipleDisposeCalls Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public class TemporaryFileMappedResizableDirectMemory : FileMappedResizableDirectMemory, IResizableDirectMemory, IDirectMemory, IMemory, IDisposable Constructors TemporaryFileMappedResizableDirectMemory() Declaration public TemporaryFileMappedResizableDirectMemory() TemporaryFileMappedResizableDirectMemory(Int64) Declaration public TemporaryFileMappedResizableDirectMemory(long minimumReservedCapacity) Parameters Type Name Description System.Int64 minimumReservedCapacity Properties ObjectName Declaration protected override string ObjectName { get; } Property Value Type Description System.String Overrides FileMappedResizableDirectMemory.ObjectName Methods DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Overrides ResizableDirectMemoryBase.DisposeCore(Boolean, Boolean) Implements IResizableDirectMemory IDirectMemory IMemory IDisposable"
  },
  "api/Platform.Memory.ResizableDirectMemoryBase.html": {
    "href": "api/Platform.Memory.ResizableDirectMemoryBase.html",
    "title": "Class ResizableDirectMemoryBase | LinksPlatform",
    "keywords": "Class ResizableDirectMemoryBase Provides a base implementation for the resizable memory block with direct access (via unmanaged pointers). Предоставляет базовую реализацию для блока памяти c изменяемым размером и прямым доступом (через неуправляемые указатели). Inheritance System.Object ResizableDirectMemoryBase FileMappedResizableDirectMemory HeapResizableDirectMemory Implements IResizableDirectMemory IDirectMemory IMemory IDisposable Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public abstract class ResizableDirectMemoryBase : DisposableBase, IResizableDirectMemory, IDirectMemory, IMemory, IDisposable Fields MinimumCapacity Declaration public const long MinimumCapacity = 4096L Field Value Type Description System.Int64 Properties AllowMultipleDisposeCalls Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description System.Boolean Pointer Declaration public IntPtr Pointer { get; protected set; } Property Value Type Description IntPtr ReservedCapacity Declaration public long ReservedCapacity { get; set; } Property Value Type Description System.Int64 Size Declaration public long Size { get; } Property Value Type Description System.Int64 UsedCapacity Declaration public long UsedCapacity { get; set; } Property Value Type Description System.Int64 Methods DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed DisposePointer(IntPtr, Int64) Declaration protected abstract void DisposePointer(IntPtr pointer, long size) Parameters Type Name Description IntPtr pointer System.Int64 size OnReservedCapacityChanged(Int64, Int64) Declaration protected abstract void OnReservedCapacityChanged(long oldReservedCapacity, long newReservedCapacity) Parameters Type Name Description System.Int64 oldReservedCapacity System.Int64 newReservedCapacity Implements IResizableDirectMemory IDirectMemory IMemory IDisposable"
  },
  "api/Platform.Memory.IResizableDirectMemory.html": {
    "href": "api/Platform.Memory.IResizableDirectMemory.html",
    "title": "Interface IResizableDirectMemory | LinksPlatform",
    "keywords": "Interface IResizableDirectMemory Represents a resizable memory block interface with direct access (via unmanaged pointers). Представляет интерфейс блока памяти c изменяемым размером и прямым доступом (через неуправляемые указатели). Inherited Members IDirectMemory.Pointer IMemory.Size Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public interface IResizableDirectMemory : IDirectMemory, IMemory, IDisposable Remarks Возможно, если дать настройку - инициализировать ли нулями выделяемую память можно немного выиграть в производительности, однако потерять в надёжности и стабильности при разработке. Возможно ReservedCapacity - лишнее свойство, и управлять размером блока можно через что-то одно. Либо может быть ReservedCapacity можно сделать readonly. Возможно нужна настройка, определяющая блоками какого размера растёт блок памяти. Можно ли как-то отлавливать ошибки при обращении к некорректному указателю и автоматически трактовать это как команду к расширению блока? Можно ли реализовать распределённую память, храняющуюся на нескольких машинах, используя такой интерфейс? Асинхронный доступ к памяти? (Для операций выделения памяти, обращения к памяти, изменения размера блока) Нехранимая память? Лог? Возможно потребуется добавить событие OnPointerChanged/OnSizeChanged. Properties ReservedCapacity Gets or sets the reserved capacity in bytes of this memory block. Возвращает или устаналивает зарезервированный размер блока памяти в байтах. Declaration long ReservedCapacity { get; set; } Property Value Type Description System.Int64 Remarks If less then zero the value is replaced with zero. Cannot be less than the used capacity of this memory block. Если меньше нуля, значение заменяется на ноль. Не может быть меньше используемой емкости блока памяти. UsedCapacity Gets or sets the used capacity in bytes of this memory block. Возвращает или устанавливает используемый размер в блоке памяти (в байтах). Declaration long UsedCapacity { get; set; } Property Value Type Description System.Int64 Remarks If less then zero the value is replaced with zero. Cannot be greater than the reserved capacity of this memory block. It is recommended to reduce the reserved capacity of the memory block to the used capacity (specified in this property) after the completion of the use of the memory block. Если меньше нуля, значение заменяется на ноль. Не может быть больше, чем зарезервированная емкость этого блока памяти. Рекомендуется уменьшать фактический размер блока памяти до используемого размера (указанного в этом свойстве) после завершения использования блока памяти."
  },
  "api/Platform.Memory.IMemory.html": {
    "href": "api/Platform.Memory.IMemory.html",
    "title": "Interface IMemory | LinksPlatform",
    "keywords": "Interface IMemory Represents a memory block interface with size in bytes. Представляет интерфейс блока памяти с размером в байтах. Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public interface IMemory Properties Size Gets the size in bytes of this memory block. Возвращает размер блока памяти в байтах. Declaration long Size { get; } Property Value Type Description System.Int64"
  },
  "api/Platform.Memory.IDirectMemory.html": {
    "href": "api/Platform.Memory.IDirectMemory.html",
    "title": "Interface IDirectMemory | LinksPlatform",
    "keywords": "Interface IDirectMemory Represents a memory block interface with direct access (via unmanaged pointers). Представляет интерфейс блока памяти с прямым доступом (через неуправляемые указатели). Inherited Members IMemory.Size Namespace : Platform.Memory Assembly : cs.temp.dll.dll Syntax public interface IDirectMemory : IMemory, IDisposable Properties Pointer Gets the pointer to the beginning of this memory block. Возвращает указатель на начало блока памяти. Declaration IntPtr Pointer { get; } Property Value Type Description IntPtr"
  },
  "api/Platform.Examples.MasterServer.html": {
    "href": "api/Platform.Examples.MasterServer.html",
    "title": "Class MasterServer | LinksPlatform",
    "keywords": "Class MasterServer Inheritance System.Object MasterServer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class MasterServer Constructors MasterServer(ILinks<UInt64>, Sequences, UdpSender) Declaration public MasterServer(ILinks<ulong> links, Sequences sequences, UdpSender sender) Parameters Type Name Description ILinks < System.UInt64 > links Sequences sequences UdpSender sender Methods Create(String) Declaration public void Create(string message) Parameters Type Name Description System.String message IsSearch(String) Declaration public bool IsSearch(string message) Parameters Type Name Description System.String message Returns Type Description System.Boolean PrintContents(Action<String>) Declaration public void PrintContents(Action<string> messageHandler) Parameters Type Name Description Action < System.String > messageHandler Search(String) Declaration public void Search(string message) Parameters Type Name Description System.String message"
  },
  "api/Platform.Examples.IWikipediaStorage-1.html": {
    "href": "api/Platform.Examples.IWikipediaStorage-1.html",
    "title": "Interface IWikipediaStorage<TLink> | LinksPlatform",
    "keywords": "Interface IWikipediaStorage<TLink> Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public interface IWikipediaStorage<TLink> Type Parameters Name Description TLink Methods AttachElementToParent(TLink, TLink) Declaration void AttachElementToParent(TLink elementToAttach, TLink parent) Parameters Type Name Description TLink elementToAttach TLink parent CreateDocument(String) Declaration TLink CreateDocument(string name) Parameters Type Name Description System.String name Returns Type Description TLink CreateElement(String) Declaration TLink CreateElement(string name) Parameters Type Name Description System.String name Returns Type Description TLink CreateTextElement(String) Declaration TLink CreateTextElement(string content) Parameters Type Name Description System.String content Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Doublets.FrequencyIncrementer-1.html": {
    "href": "api/Platform.Data.Core.Doublets.FrequencyIncrementer-1.html",
    "title": "Class FrequencyIncrementer<TLink> | LinksPlatform",
    "keywords": "Class FrequencyIncrementer<TLink> Inheritance System.Object LinksOperatorBase <TLink> FrequencyIncrementer<TLink> Implements IIncrementer <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class FrequencyIncrementer<TLink> : LinksOperatorBase<TLink>, IIncrementer<TLink> Type Parameters Name Description TLink Constructors FrequencyIncrementer(ILinks<TLink>, TLink, TLink, IIncrementer<TLink>) Declaration public FrequencyIncrementer(ILinks<TLink> links, TLink frequencyMarker, TLink unaryOne, IIncrementer<TLink> unaryNumberIncrementer) Parameters Type Name Description ILinks <TLink> links TLink frequencyMarker TLink unaryOne IIncrementer <TLink> unaryNumberIncrementer Methods Increment(TLink) Declaration public TLink Increment(TLink frequency) Parameters Type Name Description TLink frequency Returns Type Description TLink Implements IIncrementer<>"
  },
  "api/Platform.Data.Core.Doublets.DefaultSequenceElementCreteriaMatcher-1.html": {
    "href": "api/Platform.Data.Core.Doublets.DefaultSequenceElementCreteriaMatcher-1.html",
    "title": "Class DefaultSequenceElementCreteriaMatcher<TLink> | LinksPlatform",
    "keywords": "Class DefaultSequenceElementCreteriaMatcher<TLink> Inheritance System.Object LinksOperatorBase <TLink> DefaultSequenceElementCreteriaMatcher<TLink> Implements ICreteriaMatcher <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class DefaultSequenceElementCreteriaMatcher<TLink> : LinksOperatorBase<TLink>, ICreteriaMatcher<TLink> Type Parameters Name Description TLink Constructors DefaultSequenceElementCreteriaMatcher(ILinks<TLink>) Declaration public DefaultSequenceElementCreteriaMatcher(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods IsMatched(TLink) Declaration public bool IsMatched(TLink argument) Parameters Type Name Description TLink argument Returns Type Description System.Boolean Implements ICreteriaMatcher<>"
  },
  "api/Platform.Data.Core.Common.html": {
    "href": "api/Platform.Data.Core.Common.html",
    "title": "Namespace Platform.Data.Core.Common | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Common Classes Point<TLink>"
  },
  "api/Platform.Data.Core.Common.Point-1.html": {
    "href": "api/Platform.Data.Core.Common.Point-1.html",
    "title": "Class Point<TLink> | LinksPlatform",
    "keywords": "Class Point<TLink> Inheritance System.Object Point<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Common Assembly : cs.temp.dll.dll Syntax public static class Point<TLink> Type Parameters Name Description TLink Methods IsFullPoint(TLink[]) Declaration public static bool IsFullPoint(params TLink[] link) Parameters Type Name Description TLink[] link Returns Type Description System.Boolean IsFullPoint(IList<TLink>) Declaration public static bool IsFullPoint(IList<TLink> link) Parameters Type Name Description IList <TLink> link Returns Type Description System.Boolean IsFullPointUnchecked(IList<TLink>) Declaration public static bool IsFullPointUnchecked(IList<TLink> link) Parameters Type Name Description IList <TLink> link Returns Type Description System.Boolean IsPartialPoint(TLink[]) Declaration public static bool IsPartialPoint(params TLink[] link) Parameters Type Name Description TLink[] link Returns Type Description System.Boolean IsPartialPoint(IList<TLink>) Declaration public static bool IsPartialPoint(IList<TLink> link) Parameters Type Name Description IList <TLink> link Returns Type Description System.Boolean IsPartialPointUnchecked(IList<TLink>) Declaration public static bool IsPartialPointUnchecked(IList<TLink> link) Parameters Type Name Description IList <TLink> link Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Collections.Trees.SizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.SizeBalancedTreeMethods-1.html",
    "title": "Class SizeBalancedTreeMethods<TElement> | LinksPlatform",
    "keywords": "Class SizeBalancedTreeMethods<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> BinaryTreeMethodsBase <TElement> SizeBalancedTreeMethods<TElement> Inherited Members BinaryTreeMethodsBase<TElement>.GetLeftPointer(TElement) BinaryTreeMethodsBase<TElement>.GetRightPointer(TElement) BinaryTreeMethodsBase<TElement>.GetLeftValue(TElement) BinaryTreeMethodsBase<TElement>.GetRightValue(TElement) BinaryTreeMethodsBase<TElement>.GetSize(TElement) BinaryTreeMethodsBase<TElement>.SetLeft(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetRight(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetSize(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheLeftOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheRightOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.GetLeftOrDefault(TElement) BinaryTreeMethodsBase<TElement>.GetRightOrDefault(TElement) BinaryTreeMethodsBase<TElement>.IncrementSize(TElement) BinaryTreeMethodsBase<TElement>.DecrementSize(TElement) BinaryTreeMethodsBase<TElement>.GetLeftSize(TElement) BinaryTreeMethodsBase<TElement>.GetRightSize(TElement) BinaryTreeMethodsBase<TElement>.GetSizeOrZero(TElement) BinaryTreeMethodsBase<TElement>.FixSize(TElement) BinaryTreeMethodsBase<TElement>.LeftRotate(IntPtr) BinaryTreeMethodsBase<TElement>.LeftRotate(TElement) BinaryTreeMethodsBase<TElement>.RightRotate(IntPtr) BinaryTreeMethodsBase<TElement>.RightRotate(TElement) BinaryTreeMethodsBase<TElement>.Contains(TElement, TElement) BinaryTreeMethodsBase<TElement>.ClearNode(TElement) BinaryTreeMethodsBase<TElement>.Attach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.Detach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.GetSize(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSizes(IntPtr) BinaryTreeMethodsBase<TElement>.ValidateSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSize(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(IntPtr) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNode(TElement) BinaryTreeMethodsBase<TElement>.PrintNode(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNodeValue(TElement, StringBuilder) GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Trees Assembly : cs.temp.dll.dll Syntax public abstract class SizeBalancedTreeMethods<TElement> : BinaryTreeMethodsBase<TElement> Type Parameters Name Description TElement Remarks Можно сделать прошитую версию дерева, чтобы сделать проход по дереву более оптимальным. Также имеет смысл разобраться почему не работает версия с идеальной балансировкой. Methods AttachCore(IntPtr, TElement) Declaration protected override void AttachCore(IntPtr root, TElement node) Parameters Type Name Description IntPtr root TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.AttachCore(IntPtr, TElement) DetachCore(IntPtr, TElement) Declaration protected override void DetachCore(IntPtr root, TElement node) Parameters Type Name Description IntPtr root TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.DetachCore(IntPtr, TElement)"
  },
  "api/Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase-1.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase-1.html",
    "title": "Class BinaryTreeMethodsBase<TElement> | LinksPlatform",
    "keywords": "Class BinaryTreeMethodsBase<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> BinaryTreeMethodsBase<TElement> SizeBalancedTreeMethods<TElement> SizeBalancedTreeMethods2<TElement> SizedAndThreadedAVLBalancedTreeMethods<TElement> Inherited Members GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Trees Assembly : cs.temp.dll.dll Syntax public abstract class BinaryTreeMethodsBase<TElement> : GenericCollectionMethodsBase<TElement> Type Parameters Name Description TElement Methods Attach(IntPtr, TElement) Declaration public void Attach(IntPtr root, TElement node) Parameters Type Name Description IntPtr root TElement node AttachCore(IntPtr, TElement) Declaration protected abstract void AttachCore(IntPtr root, TElement node) Parameters Type Name Description IntPtr root TElement node ClearNode(TElement) Declaration protected virtual void ClearNode(TElement node) Parameters Type Name Description TElement node Contains(TElement, TElement) Declaration public bool Contains(TElement node, TElement root) Parameters Type Name Description TElement node TElement root Returns Type Description System.Boolean DecrementSize(TElement) Declaration protected void DecrementSize(TElement node) Parameters Type Name Description TElement node Detach(IntPtr, TElement) Declaration public void Detach(IntPtr root, TElement node) Parameters Type Name Description IntPtr root TElement node DetachCore(IntPtr, TElement) Declaration protected abstract void DetachCore(IntPtr root, TElement node) Parameters Type Name Description IntPtr root TElement node FirstIsToTheLeftOfSecond(TElement, TElement) Declaration protected abstract bool FirstIsToTheLeftOfSecond(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean FirstIsToTheRightOfSecond(TElement, TElement) Declaration protected abstract bool FirstIsToTheRightOfSecond(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean FixSize(TElement) Declaration protected void FixSize(TElement node) Parameters Type Name Description TElement node FixSizes(TElement) Declaration public void FixSizes(TElement node) Parameters Type Name Description TElement node FixSizes(IntPtr) Declaration public void FixSizes(IntPtr root) Parameters Type Name Description IntPtr root GetLeftOrDefault(TElement) Declaration protected virtual TElement GetLeftOrDefault(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetLeftPointer(TElement) Declaration protected abstract IntPtr GetLeftPointer(TElement node) Parameters Type Name Description TElement node Returns Type Description IntPtr GetLeftSize(TElement) Declaration protected TElement GetLeftSize(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetLeftValue(TElement) Declaration protected abstract TElement GetLeftValue(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetRightOrDefault(TElement) Declaration protected virtual TElement GetRightOrDefault(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetRightPointer(TElement) Declaration protected abstract IntPtr GetRightPointer(TElement node) Parameters Type Name Description TElement node Returns Type Description IntPtr GetRightSize(TElement) Declaration protected TElement GetRightSize(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetRightValue(TElement) Declaration protected abstract TElement GetRightValue(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetSize(TElement) Declaration protected abstract TElement GetSize(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetSize(IntPtr) Declaration public TElement GetSize(IntPtr root) Parameters Type Name Description IntPtr root Returns Type Description TElement GetSizeOrZero(TElement) Declaration protected TElement GetSizeOrZero(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement IncrementSize(TElement) Declaration protected void IncrementSize(TElement node) Parameters Type Name Description TElement node LeftRotate(TElement) Declaration protected TElement LeftRotate(TElement root) Parameters Type Name Description TElement root Returns Type Description TElement LeftRotate(IntPtr) Declaration protected void LeftRotate(IntPtr root) Parameters Type Name Description IntPtr root PrintNode(TElement) Declaration public string PrintNode(TElement node) Parameters Type Name Description TElement node Returns Type Description System.String PrintNode(TElement, StringBuilder, Int32) Declaration protected virtual void PrintNode(TElement node, StringBuilder sb, int level = 0) Parameters Type Name Description TElement node StringBuilder sb System.Int32 level PrintNodes(TElement) Declaration public string PrintNodes(TElement node) Parameters Type Name Description TElement node Returns Type Description System.String PrintNodes(TElement, StringBuilder, Int32) Declaration public void PrintNodes(TElement node, StringBuilder sb, int level = 0) Parameters Type Name Description TElement node StringBuilder sb System.Int32 level PrintNodes(IntPtr) Declaration public string PrintNodes(IntPtr root) Parameters Type Name Description IntPtr root Returns Type Description System.String PrintNodeValue(TElement, StringBuilder) Declaration protected virtual void PrintNodeValue(TElement node, StringBuilder sb) Parameters Type Name Description TElement node StringBuilder sb RightRotate(TElement) Declaration protected TElement RightRotate(TElement root) Parameters Type Name Description TElement root Returns Type Description TElement RightRotate(IntPtr) Declaration protected void RightRotate(IntPtr root) Parameters Type Name Description IntPtr root SetLeft(TElement, TElement) Declaration protected abstract void SetLeft(TElement node, TElement left) Parameters Type Name Description TElement node TElement left SetRight(TElement, TElement) Declaration protected abstract void SetRight(TElement node, TElement right) Parameters Type Name Description TElement node TElement right SetSize(TElement, TElement) Declaration protected abstract void SetSize(TElement node, TElement size) Parameters Type Name Description TElement node TElement size ValidateSize(TElement) Declaration public void ValidateSize(TElement node) Parameters Type Name Description TElement node ValidateSizes(TElement) Declaration public void ValidateSizes(TElement node) Parameters Type Name Description TElement node ValidateSizes(IntPtr) Declaration public void ValidateSizes(IntPtr root) Parameters Type Name Description IntPtr root"
  },
  "api/Platform.Data.Core.Collections.Lists.DoublyLinkedListMethodsBase-1.html": {
    "href": "api/Platform.Data.Core.Collections.Lists.DoublyLinkedListMethodsBase-1.html",
    "title": "Class DoublyLinkedListMethodsBase<TElement> | LinksPlatform",
    "keywords": "Class DoublyLinkedListMethodsBase<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> DoublyLinkedListMethodsBase<TElement> CircularDoublyLinkedListMethods<TElement> OpenDoublyLinkedListMethods<TElement> Inherited Members GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Lists Assembly : cs.temp.dll.dll Syntax public abstract class DoublyLinkedListMethodsBase<TElement> : GenericCollectionMethodsBase<TElement> Type Parameters Name Description TElement Methods DecrementSize() Declaration protected void DecrementSize() GetFirst() Declaration protected abstract TElement GetFirst() Returns Type Description TElement GetLast() Declaration protected abstract TElement GetLast() Returns Type Description TElement GetNext(TElement) Declaration protected abstract TElement GetNext(TElement element) Parameters Type Name Description TElement element Returns Type Description TElement GetPrevious(TElement) Declaration protected abstract TElement GetPrevious(TElement element) Parameters Type Name Description TElement element Returns Type Description TElement GetSize() Declaration protected abstract TElement GetSize() Returns Type Description TElement IncrementSize() Declaration protected void IncrementSize() SetFirst(TElement) Declaration protected abstract void SetFirst(TElement element) Parameters Type Name Description TElement element SetLast(TElement) Declaration protected abstract void SetLast(TElement element) Parameters Type Name Description TElement element SetNext(TElement, TElement) Declaration protected abstract void SetNext(TElement element, TElement next) Parameters Type Name Description TElement element TElement next SetPrevious(TElement, TElement) Declaration protected abstract void SetPrevious(TElement element, TElement previous) Parameters Type Name Description TElement element TElement previous SetSize(TElement) Declaration protected abstract void SetSize(TElement size) Parameters Type Name Description TElement size"
  },
  "api/Platform.Data.Core.Collections.Lists.CircularDoublyLinkedListMethods-1.html": {
    "href": "api/Platform.Data.Core.Collections.Lists.CircularDoublyLinkedListMethods-1.html",
    "title": "Class CircularDoublyLinkedListMethods<TElement> | LinksPlatform",
    "keywords": "Class CircularDoublyLinkedListMethods<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> DoublyLinkedListMethodsBase <TElement> CircularDoublyLinkedListMethods<TElement> Inherited Members DoublyLinkedListMethodsBase<TElement>.GetFirst() DoublyLinkedListMethodsBase<TElement>.GetLast() DoublyLinkedListMethodsBase<TElement>.GetPrevious(TElement) DoublyLinkedListMethodsBase<TElement>.GetNext(TElement) DoublyLinkedListMethodsBase<TElement>.GetSize() DoublyLinkedListMethodsBase<TElement>.SetFirst(TElement) DoublyLinkedListMethodsBase<TElement>.SetLast(TElement) DoublyLinkedListMethodsBase<TElement>.SetPrevious(TElement, TElement) DoublyLinkedListMethodsBase<TElement>.SetNext(TElement, TElement) DoublyLinkedListMethodsBase<TElement>.SetSize(TElement) DoublyLinkedListMethodsBase<TElement>.IncrementSize() DoublyLinkedListMethodsBase<TElement>.DecrementSize() GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Lists Assembly : cs.temp.dll.dll Syntax public abstract class CircularDoublyLinkedListMethods<TElement> : DoublyLinkedListMethodsBase<TElement> Type Parameters Name Description TElement Remarks Based on https://en.wikipedia.org/wiki/Doubly_linked_list Methods AttachAfter(TElement, TElement) Declaration public void AttachAfter(TElement baseElement, TElement newElement) Parameters Type Name Description TElement baseElement TElement newElement AttachAsFirst(TElement) Declaration public void AttachAsFirst(TElement element) Parameters Type Name Description TElement element AttachAsLast(TElement) Declaration public void AttachAsLast(TElement element) Parameters Type Name Description TElement element AttachBefore(TElement, TElement) Declaration public void AttachBefore(TElement baseElement, TElement newElement) Parameters Type Name Description TElement baseElement TElement newElement Detach(TElement) Declaration public void Detach(TElement element) Parameters Type Name Description TElement element"
  },
  "api/Platform.Data.Core.Collections.BitString.html": {
    "href": "api/Platform.Data.Core.Collections.BitString.html",
    "title": "Class BitString | LinksPlatform",
    "keywords": "Class BitString Inheritance System.Object BitString Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections Assembly : cs.temp.dll.dll Syntax public class BitString Remarks А что если хранить карту значений, где каждый бит будет означать присутствует ли блок в 64 бит в массиве значений. 64 бита по 0 бит, будут означать отсутствие 64-х блоков по 64 бита. Т.е. упаковка 512 байт в 8 байт. Подобный принцип можно применять и к 64-ём блокам и т.п. По сути это карта значений. С помощью которой можно быстро проверять есть ли значения непосредственно далее (ниже по уровню). Или как таблица виртуальной памяти где номер блока означает его присутствие и адрес. TODO: Compare what is faster to store BitSetsIn16Bits or to calculate it TODO: Avoid int usage (replace to long) TODO: Synchronize with current BitArray implementation Constructors BitString(BitString) Declaration public BitString(BitString bits) Parameters Type Name Description BitString bits BitString(Int32, Boolean) Declaration public BitString(int length, bool defaultValue) Parameters Type Name Description System.Int32 length System.Boolean defaultValue BitString(Int64) Declaration public BitString(long length) Parameters Type Name Description System.Int64 length Properties Count Declaration public long Count { get; } Property Value Type Description System.Int64 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description System.Boolean Item[Int32] Declaration public bool this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Boolean Length Declaration public long Length { get; set; } Property Value Type Description System.Int64 SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description System.Object Methods Add(Int64) Declaration public bool Add(long index) Parameters Type Name Description System.Int64 index Returns Type Description System.Boolean And(BitString) Declaration public BitString And(BitString other) Parameters Type Name Description BitString other Returns Type Description BitString Clone() Declaration public object Clone() Returns Type Description System.Object CountCommonBits(BitString) Declaration public int CountCommonBits(BitString other) Parameters Type Name Description BitString other Returns Type Description System.Int32 CountSet() Declaration public int CountSet() Returns Type Description System.Int32 Get(Int64) Declaration public bool Get(long index) Parameters Type Name Description System.Int64 index Returns Type Description System.Boolean GetCommonIndices(BitString) Declaration public List<int> GetCommonIndices(BitString other) Parameters Type Name Description BitString other Returns Type Description List < System.Int32 > GetCore(Int64) Declaration public bool GetCore(long index) Parameters Type Name Description System.Int64 index Returns Type Description System.Boolean GetFirstSetBitIndex() Declaration public int GetFirstSetBitIndex() Returns Type Description System.Int32 GetLastCommonBitIndex(BitString) Declaration public int GetLastCommonBitIndex(BitString other) Parameters Type Name Description BitString other Returns Type Description System.Int32 GetLastSetBitIndex() Declaration public int GetLastSetBitIndex() Returns Type Description System.Int32 GetSetIndeces() Declaration public List<int> GetSetIndeces() Returns Type Description List < System.Int32 > GetSetIndecesCount() Declaration public int GetSetIndecesCount() Returns Type Description System.Int32 GetSetUInt64Indices() Declaration public List<ulong> GetSetUInt64Indices() Returns Type Description List < System.UInt64 > HaveCommonBits(BitString) Declaration public bool HaveCommonBits(BitString other) Parameters Type Name Description BitString other Returns Type Description System.Boolean Init() A way to trigger static constructor. Declaration public static void Init() Not() Declaration public BitString Not() Returns Type Description BitString Or(BitString) Declaration public BitString Or(BitString value) Parameters Type Name Description BitString value Returns Type Description BitString Reset(Int64) Declaration public void Reset(long index) Parameters Type Name Description System.Int64 index ResetCore(Int64) Declaration public void ResetCore(long index) Parameters Type Name Description System.Int64 index Set(Int64) Declaration public void Set(long index) Parameters Type Name Description System.Int64 index Set(Int64, Boolean) Declaration public void Set(long index, bool value) Parameters Type Name Description System.Int64 index System.Boolean value SetAll(Boolean) Declaration public void SetAll(bool value) Parameters Type Name Description System.Boolean value SetCore(Int64) Declaration public void SetCore(long index) Parameters Type Name Description System.Int64 index Xor(BitString) Declaration public BitString Xor(BitString value) Parameters Type Name Description BitString value Returns Type Description BitString"
  },
  "api/Platform.Data.ConsoleTerminal.Program.html": {
    "href": "api/Platform.Data.ConsoleTerminal.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.ConsoleTerminal Assembly : cs.temp.dll.dll Syntax public class Program Methods Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Communication.Protocol.Udp.UdpSender.html": {
    "href": "api/Platform.Communication.Protocol.Udp.UdpSender.html",
    "title": "Class UdpSender | LinksPlatform",
    "keywords": "Class UdpSender Представляет отправителя сообщений по протоколу UDP. Inheritance System.Object UdpSender Namespace : Platform.Communication.Protocol.Udp Assembly : cs.temp.dll.dll Syntax public class UdpSender : DisposableBase Constructors UdpSender(IPAddress, Int32) Declaration public UdpSender(IPAddress address, int port) Parameters Type Name Description IPAddress address System.Int32 port UdpSender(IPEndPoint) Declaration public UdpSender(IPEndPoint ipendpoint) Parameters Type Name Description IPEndPoint ipendpoint UdpSender(Int32) Declaration public UdpSender(int port) Parameters Type Name Description System.Int32 port UdpSender(String, Int32) Declaration public UdpSender(string hostname, int port) Parameters Type Name Description System.String hostname System.Int32 port Methods DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Send(String) Declaration public int Send(string message) Parameters Type Name Description System.String message Returns Type Description System.Int32"
  },
  "api/Platform.Communication.Protocol.Udp.UdpClientExtensions.html": {
    "href": "api/Platform.Communication.Protocol.Udp.UdpClientExtensions.html",
    "title": "Class UdpClientExtensions | LinksPlatform",
    "keywords": "Class UdpClientExtensions Inheritance System.Object UdpClientExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Communication.Protocol.Udp Assembly : cs.temp.dll.dll Syntax public static class UdpClientExtensions Methods ReceiveString(UdpClient) Declaration public static string ReceiveString(this UdpClient udp) Parameters Type Name Description UdpClient udp Returns Type Description System.String SendString(UdpClient, IPEndPoint, String) Declaration public static int SendString(this UdpClient udp, IPEndPoint ipEndPoint, string message) Parameters Type Name Description UdpClient udp IPEndPoint ipEndPoint System.String message Returns Type Description System.Int32"
  },
  "api/Platform.Communication.Protocol.Gexf.html": {
    "href": "api/Platform.Communication.Protocol.Gexf.html",
    "title": "Namespace Platform.Communication.Protocol.Gexf | LinksPlatform",
    "keywords": "Namespace Platform.Communication.Protocol.Gexf Classes Edge Gexf Graph Node Enums GraphDefaultEdgeType GraphMode"
  },
  "api/Platform.Communication.Protocol.Gexf.Node.html": {
    "href": "api/Platform.Communication.Protocol.Gexf.Node.html",
    "title": "Class Node | LinksPlatform",
    "keywords": "Class Node Inheritance System.Object Node Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Communication.Protocol.Gexf Assembly : cs.temp.dll.dll Syntax public class Node Fields ElementName Declaration public const string ElementName = \"node\" Field Value Type Description System.String IdAttributeName Declaration public const string IdAttributeName = \"id\" Field Value Type Description System.String LabelAttributeName Declaration public const string LabelAttributeName = \"label\" Field Value Type Description System.String Properties Id Declaration public long Id { get; set; } Property Value Type Description System.Int64 Label Declaration public string Label { get; set; } Property Value Type Description System.String Methods WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer WriteXml(XmlWriter, Int64, String) Declaration public static void WriteXml(XmlWriter writer, long id, string label) Parameters Type Name Description XmlWriter writer System.Int64 id System.String label"
  },
  "api/Platform.Sandbox.Base.html": {
    "href": "api/Platform.Sandbox.Base.html",
    "title": "Class Base | LinksPlatform",
    "keywords": "Class Base Inheritance System.Object StaticBase < Base > Base Inherited Inherited Members StaticBase<Base>.Instance System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Base : StaticBase<Base> Constructors Base() Declaration public Base() Methods MethodA() Declaration public void MethodA()"
  },
  "api/Platform.Sandbox.A.html": {
    "href": "api/Platform.Sandbox.A.html",
    "title": "Class A | LinksPlatform",
    "keywords": "Class A Inheritance System.Object A Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class A Methods Method1() Declaration public static void Method1() Method2() Declaration public static void Method2()"
  },
  "api/Platform.Helpers.Unsafe.MemoryHelpers.html": {
    "href": "api/Platform.Helpers.Unsafe.MemoryHelpers.html",
    "title": "Class MemoryHelpers | LinksPlatform",
    "keywords": "Class MemoryHelpers Inheritance System.Object MemoryHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Unsafe Assembly : cs.temp.dll.dll Syntax public class MemoryHelpers Methods ZeroMemory(Void*, Int64) Declaration public static void ZeroMemory(void *pointer, long capacity) Parameters Type Name Description System.Void * pointer System.Int64 capacity Remarks TODO: Test is it a correct algorithm. TODO: Check if there is high-performance multi-thread version of algorithm. Possible ideas: use SIMD, ask .NET Core team to include option/flag to AllocHGlobal and ReAllocHGlobal for zeroing of memory."
  },
  "api/Platform.Helpers.Unsafe.IntPtrHelpers-1.html": {
    "href": "api/Platform.Helpers.Unsafe.IntPtrHelpers-1.html",
    "title": "Class IntPtrHelpers<T> | LinksPlatform",
    "keywords": "Class IntPtrHelpers<T> Inheritance System.Object IntPtrHelpers<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Unsafe Assembly : cs.temp.dll.dll Syntax public static class IntPtrHelpers<T> Type Parameters Name Description T Fields GetValue Declaration public static readonly Func<IntPtr, T> GetValue Field Value Type Description Func < IntPtr , T> SetValue Declaration public static readonly Action<IntPtr, T> SetValue Field Value Type Description Action < IntPtr , T>"
  },
  "api/Platform.Helpers.Unsafe.IntPtrExtensions.html": {
    "href": "api/Platform.Helpers.Unsafe.IntPtrExtensions.html",
    "title": "Class IntPtrExtensions | LinksPlatform",
    "keywords": "Class IntPtrExtensions Inheritance System.Object IntPtrExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Unsafe Assembly : cs.temp.dll.dll Syntax public static class IntPtrExtensions Methods GetElement(IntPtr, Int32, Int32) Declaration public static IntPtr GetElement(this IntPtr pointer, int elementSize, int index) Parameters Type Name Description IntPtr pointer System.Int32 elementSize System.Int32 index Returns Type Description IntPtr GetElement(IntPtr, Int64, Int64) Declaration public static IntPtr GetElement(this IntPtr pointer, long elementSize, long index) Parameters Type Name Description IntPtr pointer System.Int64 elementSize System.Int64 index Returns Type Description IntPtr GetElement<TIndex>(IntPtr, Int32, TIndex) Declaration public static IntPtr GetElement<TIndex>(this IntPtr pointer, int elementSize, TIndex index) Parameters Type Name Description IntPtr pointer System.Int32 elementSize TIndex index Returns Type Description IntPtr Type Parameters Name Description TIndex GetValue<TElement>(IntPtr) Declaration public static TElement GetValue<TElement>(this IntPtr pointer) Parameters Type Name Description IntPtr pointer Returns Type Description TElement Type Parameters Name Description TElement SetValue<TElement>(IntPtr, TElement) Declaration public static void SetValue<TElement>(this IntPtr pointer, TElement value) Parameters Type Name Description IntPtr pointer TElement value Type Parameters Name Description TElement"
  },
  "api/Platform.Helpers.To.html": {
    "href": "api/Platform.Helpers.To.html",
    "title": "Class To | LinksPlatform",
    "keywords": "Class To Inheritance System.Object To Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public static class To Remarks Shorter version of ConvertationHelpers. Укороченная версия от ConvertationHelpers. Возможно нужно несколько разных способов разрешения конфликта. ExceptionConflictReation (выбрасывает исключение, если обнаружен конфликт, не предпринимая никаких действий) Max: Max (если число больше его максимального размера в этом размере, то берём максимальное) Max: 0 (если число больше его максимального размера в этом размере, то берём обнуляем) и т.п. (например определённые пользователем) Текущая логика алгоритма \"Closest\" Fields UnknownCharacter Declaration public const char UnknownCharacter = '�' Field Value Type Description System.Char Methods Boolean(UInt64) Declaration public static bool Boolean(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Boolean Byte(UInt64) Declaration public static byte Byte(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Byte Bytes<T>(T) Declaration public static byte[] Bytes<T>(T obj) where T : struct Parameters Type Name Description T obj Returns Type Description System.Byte [] Type Parameters Name Description T Char(UInt64) Declaration public static char Char(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Char DateTime(UInt64) Declaration public static DateTime DateTime(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description DateTime Int16(UInt64) Declaration public static short Int16(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Int16 Int32(UInt64) Declaration public static int Int32(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Int32 Int64(UInt64) Declaration public static long Int64(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Int64 SByte(UInt64) Declaration public static sbyte SByte(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.SByte Structure<T>(Byte[]) Declaration public static T Structure<T>(byte[] bytes) where T : struct Parameters Type Name Description System.Byte [] bytes Returns Type Description T Type Parameters Name Description T TimeSpan(UInt64) Declaration public static TimeSpan TimeSpan(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description TimeSpan ToSigned(Byte) Declaration public static sbyte ToSigned(byte value) Parameters Type Name Description System.Byte value Returns Type Description System.SByte ToSigned(UInt16) Declaration public static short ToSigned(ushort value) Parameters Type Name Description System.UInt16 value Returns Type Description System.Int16 ToSigned(UInt32) Declaration public static int ToSigned(uint value) Parameters Type Name Description System.UInt32 value Returns Type Description System.Int32 ToSigned(UInt64) Declaration public static long ToSigned(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Int64 ToSigned<T>(T) Declaration public static object ToSigned<T>(T value) Parameters Type Name Description T value Returns Type Description System.Object Type Parameters Name Description T ToUnsigned(Int16) Declaration public static ushort ToUnsigned(short value) Parameters Type Name Description System.Int16 value Returns Type Description System.UInt16 ToUnsigned(Int32) Declaration public static uint ToUnsigned(int value) Parameters Type Name Description System.Int32 value Returns Type Description System.UInt32 ToUnsigned(Int64) Declaration public static ulong ToUnsigned(long value) Parameters Type Name Description System.Int64 value Returns Type Description System.UInt64 ToUnsigned(SByte) Declaration public static byte ToUnsigned(sbyte value) Parameters Type Name Description System.SByte value Returns Type Description System.Byte ToUnsigned<T>(T) Declaration public static object ToUnsigned<T>(T value) Parameters Type Name Description T value Returns Type Description System.Object Type Parameters Name Description T ToUnsignedAs<T>(Object) Declaration public static T ToUnsignedAs<T>(object value) Parameters Type Name Description System.Object value Returns Type Description T Type Parameters Name Description T UInt16(UInt64) Declaration public static ushort UInt16(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.UInt16 UInt32(UInt64) Declaration public static uint UInt32(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.UInt32 UInt64(Boolean) Declaration public static ulong UInt64(bool value) Parameters Type Name Description System.Boolean value Returns Type Description System.UInt64 UInt64(Char) Declaration public static ulong UInt64(char value) Parameters Type Name Description System.Char value Returns Type Description System.UInt64 UInt64(Int16) Declaration public static ulong UInt64(short value) Parameters Type Name Description System.Int16 value Returns Type Description System.UInt64 UInt64(Int32) Declaration public static ulong UInt64(int value) Parameters Type Name Description System.Int32 value Returns Type Description System.UInt64 UInt64(Int64) Declaration public static ulong UInt64(long value) Parameters Type Name Description System.Int64 value Returns Type Description System.UInt64 UInt64(SByte) Declaration public static ulong UInt64(sbyte value) Parameters Type Name Description System.SByte value Returns Type Description System.UInt64 UInt64(UInt64) Declaration public static ulong UInt64(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.UInt64"
  },
  "api/Platform.Helpers.Threading.html": {
    "href": "api/Platform.Helpers.Threading.html",
    "title": "Namespace Platform.Helpers.Threading | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Threading Classes SafeSynchronization TODO: Сравнить что производительнее использовать анонимную функцию или using (создание объекта + dispose) SynchronizationExtensions TaskExtensions ThreadHelpers UnsafeSynchronization Interfaces ISynchronization ISynchronized<TInterface> Represents extendable sychronized interface access gate."
  },
  "api/Platform.Helpers.Threading.UnsafeSynchronization.html": {
    "href": "api/Platform.Helpers.Threading.UnsafeSynchronization.html",
    "title": "Class UnsafeSynchronization | LinksPlatform",
    "keywords": "Class UnsafeSynchronization Inheritance System.Object UnsafeSynchronization Implements ISynchronization Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Threading Assembly : cs.temp.dll.dll Syntax public class UnsafeSynchronization : ISynchronization Methods ExecuteReadOperation(Action) Declaration public void ExecuteReadOperation(Action action) Parameters Type Name Description Action action ExecuteReadOperation<T>(Func<T>) Declaration public T ExecuteReadOperation<T>(Func<T> func) Parameters Type Name Description Func <T> func Returns Type Description T Type Parameters Name Description T ExecuteWriteOperation(Action) Declaration public void ExecuteWriteOperation(Action action) Parameters Type Name Description Action action ExecuteWriteOperation<T>(Func<T>) Declaration public T ExecuteWriteOperation<T>(Func<T> func) Parameters Type Name Description Func <T> func Returns Type Description T Type Parameters Name Description T Implements ISynchronization"
  },
  "api/Platform.Helpers.Threading.ThreadHelpers.html": {
    "href": "api/Platform.Helpers.Threading.ThreadHelpers.html",
    "title": "Class ThreadHelpers | LinksPlatform",
    "keywords": "Class ThreadHelpers Inheritance System.Object ThreadHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Threading Assembly : cs.temp.dll.dll Syntax public static class ThreadHelpers Methods Sleep() Declaration public static void Sleep() StartNew(Action) Declaration public static Thread StartNew(Action action) Parameters Type Name Description Action action Returns Type Description Thread StartNew<T>(T, Action<Object>) Declaration public static Thread StartNew<T>(T param, Action<object> action) Parameters Type Name Description T param Action < System.Object > action Returns Type Description Thread Type Parameters Name Description T SyncInvokeWithExtendedStack(Action, Int32) Declaration public static void SyncInvokeWithExtendedStack(Action action, int maxStackSize = 209715200) Parameters Type Name Description Action action System.Int32 maxStackSize SyncInvokeWithExtendedStack<T>(T, Action<Object>, Int32) Declaration public static void SyncInvokeWithExtendedStack<T>(T param, Action<object> action, int maxStackSize = 209715200) Parameters Type Name Description T param Action < System.Object > action System.Int32 maxStackSize Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Threading.TaskExtensions.html": {
    "href": "api/Platform.Helpers.Threading.TaskExtensions.html",
    "title": "Class TaskExtensions | LinksPlatform",
    "keywords": "Class TaskExtensions Inheritance System.Object TaskExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Threading Assembly : cs.temp.dll.dll Syntax public static class TaskExtensions Methods AwaitResult<T>(Task<T>) Declaration public static T AwaitResult<T>(this Task<T> task) Parameters Type Name Description Task <T> task Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Threading.SynchronizationExtensions.html": {
    "href": "api/Platform.Helpers.Threading.SynchronizationExtensions.html",
    "title": "Class SynchronizationExtensions | LinksPlatform",
    "keywords": "Class SynchronizationExtensions Inheritance System.Object SynchronizationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Threading Assembly : cs.temp.dll.dll Syntax public static class SynchronizationExtensions Remarks TODO: Избавиться от анонимных функций передаваемых в ExecuteReadOperation и ExecureWriteOperation Methods ExecuteReadOperation<TParam>(ISynchronization, TParam, Action<TParam>) Declaration public static void ExecuteReadOperation<TParam>(this ISynchronization synchronization, TParam parameter, Action<TParam> action) Parameters Type Name Description ISynchronization synchronization TParam parameter Action <TParam> action Type Parameters Name Description TParam ExecuteReadOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) Declaration public static void ExecuteReadOperation<TParam1, TParam2>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, Action<TParam1, TParam2> action) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 Action <TParam1, TParam2> action Type Parameters Name Description TParam1 TParam2 ExecuteReadOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) Declaration public static TResult ExecuteReadOperation<TResult, TParam>(this ISynchronization synchronization, TParam parameter, Func<TParam, TResult> function) Parameters Type Name Description ISynchronization synchronization TParam parameter Func <TParam, TResult> function Returns Type Description TResult Type Parameters Name Description TResult TParam ExecuteReadOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) Declaration public static void ExecuteReadOperation<TParam1, TParam2, TParam3>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, Action<TParam1, TParam2, TParam3> action) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 TParam3 parameter3 Action <TParam1, TParam2, TParam3> action Type Parameters Name Description TParam1 TParam2 TParam3 ExecuteReadOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) Declaration public static TResult ExecuteReadOperation<TResult, TParam1, TParam2>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, Func<TParam1, TParam2, TResult> function) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 Func <TParam1, TParam2, TResult> function Returns Type Description TResult Type Parameters Name Description TResult TParam1 TParam2 ExecuteReadOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>) Declaration public static void ExecuteReadOperation<TParam1, TParam2, TParam3, TParam4>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, TParam4 parameter4, Action<TParam1, TParam2, TParam3, TParam4> action) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 TParam3 parameter3 TParam4 parameter4 Action <TParam1, TParam2, TParam3, TParam4> action Type Parameters Name Description TParam1 TParam2 TParam3 TParam4 ExecuteReadOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) Declaration public static TResult ExecuteReadOperation<TResult, TParam1, TParam2, TParam3>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, Func<TParam1, TParam2, TParam3, TResult> function) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 TParam3 parameter3 Func <TParam1, TParam2, TParam3, TResult> function Returns Type Description TResult Type Parameters Name Description TResult TParam1 TParam2 TParam3 ExecuteReadOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) Declaration public static TResult ExecuteReadOperation<TResult, TParam1, TParam2, TParam3, TParam4>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, TParam4 parameter4, Func<TParam1, TParam2, TParam3, TParam4, TResult> function) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 TParam3 parameter3 TParam4 parameter4 Func <TParam1, TParam2, TParam3, TParam4, TResult> function Returns Type Description TResult Type Parameters Name Description TResult TParam1 TParam2 TParam3 TParam4 ExecuteWriteOperation<TParam>(ISynchronization, TParam, Action<TParam>) Declaration public static void ExecuteWriteOperation<TParam>(this ISynchronization synchronization, TParam parameter, Action<TParam> action) Parameters Type Name Description ISynchronization synchronization TParam parameter Action <TParam> action Type Parameters Name Description TParam ExecuteWriteOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) Declaration public static void ExecuteWriteOperation<TParam1, TParam2>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, Action<TParam1, TParam2> action) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 Action <TParam1, TParam2> action Type Parameters Name Description TParam1 TParam2 ExecuteWriteOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) Declaration public static TResult ExecuteWriteOperation<TResult, TParam>(this ISynchronization synchronization, TParam parameter, Func<TParam, TResult> function) Parameters Type Name Description ISynchronization synchronization TParam parameter Func <TParam, TResult> function Returns Type Description TResult Type Parameters Name Description TResult TParam ExecuteWriteOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) Declaration public static void ExecuteWriteOperation<TParam1, TParam2, TParam3>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, Action<TParam1, TParam2, TParam3> action) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 TParam3 parameter3 Action <TParam1, TParam2, TParam3> action Type Parameters Name Description TParam1 TParam2 TParam3 ExecuteWriteOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) Declaration public static TResult ExecuteWriteOperation<TResult, TParam1, TParam2>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, Func<TParam1, TParam2, TResult> function) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 Func <TParam1, TParam2, TResult> function Returns Type Description TResult Type Parameters Name Description TResult TParam1 TParam2 ExecuteWriteOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>) Declaration public static void ExecuteWriteOperation<TParam1, TParam2, TParam3, TParam4>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, TParam4 parameter4, Action<TParam1, TParam2, TParam3, TParam4> action) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 TParam3 parameter3 TParam4 parameter4 Action <TParam1, TParam2, TParam3, TParam4> action Type Parameters Name Description TParam1 TParam2 TParam3 TParam4 ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) Declaration public static TResult ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, Func<TParam1, TParam2, TParam3, TResult> function) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 TParam3 parameter3 Func <TParam1, TParam2, TParam3, TResult> function Returns Type Description TResult Type Parameters Name Description TResult TParam1 TParam2 TParam3 ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) Declaration public static TResult ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3, TParam4>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, TParam4 parameter4, Func<TParam1, TParam2, TParam3, TParam4, TResult> function) Parameters Type Name Description ISynchronization synchronization TParam1 parameter1 TParam2 parameter2 TParam3 parameter3 TParam4 parameter4 Func <TParam1, TParam2, TParam3, TParam4, TResult> function Returns Type Description TResult Type Parameters Name Description TResult TParam1 TParam2 TParam3 TParam4"
  },
  "api/Platform.Helpers.Threading.SafeSynchronization.html": {
    "href": "api/Platform.Helpers.Threading.SafeSynchronization.html",
    "title": "Class SafeSynchronization | LinksPlatform",
    "keywords": "Class SafeSynchronization TODO: Сравнить что производительнее использовать анонимную функцию или using (создание объекта + dispose) Inheritance System.Object SafeSynchronization Implements ISynchronization Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Threading Assembly : cs.temp.dll.dll Syntax public class SafeSynchronization : ISynchronization Methods ExecuteReadOperation(Action) Declaration public void ExecuteReadOperation(Action action) Parameters Type Name Description Action action ExecuteReadOperation<T>(Func<T>) Declaration public T ExecuteReadOperation<T>(Func<T> func) Parameters Type Name Description Func <T> func Returns Type Description T Type Parameters Name Description T ExecuteWriteOperation(Action) Declaration public void ExecuteWriteOperation(Action action) Parameters Type Name Description Action action ExecuteWriteOperation<T>(Func<T>) Declaration public T ExecuteWriteOperation<T>(Func<T> func) Parameters Type Name Description Func <T> func Returns Type Description T Type Parameters Name Description T Implements ISynchronization"
  },
  "api/Platform.Helpers.Threading.ISynchronized-1.html": {
    "href": "api/Platform.Helpers.Threading.ISynchronized-1.html",
    "title": "Interface ISynchronized<TInterface> | LinksPlatform",
    "keywords": "Interface ISynchronized<TInterface> Represents extendable sychronized interface access gate. Namespace : Platform.Helpers.Threading Assembly : cs.temp.dll.dll Syntax public interface ISynchronized<TInterface> Type Parameters Name Description TInterface Sychronized interface. Properties Sync Get wrapped/decorated version of TInterface, that does garantee thread safe access synchronization. Возвращает обернутую/декорированную версию TInterface, которая гарантирует потокобезопасную синхронизацию доступа. Declaration TInterface Sync { get; } Property Value Type Description TInterface Remarks It is safe to use it directly, because it must be thread safe implementation. Безопасно использовать напрямую, так как реализация должна быть потокобезопасной. SyncRoot Gets sychronization method. Возвращает способ синхронизации. Declaration ISynchronization SyncRoot { get; } Property Value Type Description ISynchronization Unsync Get source version of TInterface, that does not garantee thread safe access synchronization. Возвращает исходную версию TInterface, которая не гарантирует потокобезопасную синхронизацию доступа. Declaration TInterface Unsync { get; } Property Value Type Description TInterface Remarks It is unsafe to use it directly, unless compound context using SyncRoot is created. Использовать напрямую небезопасно, за исключением ситуации когда создаётся составной контекст с использованием SyncRoot."
  },
  "api/Platform.Helpers.Threading.ISynchronization.html": {
    "href": "api/Platform.Helpers.Threading.ISynchronization.html",
    "title": "Interface ISynchronization | LinksPlatform",
    "keywords": "Interface ISynchronization Namespace : Platform.Helpers.Threading Assembly : cs.temp.dll.dll Syntax public interface ISynchronization Methods ExecuteReadOperation(Action) Declaration void ExecuteReadOperation(Action action) Parameters Type Name Description Action action ExecuteReadOperation<T>(Func<T>) Declaration T ExecuteReadOperation<T>(Func<T> func) Parameters Type Name Description Func <T> func Returns Type Description T Type Parameters Name Description T ExecuteWriteOperation(Action) Declaration void ExecuteWriteOperation(Action action) Parameters Type Name Description Action action ExecuteWriteOperation<T>(Func<T>) Declaration T ExecuteWriteOperation<T>(Func<T> func) Parameters Type Name Description Func <T> func Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Singleton.html": {
    "href": "api/Platform.Helpers.Singleton.html",
    "title": "Class Singleton | LinksPlatform",
    "keywords": "Class Singleton Inheritance System.Object Singleton Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public static class Singleton Methods Create<T>(Func<T>) Declaration public static Singleton<T> Create<T>(Func<T> creator) Parameters Type Name Description Func <T> creator Returns Type Description Singleton <T> Type Parameters Name Description T Create<T>(IFactory<T>) Declaration public static Singleton<T> Create<T>(IFactory<T> factory) Parameters Type Name Description IFactory <T> factory Returns Type Description Singleton <T> Type Parameters Name Description T Get<T>(Func<T>) Declaration public static T Get<T>(Func<T> creator) Parameters Type Name Description Func <T> creator Returns Type Description T Type Parameters Name Description T Get<T>(IFactory<T>) Declaration public static T Get<T>(IFactory<T> factory) Parameters Type Name Description IFactory <T> factory Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Helpers.Singleton-1.html": {
    "href": "api/Platform.Helpers.Singleton-1.html",
    "title": "Struct Singleton<T> | LinksPlatform",
    "keywords": "Struct Singleton<T> Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers Assembly : cs.temp.dll.dll Syntax public struct Singleton<T> Type Parameters Name Description T Constructors Singleton(Func<T>) Declaration public Singleton(Func<T> creator) Parameters Type Name Description Func <T> creator Properties Instance Declaration public T Instance { get; } Property Value Type Description T"
  },
  "api/Platform.Helpers.Collections.StringExtensions.html": {
    "href": "api/Platform.Helpers.Collections.StringExtensions.html",
    "title": "Class StringExtensions | LinksPlatform",
    "keywords": "Class StringExtensions Inheritance System.Object StringExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Helpers.Collections Assembly : cs.temp.dll.dll Syntax public static class StringExtensions Methods CapitalizeFirstLetter(String) Declaration public static string CapitalizeFirstLetter(this string str) Parameters Type Name Description System.String str Returns Type Description System.String Truncate(String, Int32) Declaration public static string Truncate(this string str, int maxLength) Parameters Type Name Description System.String str System.Int32 maxLength Returns Type Description System.String"
  },
  "api/Platform.Helpers.Collections.Stacks.html": {
    "href": "api/Platform.Helpers.Collections.Stacks.html",
    "title": "Namespace Platform.Helpers.Collections.Stacks | LinksPlatform",
    "keywords": "Namespace Platform.Helpers.Collections.Stacks Classes DefaultStack<TElement> StackExtensions Interfaces IStack<TElement> IStackFactory<TElement>"
  }
}