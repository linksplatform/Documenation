{
  "doc/articles/links-theory.html": {
    "href": "doc/articles/links-theory.html",
    "title": "Черновик Теории Связей | LinksPlatform",
    "keywords": "Черновик Теории Связей Вступление Середина XX века связана с появлением единой теории универсальных вычислительных машин, называемых сегодня \"Машинами Тьюринга\". Название это сегодня в начале XXI века стало нарицательным и является синонимом любого вычислительно устройства в связи с широким признанием этой теории обществом. Именно эта технология вдохновила технических специалистов по всему миру на активное развитие вычислительной техники. Именно Аланом Тьюрингом в то же время был поставлен вопрос о том, может ли мыслить машина и о том, а не является ли человек машиной. Всё это привело к началу активного исследования вопроса о возможности создания искусственного интеллекта (ИИ), неотличимого от интеллекта человеческого. И хотя сравнение таких комплексных систем возможно лишь в ограниченной степени, и часто происходит лишь на узком круге задач, таких как ведение беседы между двумя интеллектами или ведение игры и т.п., всё же успехи в этой области есть и с каждым годом их количество увеличивается, а качество повышается. Всё это шаг за шагом ведёт к тому, что мы лучше понимаем себя, узнаём новые возможности и ограничения интеллекта человеческого, и перенося полученные знания в теорию вычислительных машин с каждым разом всё глубже проникаем в суть того как эти внешние эффекты, возможности, ограничения можно воспроизвести в рукотворном интеллекте, как именно это всё может быть устроено изнутри, и всё это шаг за шагом приближает нас к созданию новых технических систем, которые улучшая старые образцы всё ближе подходя к тому, что можно назвать интеллектуальным, разумным, умным, однажды и завершится той самой точкой сингулярности, когда будет создана такая мыслящая система, которая сможет улучшать и развивать сама себя и сможет решать любую задачу, которую поставит ей человек, в том числе и создание автономного искусственного интеллекта со своей волей, т.е. самостоятельно определяющего свои цели - так называемый интеллект сильного типа. У \"искусственного интеллекта сильного типа\" могут быть и эмоции, что с одной стороны позволило бы лучше ему понимать нас, людей, как мы воспринимая эмоции друг друга лучше понимаем друг друга, с другой стороны позволило бы и нам ещё глубже понимать себя самих и то как мы устроены. Но ИИ сильного типа не обязательно создавать напрямую, его может однажды создать ИИ слабого типа, который сам и не будет обладать своей волей, но если ИИ слабого типа будет создан, то цель ему может быть поставлена человеком. Поэтому можно сказать, что ИИ слабого типа будет достаточно, чтобы привести к существованию рано или поздно ИИ любого типа, любой сложности, с любой мощностью и с любым набором \"встроенных\" характеристик. Важно так же осознавать что есть различные риски для общества в связи с развитием подобных технологий. Так же как и у других результатов технологического прогресса всё будет определено тем, кто и как будет применять эти результаты. Для того же кто последует путём разработки следует дать рекомендацию, что вероятнее всего ИИ сильного типа будет необходимо содержать в изоляции от общества и окружающей среды, постепенно и под контролем снимая ограничения. Такой контроль и осуществление ограничений установленных человеком сможет осуществлять ИИ слабого типа, человек же успеть среагировать скорее всего уже не сможет. Это похоже на то, как контроль осуществляется родителями над ребёнком в семье и на то как контроль осуществляется законом в обществе над каждым его гражданином. Авторов этой теории интересовал в первую очередь вопрос понимания того что такое интеллект, из чего он состоит и следовательно без чего он не может существовать. Так же как машина Тьюринга не может быть вычислителем без наличия ленты с нулями и единицами, так же и интеллект не может существовать без памяти. С одной стороны можно поставить равенство между \"лентой машины Тьюринга\" и \"памятью\" любого интеллекта. Тогда в сущности получится, что интеллект есть ни что иное как вычислительная машина. Тогда уже сегодня существует множество \"искусственных интеллектов\", получается ли тогда что и \"точки сингулярности\" мы уже достигли? Пожалуй нет. Может ли сегодня любая вычислительная машина самостоятельно, без программиста адаптировать себя под окружающую среду, определить или вспомнить свою цель, сравнить окружение с целевым образом, и если различия всё ещё присутствуют продолжить их устранять? Пусть и не любая, тогда существует ли хотя бы одна такая машина сегодня? Иначе этот критерий можно сформулировать так: Существует ли машина заранее не запрограммированная на решение задачи, которая если ей такое описание задачи предоставить, смогла бы за приемлемое время составить, найти, или иными способами сгенерировать алгоритм или последовательность действий, решающих эту задачу так, чтобы это удовлетворило бы постановщика задачи? Такой критерий может соответствовать \"искусственному интеллекту слабого типа\". Для \"ИИ сильного типа\" этот критерий можно усложнить тем, что помимо решения любых решаемых задач (см. проблему остановки Машины Тьюринга) такая машина в качестве одной из задач, постоянно решаемых, должна будет включать задачу поддержания своей \"жизни\", т.е. сохранять свою интеллектуальную функцию автономно, т.е. самостоятельно, независимо от человека, а помимо этого такая машина должна самостоятельно для себя решать, какие цели или задачи она будет решать \"дополнительно\". Причём подобная постановка критерия приведёт к тому, что \"ИИ сильного типа\" будет подвержен \"естественному отбору\" так же как и любое живое существо биологического типа, в основе которого ДНК-программа. Вероятно и для \"ИИ сильного типа\" потребуется подобрать \"ДНК-программу\", определяющую его \"тело\" и \"разум\", в который должна быть встроена \"программа заботы о теле\" или \"программа саморепликации\". Если первая \"минимальная программа\" спровоцирует создание \"вечно живущего\" разума, то вторая спровоцирует создание целой популяции разумов \"размножающихся делением\". Такую \"минимальную\" программу для \"ИИ сильного типа\" мог бы аналитически вывести или генетически подобрать (вырастить), а так же протестировать в ограниченной среде или в реальной среде но с ограничениями уже \"ИИ слабого типа\". Тестирование какого либо \"ИИ\" не вводя ограничений может привести к непредсказуемым последствиям. С того момента, когда найдётся тот, кто все ограничения снимет мы однозначно перейдём в эпоху, момент перехода в которую и называют \"точкой сингулярности\". Есть риски действия, есть риски и бездействия. Уже сегодня многие крупные корпорации начали гонку за лучший \"сервис\" и тем или иным способом внедряют элементы \"интеллектуальных\" систем, контроль за которыми сегодня осуществляют программисты. Возможно и государства занимаются чем-то подобным. Суть в том, что вычислительные машины уже сегодня есть у всех, и если кто-то однажды угадает тот заветный \"минимальный алгоритм\" \"точка сингулярности\" сама по себе наступит непредсказуемо быстро. Если у нас не будет систем быстрого реагирования и защиты от высокоинтеллектуальных систем, мы рискуем за кратчайший срок получить либо значительный ущерб, либо потерять контроль над неопределённой заранее по размерам части доступных нам вычислительных ресурсов, что как и первое может привести всё к тем же непредсказуемым последствиям. Чем-то контролирующая система похожа на антивирус, а вот \"объект исследований\" \"ИИ сильного типа\" на вирус. И то и другое действует в некоторой степени автономно, \"контролирующая\" система собственной волей не обладает, \"исследуемая\" система тоже своей волей обычно не обладает, однако самостоятельно поддерживает свою жизнедеятельность. Иными словами \"ИИ слабого типа\" чем-то похож по внешним признакам на сегодняшние антивирусы, а \"ИИ сильного типа\", развивающийся путём \"размножения делением\", а так же путём самомодификации будет иметь много общего с вирусами сегодняшнего дня. Все эти общее признаки в сегодняшнем объёме знаний человечества одному человеку увидеть и понять может быть затруднительно. Но всё же технология требует глубокого понимания, чтобы осознать её мощь и возможности, а так же зная её \"слабые места\" возыметь силу её обуздать. Ведь даже сегодня антивирусы способны бороться с тем, что уже однажды нанесло ущерб, а что если бы антивирус мог бы самостоятельно выработать защиту от заранее неизвестной угрозы, которая начала наносить вред или только готовится его нанести? Ведь это могло бы предотвратить больше ущерба, и в свою очередь в будущем не позволило бы и различным \"ИИ сильного типа\" воспользоваться слабыми местами сегодняшних вычислительных систем? Что если бы вместо программистов уязвимости, пусть даже какую-то её часть устраняли бы автоматизированные роботы-программисты? Это позволило бы быстрее реагировать на угрозы. Уже сегодня чувствуется необходимость в системах реагирующих быстрее человека, однако обладающих гибкостью подобной человеческой. Мы утопаем в море информации на разных языках, которая всё ещё медленно переводится и увеличивается то время, которое проходит до качественного использования этой информации каждым человеком на планете. Уникальные идеи сложно находить. А работы по актуальным времени задачам многократно дублируются на разных языках независимо друг от друга, что негативно сказывается на темпах развития человечества в целом, замедляя эти самые темпы. До сих пор статьи в Википедии не синхронизированы и не приведены к единому виду с переводами на все языки, что заставляет читателя сравнивать статьи с одним и тем же по смыслу корнем, названием между языками. Опыт различных культур всё ещё ограничено доступен носителям других культур и языков. Тем временем расслоение наблюдается и в языках программирования и разделяется следовательно и сообщество людей, одни и те же задачи решаются по разному на разных языках программирования, и одно единое решение не вырабатывается или вырабатывается но очень медленно. Видится огромный пласт задач и проблем на решение которых не мешало бы направить искусственный интеллект, освободить тем самым руки и внимание людей уже под задачи более высокого уровня. Да всё это сегодня развивается в среде, которую нам предоставила физическая реализация \"Машины Тьюринга\" в сегодняшних компьютерах. Но это требует особой категории людей - программистов для развития. А так как таких людей не хватает, сегодняшние корпорации вынуждены закрывать код, придумывать способы продать эту закрытую технологию и обеспечить тем самым доходом программистов. Да и программисты здесь неизбежный на данном этапе элемент. Их ещё никто не автоматизировал, и следовательно, так как им нужны деньги, чтобы они продолжали работать развитие технологий медленное и имеет высокую стоимость. И простая жадность мотивирует защищать капитал, т.е. код закрывая его от публики, помогая сохранить конкурентное преимущество, но замедляя развитие остальной части человечества. Примеры целой группы/класса проблем можно перечислять очень долго, ещё дольше можно рассуждать, а к чему к какому ускорению развития привело бы решение целого класса задач. И для приближения качественного решения другого уровня, т.е. ИИ, кажется, требуется провести ретроспективу, т.е. пересмотр того, а к чему собственно привело введение в обиход Машин Тьюринга. Каждый день сегодня в работе программисту требуется долго и мучительно адаптировать казалось бы очевидное решение под конкретное окружение и конкретную архитектуру. Подбирать множество разных структур данных, если выбор стоит в плоскости независимой разработки, учитывать особенности железа и проверять, чтобы код превращался в нужный набор инструкций, чтобы достичь высокого уровня производительность. И ведь всё это происходит на \"универсальной машине Тьюринга\", где не нужно переделывать машину под каждую задачу, а достаточно переделать только код машины. Кажется, этой модели не хватает чего-то. По крайней мере так оно и выглядело для авторов несколько лет назад, когда выполнялся поиск подходящей среды для экспериментов в области искусственного интеллекта. Самыми близкими к требуемым критериям универсальности, гибкости и простоты были Lisp-системы и Lisp-машина, вводящие универсальные списки, последовательности и СУБД построенная на основе ассоциативной модели памяти Sentences, разработанная Симоном Вильямсом, вводящая тройные связи по модели Субъект-Глагол-Объект. И эти связи в отличии от рёбер теории графов вносили важную модификацию. Связи могли ссылаться на связи, позволяя тем самым строить структуру предложений любой сложности для эффективной работы с данными на \"семантическом уровне\". Но по инерции из теории графов были переняты \"точки\" или \"элементы\", к которым и привязывались текстовое описания (значение этих элементов), те самые последовательности, списки символов. Изначально было принято решение, ввиду закрытости исходного кода Sentences, упростив модель разработать своё открытое технологическое решение. Так связям было разрешено ссылаться и нам самих себя. А точки \"элементы\" были полностью исключены из системы. В ходе экспериментов было показано, что можно хранить текстовые последовательности внутри \"Связей\". Так тогда назывался проект. Это означало, что модель прошла проверку и от Sentences можно отказаться, новая модель проще и гибче. И включает в себя тот же функционал, не теряя из него ни одной возможности, которую предоставляла исходная закрытая система. Так же следует подчеркнуть, что в противоположность \"закрытому коду\" выбран путь развития через \"открытый код\", что само по себе упрощает переориентировку на всё человечество в целом, в противоположность ряду закрытых групп людей и сообществ. Обозначения Для однозначности в передаче смысла излагаемого в Теории Связей важно заранеее условиться, т.е. договориться о смысле, значении, которым будут обладать различные обозначения, графические знаки, символы и конструкции. Для установки смысловой связи будет использоваться обычный текст, на языке, которым владеет читатель. В данном случае это русский язык. Позднее текст может быть переведён на другие языки. Во-первых сразу возникает вопрос, а как отличить, разграничить текст и эталонные обозначения. Попробуем и здесь воспользоваться средствами русского языка. Русский язык допускает использование перечислений, бывает так, что перечисление начинается с вводного слова, а затем после двоеточия через запятую перечисляется некоторое множество, например - \"цвета: красный, зелёный, синий\". А ещё только что мы использовали цитирование. Ещё перечисление может быть представлено на нескольких строчках, например так: - \"цвета: красный зелёный синий\" Иными словами список как бы занимает весь следующий абзац или строчку. Но ведь множество может состоять из одного элемента, например: \"множество: элемент\" В этой систуации вводное слово находится на одной строчке, а элемент множества на другой. Чтож приступим теперь к первому обозначению, которое нам понадобится: [ ] Познакомьтесь, это пустая часть. Часть представляет собой нечто целое, но отделённое от остальной информациив тексте. Пустые связи Единичные связи Двойные связи Последовательности Понятие \"степени сжатия\""
  },
  "api/Platform.Data.Core.Doublets.LinksConstants-3.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksConstants-3.html",
    "title": "Class LinksConstants<TDecision, TAddress, TPartIndex> | LinksPlatform",
    "keywords": "Class LinksConstants<TDecision, TAddress, TPartIndex> Inheritance System.Object LinksConstants <TDecision> LinksConstants <TDecision, TAddress> LinksConstants<TDecision, TAddress, TPartIndex> Implements ILinksCombinedConstants <TDecision, TAddress, TPartIndex> ILinksDecisionConstants <TDecision> ILinksAddressConstants <TAddress> ILinksPartConstants <TPartIndex> Inherited Members LinksConstants<TDecision, TAddress>.Null LinksConstants<TDecision, TAddress>.Any LinksConstants<TDecision, TAddress>.Itself LinksConstants<TDecision, TAddress>.MinPossibleIndex LinksConstants<TDecision, TAddress>.MaxPossibleIndex LinksConstants<TDecision>.Continue LinksConstants<TDecision>.Break System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksConstants<TDecision, TAddress, TPartIndex> : LinksConstants<TDecision, TAddress>, ILinksCombinedConstants<TDecision, TAddress, TPartIndex>, ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress>, ILinksPartConstants<TPartIndex> Type Parameters Name Description TDecision TAddress TPartIndex Properties IndexPart Declaration public TPartIndex IndexPart { get; } Property Value Type Description TPartIndex SourcePart Declaration public TPartIndex SourcePart { get; } Property Value Type Description TPartIndex TargetPart Declaration public TPartIndex TargetPart { get; } Property Value Type Description TPartIndex Implements ILinksCombinedConstants<TDecision, TAddress, TPartIndex> ILinksDecisionConstants<TDecision> ILinksAddressConstants<TAddress> ILinksPartConstants<TPartIndex>"
  },
  "api/Platform.Tests.Collections.html": {
    "href": "api/Platform.Tests.Collections.html",
    "title": "Namespace Platform.Tests.Collections | LinksPlatform",
    "keywords": "Namespace Platform.Tests.Collections Classes StringTests"
  },
  "api/Platform.Data.Core.Doublets.PowerOf2ToUnaryNumberConverter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.PowerOf2ToUnaryNumberConverter-1.html",
    "title": "Class PowerOf2ToUnaryNumberConverter<TLink> | LinksPlatform",
    "keywords": "Class PowerOf2ToUnaryNumberConverter<TLink> Inheritance System.Object LinksOperatorBase <TLink> PowerOf2ToUnaryNumberConverter<TLink> Implements IConverter < System.Int32 , TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class PowerOf2ToUnaryNumberConverter<TLink> : LinksOperatorBase<TLink>, IConverter<int, TLink> Type Parameters Name Description TLink Constructors PowerOf2ToUnaryNumberConverter(ILinks<TLink>, TLink) Declaration public PowerOf2ToUnaryNumberConverter(ILinks<TLink> links, TLink one) Parameters Type Name Description ILinks <TLink> links TLink one Methods Convert(Int32) Declaration public TLink Convert(int power) Parameters Type Name Description System.Int32 power Returns Type Description TLink Implements IConverter<, >"
  },
  "api/Platform.Data.Core.Doublets.ILinksPartConstants-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksPartConstants-1.html",
    "title": "Interface ILinksPartConstants<TPartIndex> | LinksPlatform",
    "keywords": "Interface ILinksPartConstants<TPartIndex> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksPartConstants<TPartIndex> Type Parameters Name Description TPartIndex Properties IndexPart Возвращает индекс части, которая отвечает за индекс самой связи. Declaration TPartIndex IndexPart { get; } Property Value Type Description TPartIndex SourcePart Возвращает индекс части, которая отвечает за ссылку на связь-начало. Declaration TPartIndex SourcePart { get; } Property Value Type Description TPartIndex TargetPart Возвращает индекс части, которая отвечает за ссылку на связь-конец. Declaration TPartIndex TargetPart { get; } Property Value Type Description TPartIndex"
  },
  "api/Platform.Data.Core.Doublets.LinkToItsFrequencyNumberConveter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinkToItsFrequencyNumberConveter-1.html",
    "title": "Class LinkToItsFrequencyNumberConveter<TLink> | LinksPlatform",
    "keywords": "Class LinkToItsFrequencyNumberConveter<TLink> Inheritance System.Object LinksOperatorBase <TLink> LinkToItsFrequencyNumberConveter<TLink> Implements IConverter < Doublet <TLink>, TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinkToItsFrequencyNumberConveter<TLink> : LinksOperatorBase<TLink>, IConverter<Doublet<TLink>, TLink> Type Parameters Name Description TLink Constructors LinkToItsFrequencyNumberConveter(ILinks<TLink>, ISpecificPropertyOperator<TLink, TLink>, IConverter<TLink>) Declaration public LinkToItsFrequencyNumberConveter(ILinks<TLink> links, ISpecificPropertyOperator<TLink, TLink> frequencyPropertyOperator, IConverter<TLink> unaryNumberToAddressConverter) Parameters Type Name Description ILinks <TLink> links ISpecificPropertyOperator <TLink, TLink> frequencyPropertyOperator IConverter <TLink> unaryNumberToAddressConverter Methods Convert(Doublet<TLink>) Declaration public TLink Convert(Doublet<TLink> doublet) Parameters Type Name Description Doublet <TLink> doublet Returns Type Description TLink Implements IConverter<, >"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.DoubletComparer-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.DoubletComparer-1.html",
    "title": "Class DoubletComparer<T> | LinksPlatform",
    "keywords": "Class DoubletComparer<T> Inheritance System.Object DoubletComparer<T> Implements System.Collections.Generic.IEqualityComparer < Doublet <T>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class DoubletComparer<T> : IEqualityComparer<Doublet<T>> Type Parameters Name Description T Remarks TODO: Может стоит попробовать ref во всех методах (IRefEqualityComparer) 2x faster with comparer Fields Default Declaration public static readonly DoubletComparer<T> Default Field Value Type Description DoubletComparer <T> Methods Equals(Doublet<T>, Doublet<T>) Declaration public bool Equals(Doublet<T> x, Doublet<T> y) Parameters Type Name Description Doublet <T> x Doublet <T> y Returns Type Description System.Boolean GetHashCode(Doublet<T>) Declaration public int GetHashCode(Doublet<T> obj) Parameters Type Name Description Doublet <T> obj Returns Type Description System.Int32 Implements System.Collections.Generic.IEqualityComparer<T>"
  },
  "api/Platform.Data.Core.Sequences.SequenceWalker.html": {
    "href": "api/Platform.Data.Core.Sequences.SequenceWalker.html",
    "title": "Class SequenceWalker | LinksPlatform",
    "keywords": "Class SequenceWalker Inheritance System.Object SequenceWalker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class SequenceWalker Remarks Реализованный внутри алгоритм наглядно показывает, что совершенно не обязательна рекурсивная реализация (с вложенным вызовом функцией самой себя), так как стэк можно использовать намного эффективнее при ручном управлении. При оптимизации можно использовать встроенную поддержку стеков в процессор. Решить объединять ли логику в одну функцию, или оставить 4 отдельных реализации? Решить встраивать ли защиту от зацикливания. Альтернативой защиты от закливания может быть заранее известное ограничение на погружение вглубь. А так же качественное распознавание прохода по циклическому графу. Ограничение на уровень глубины рекурсии может позволить использовать уменьшенный размер стека. Можно использовать глобальный стек (или несколько глобальных стеков на каждый поток). TODO: Попробовать реализовать алгоритм используя Sigil (MSIL) и низкоуровневый стек и сравнить производительность. Methods WalkLeft<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Action<TLink>) Declaration public static void WalkLeft<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Action<TLink> visit) Parameters Type Name Description TLink sequence System.Func <TLink, TLink> getSource System.Func <TLink, TLink> getTarget System.Func <TLink, System.Boolean > isElement System.Action <TLink> visit Type Parameters Name Description TLink WalkRight<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Action<TLink>) Declaration public static void WalkRight<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Action<TLink> visit) Parameters Type Name Description TLink sequence System.Func <TLink, TLink> getSource System.Func <TLink, TLink> getTarget System.Func <TLink, System.Boolean > isElement System.Action <TLink> visit Type Parameters Name Description TLink"
  },
  "api/Platform.Examples.CSVExporterCLI-1.html": {
    "href": "api/Platform.Examples.CSVExporterCLI-1.html",
    "title": "Class CSVExporterCLI<TExporter> | LinksPlatform",
    "keywords": "Class CSVExporterCLI<TExporter> Inheritance System.Object CSVExporterCLI<TExporter> Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class CSVExporterCLI<TExporter> : ICommandLineInterface where TExporter : CSVExporter, new() Type Parameters Name Description TExporter Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Data.Core.Collections.Lists.DoublyLinkedListMethodsBase-1.html": {
    "href": "api/Platform.Data.Core.Collections.Lists.DoublyLinkedListMethodsBase-1.html",
    "title": "Class DoublyLinkedListMethodsBase<TElement> | LinksPlatform",
    "keywords": "Class DoublyLinkedListMethodsBase<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> DoublyLinkedListMethodsBase<TElement> CircularDoublyLinkedListMethods<TElement> OpenDoublyLinkedListMethods<TElement> Inherited Members GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Lists Assembly : cs.temp.dll.dll Syntax public abstract class DoublyLinkedListMethodsBase<TElement> : GenericCollectionMethodsBase<TElement> Type Parameters Name Description TElement Methods DecrementSize() Declaration protected void DecrementSize() GetFirst() Declaration protected abstract TElement GetFirst() Returns Type Description TElement GetLast() Declaration protected abstract TElement GetLast() Returns Type Description TElement GetNext(TElement) Declaration protected abstract TElement GetNext(TElement element) Parameters Type Name Description TElement element Returns Type Description TElement GetPrevious(TElement) Declaration protected abstract TElement GetPrevious(TElement element) Parameters Type Name Description TElement element Returns Type Description TElement GetSize() Declaration protected abstract TElement GetSize() Returns Type Description TElement IncrementSize() Declaration protected void IncrementSize() SetFirst(TElement) Declaration protected abstract void SetFirst(TElement element) Parameters Type Name Description TElement element SetLast(TElement) Declaration protected abstract void SetLast(TElement element) Parameters Type Name Description TElement element SetNext(TElement, TElement) Declaration protected abstract void SetNext(TElement element, TElement next) Parameters Type Name Description TElement element TElement next SetPrevious(TElement, TElement) Declaration protected abstract void SetPrevious(TElement element, TElement previous) Parameters Type Name Description TElement element TElement previous SetSize(TElement) Declaration protected abstract void SetSize(TElement size) Parameters Type Name Description TElement size"
  },
  "api/Platform.Data.WebTerminal.Controllers.html": {
    "href": "api/Platform.Data.WebTerminal.Controllers.html",
    "title": "Namespace Platform.Data.WebTerminal.Controllers | LinksPlatform",
    "keywords": "Namespace Platform.Data.WebTerminal.Controllers Classes HomeController LinksController"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.Doublet-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.Doublet-1.html",
    "title": "Struct Doublet<T> | LinksPlatform",
    "keywords": "Struct Doublet<T> Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public struct Doublet<T> Type Parameters Name Description T Constructors Doublet(T, T) Declaration public Doublet(T source, T target) Parameters Type Name Description T source T target Fields Source Declaration public T Source Field Value Type Description T Target Declaration public T Target Field Value Type Description T Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/Platform.Data.Core.Sequences.UnicodeMap.html": {
    "href": "api/Platform.Data.Core.Sequences.UnicodeMap.html",
    "title": "Class UnicodeMap | LinksPlatform",
    "keywords": "Class UnicodeMap Inheritance System.Object UnicodeMap Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class UnicodeMap Constructors UnicodeMap(ILinks<UInt64>) Declaration public UnicodeMap(ILinks<ulong> links) Parameters Type Name Description ILinks < System.UInt64 > links Fields FirstCharLink Declaration public const ulong FirstCharLink = 1UL Field Value Type Description System.UInt64 LastCharLink Declaration public const ulong LastCharLink = 65536UL Field Value Type Description System.UInt64 MapSize Declaration public const long MapSize = 65536L Field Value Type Description System.Int64 Methods FromCharsToLinkArray(Char[]) Declaration public static ulong[] FromCharsToLinkArray(char[] chars) Parameters Type Name Description System.Char [] chars Returns Type Description System.UInt64 [] FromCharsToLinkArray(Char[], Int32) Declaration public static ulong[] FromCharsToLinkArray(char[] chars, int count) Parameters Type Name Description System.Char [] chars System.Int32 count Returns Type Description System.UInt64 [] FromCharToLink(Char) Declaration public static ulong FromCharToLink(char character) Parameters Type Name Description System.Char character Returns Type Description System.UInt64 FromLinkArrayToLinkArrayGroups(UInt64[]) Declaration public static List<ulong[]> FromLinkArrayToLinkArrayGroups(ulong[] array) Parameters Type Name Description System.UInt64 [] array Returns Type Description System.Collections.Generic.List < System.UInt64 []> FromLinksToString(IList<UInt64>) Declaration public static string FromLinksToString(IList<ulong> linksList) Parameters Type Name Description System.Collections.Generic.IList < System.UInt64 > linksList Returns Type Description System.String FromLinkToChar(UInt64) Declaration public static char FromLinkToChar(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description System.Char FromSequenceLinkToString(UInt64, ILinks<UInt64>) Declaration public static string FromSequenceLinkToString(ulong link, ILinks<ulong> links) Parameters Type Name Description System.UInt64 link ILinks < System.UInt64 > links Returns Type Description System.String FromStringToLinkArray(String) Declaration public static ulong[] FromStringToLinkArray(string sequence) Parameters Type Name Description System.String sequence Returns Type Description System.UInt64 [] FromStringToLinkArrayGroups(String) Declaration public static List<ulong[]> FromStringToLinkArrayGroups(string sequence) Parameters Type Name Description System.String sequence Returns Type Description System.Collections.Generic.List < System.UInt64 []> Init() Declaration public void Init() InitNew(ILinks<UInt64>) Declaration public static UnicodeMap InitNew(ILinks<ulong> links) Parameters Type Name Description ILinks < System.UInt64 > links Returns Type Description UnicodeMap IsCharLink(UInt64) Declaration public static bool IsCharLink(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Doublets.LinksNullToSelfReferenceResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksNullToSelfReferenceResolver-1.html",
    "title": "Class LinksNullToSelfReferenceResolver<TLink> | LinksPlatform",
    "keywords": "Class LinksNullToSelfReferenceResolver<TLink> Inheritance System.Object LinksDecoratorBase <TLink> LinksNullToSelfReferenceResolver<TLink> Implements ILinks <TLink> Inherited Members LinksDecoratorBase<TLink>.Constants LinksDecoratorBase<TLink>.Links LinksDecoratorBase<TLink>.Count(IList<TLink>) LinksDecoratorBase<TLink>.Each(Func<IList<TLink>, TLink>, IList<TLink>) LinksDecoratorBase<TLink>.Delete(TLink) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksNullToSelfReferenceResolver<TLink> : LinksDecoratorBase<TLink>, ILinks<TLink> Type Parameters Name Description TLink Constructors LinksNullToSelfReferenceResolver(ILinks<TLink>) Declaration public LinksNullToSelfReferenceResolver(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods Create() Declaration public override TLink Create() Returns Type Description TLink Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<TLink>.Create() Update(IList<TLink>) Declaration public override TLink Update(IList<TLink> restrictions) Parameters Type Name Description System.Collections.Generic.IList <TLink> restrictions Returns Type Description TLink Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<TLink>.Update(System.Collections.Generic.IList<TLink>) Implements ILinks<TLink>"
  },
  "api/Platform.Tests.Data.Core.html": {
    "href": "api/Platform.Tests.Data.Core.html",
    "title": "Namespace Platform.Tests.Data.Core | LinksPlatform",
    "keywords": "Namespace Platform.Tests.Data.Core Classes BitStringTests DoubletLinksTests LinksTests OptimalVariantSequenceTests ReadSequenceTests ResizableDirectMemoryLinksTests SequencesTests TempLinksTestScope"
  },
  "api/Platform.Tests.Data.Core.ReadSequenceTests.html": {
    "href": "api/Platform.Tests.Data.Core.ReadSequenceTests.html",
    "title": "Class ReadSequenceTests | LinksPlatform",
    "keywords": "Class ReadSequenceTests Inheritance System.Object ReadSequenceTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class ReadSequenceTests Methods ReadSequenceTest() Declaration public static void ReadSequenceTest()"
  },
  "api/Platform.Data.WebTerminal.Controllers.HomeController.html": {
    "href": "api/Platform.Data.WebTerminal.Controllers.HomeController.html",
    "title": "Class HomeController | LinksPlatform",
    "keywords": "Class HomeController Inheritance System.Object HomeController Namespace : Platform.Data.WebTerminal.Controllers Assembly : cs.temp.dll.dll Syntax public class HomeController : Controller Methods Error() Declaration public IActionResult Error() Returns Type Description IActionResult Index() Declaration public IActionResult Index() Returns Type Description IActionResult Privacy() Declaration public IActionResult Privacy() Returns Type Description IActionResult"
  },
  "api/Platform.Data.Core.Triplets.LinkConverter.html": {
    "href": "api/Platform.Data.Core.Triplets.LinkConverter.html",
    "title": "Class LinkConverter | LinksPlatform",
    "keywords": "Class LinkConverter Inheritance System.Object LinkConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class LinkConverter Methods FromChar(Char) Declaration public static Link FromChar(char c) Parameters Type Name Description System.Char c Returns Type Description Link FromChars(Char[]) Declaration public static Link FromChars(char[] chars) Parameters Type Name Description System.Char [] chars Returns Type Description Link FromChars(Char[], Int32, Int32) Declaration public static Link FromChars(char[] chars, int takeFrom, int takeUntil) Parameters Type Name Description System.Char [] chars System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromChars(String) Declaration public static Link FromChars(string str) Parameters Type Name Description System.String str Returns Type Description Link FromList(Link[]) Declaration public static Link FromList(Link[] links) Parameters Type Name Description Link [] links Returns Type Description Link FromList(List<Link>) Declaration public static Link FromList(List<Link> links) Parameters Type Name Description System.Collections.Generic.List < Link > links Returns Type Description Link FromNumber(Int64) Declaration public static Link FromNumber(long number) Parameters Type Name Description System.Int64 number Returns Type Description Link FromNumbers(Boolean[]) Declaration public static Link FromNumbers(bool[] numbers) Parameters Type Name Description System.Boolean [] numbers Returns Type Description Link FromNumbers(Boolean[], Int32, Int32) Declaration public static Link FromNumbers(bool[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.Boolean [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromNumbers(Byte[]) Declaration public static Link FromNumbers(byte[] numbers) Parameters Type Name Description System.Byte [] numbers Returns Type Description Link FromNumbers(Byte[], Int32, Int32) Declaration public static Link FromNumbers(byte[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.Byte [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromNumbers(Int64[]) Declaration public static Link FromNumbers(long[] numbers) Parameters Type Name Description System.Int64 [] numbers Returns Type Description Link FromNumbers(Int64[], Int32, Int32) Declaration public static Link FromNumbers(long[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.Int64 [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromNumbers(UInt16[]) Declaration public static Link FromNumbers(ushort[] numbers) Parameters Type Name Description System.UInt16 [] numbers Returns Type Description Link FromNumbers(UInt16[], Int32, Int32) Declaration public static Link FromNumbers(ushort[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.UInt16 [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromNumbers(UInt32[]) Declaration public static Link FromNumbers(uint[] numbers) Parameters Type Name Description System.UInt32 [] numbers Returns Type Description Link FromNumbers(UInt32[], Int32, Int32) Declaration public static Link FromNumbers(uint[] numbers, int takeFrom, int takeUntil) Parameters Type Name Description System.UInt32 [] numbers System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link FromObjectsToSequence<T>(T[], Func<T, Link>) Declaration public static Link FromObjectsToSequence<T>(T[] objects, Func<T, Link> converter) Parameters Type Name Description T[] objects System.Func <T, Link > converter Returns Type Description Link Type Parameters Name Description T FromObjectsToSequence<T>(T[], Int32, Int32, Func<T, Link>) Declaration public static Link FromObjectsToSequence<T>(T[] objects, int takeFrom, int takeUntil, Func<T, Link> converter) Parameters Type Name Description T[] objects System.Int32 takeFrom System.Int32 takeUntil System.Func <T, Link > converter Returns Type Description Link Type Parameters Name Description T FromString(String) Declaration public static Link FromString(string str) Parameters Type Name Description System.String str Returns Type Description Link ToChar(Link) Declaration public static char ToChar(Link charLink) Parameters Type Name Description Link charLink Returns Type Description System.Char ToList(Link) Declaration public static List<Link> ToList(Link link) Parameters Type Name Description Link link Returns Type Description System.Collections.Generic.List < Link > ToNumber(Link) Declaration public static long ToNumber(Link number) Parameters Type Name Description Link number Returns Type Description System.Int64 ToString(Link) Declaration public static string ToString(Link link) Parameters Type Name Description Link link Returns Type Description System.String ToString(List<Link>) Declaration public static string ToString(List<Link> charLinks) Parameters Type Name Description System.Collections.Generic.List < Link > charLinks Returns Type Description System.String"
  },
  "api/Platform.Tests.Data.Core.TempLinksTestScope.html": {
    "href": "api/Platform.Tests.Data.Core.TempLinksTestScope.html",
    "title": "Class TempLinksTestScope | LinksPlatform",
    "keywords": "Class TempLinksTestScope Inheritance System.Object TempLinksTestScope Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class TempLinksTestScope : DisposableBase Constructors TempLinksTestScope(Boolean, Boolean, SequencesOptions<UInt64>, Boolean) Declaration public TempLinksTestScope(bool deleteFiles = true, bool useSequences = false, SequencesOptions<ulong> sequencesOptions = null, bool useLog = false) Parameters Type Name Description System.Boolean deleteFiles System.Boolean useSequences SequencesOptions < System.UInt64 > sequencesOptions System.Boolean useLog Fields Links Declaration public readonly SynchronizedLinks<ulong> Links Field Value Type Description SynchronizedLinks < System.UInt64 > MemoryAdapter Declaration public readonly ILinks<ulong> MemoryAdapter Field Value Type Description ILinks < System.UInt64 > Sequences Declaration public readonly Sequences Sequences Field Value Type Description Sequences TempFilename Declaration public readonly string TempFilename Field Value Type Description System.String TempTransactionLogFilename Declaration public readonly string TempTransactionLogFilename Field Value Type Description System.String Methods DeleteFiles() Declaration public void DeleteFiles() DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed"
  },
  "api/Platform.Examples.CSVSequencesExporter.html": {
    "href": "api/Platform.Examples.CSVSequencesExporter.html",
    "title": "Class CSVSequencesExporter | LinksPlatform",
    "keywords": "Class CSVSequencesExporter Inheritance System.Object CSVExporter CSVSequencesExporter Inherited Members CSVExporter._links CSVExporter._unicodeMapped CSVExporter._convertUnicodeLinksToCharacters CSVExporter._referenceByLines CSVExporter._visited CSVExporter._addressToLineNumber CSVExporter._linksCounter CSVExporter._linesCounter CSVExporter.Export(SynchronizedLinks<UInt64>, String, Boolean, Boolean, Boolean, CancellationToken) CSVExporter.Visit(UInt64) CSVExporter.FormatLink(UInt64) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class CSVSequencesExporter : CSVExporter Methods WriteLink(StreamWriter, IList<UInt64>) Declaration protected override void WriteLink(StreamWriter writer, IList<ulong> link) Parameters Type Name Description System.IO.StreamWriter writer System.Collections.Generic.IList < System.UInt64 > link Overrides CSVExporter.WriteLink(StreamWriter, IList<UInt64>)"
  },
  "api/Platform.Data.SlaveServer.Program.html": {
    "href": "api/Platform.Data.SlaveServer.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.SlaveServer Assembly : cs.temp.dll.dll Syntax public class Program Methods Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Data.Core.Doublets.ILinksCombinedConstants-3.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksCombinedConstants-3.html",
    "title": "Interface ILinksCombinedConstants<TDecision, TAddress, TPartIndex> | LinksPlatform",
    "keywords": "Interface ILinksCombinedConstants<TDecision, TAddress, TPartIndex> Inherited Members ILinksDecisionConstants<TDecision>.Continue ILinksDecisionConstants<TDecision>.Break ILinksAddressConstants<TAddress>.Null ILinksAddressConstants<TAddress>.Any ILinksAddressConstants<TAddress>.Itself ILinksAddressConstants<TAddress>.MinPossibleIndex ILinksAddressConstants<TAddress>.MaxPossibleIndex ILinksPartConstants<TPartIndex>.IndexPart ILinksPartConstants<TPartIndex>.SourcePart ILinksPartConstants<TPartIndex>.TargetPart Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksCombinedConstants<TDecision, TAddress, TPartIndex> : ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress>, ILinksPartConstants<TPartIndex> Type Parameters Name Description TDecision TAddress TPartIndex"
  },
  "api/Platform.Data.Core.Triplets.LinkDefinition.html": {
    "href": "api/Platform.Data.Core.Triplets.LinkDefinition.html",
    "title": "Struct LinkDefinition | LinksPlatform",
    "keywords": "Struct LinkDefinition Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public struct LinkDefinition Constructors LinkDefinition(Link) Declaration public LinkDefinition(Link link) Parameters Type Name Description Link link LinkDefinition(Link, Link, Link) Declaration public LinkDefinition(Link source, Link linker, Link target) Parameters Type Name Description Link source Link linker Link target Fields Linker Declaration public Link Linker Field Value Type Description Link Source Declaration public Link Source Field Value Type Description Link Target Declaration public Link Target Field Value Type Description Link"
  },
  "api/Platform.Examples.html": {
    "href": "api/Platform.Examples.html",
    "title": "Namespace Platform.Examples | LinksPlatform",
    "keywords": "Namespace Platform.Examples Classes CSVExporter CSVExporterCLI<TExporter> CSVSequencesExporter FileIndexer FileIndexerCLI GEXFCSVExporterCLI GEXFExporter<TLink> MasterServer MasterServerCLI TerminalCLI WikipediaImporterCLI WikipediaLinksStorage WikipediaPagesCounter WikipediaPagesCounterCLI XUnitTestsRunnerCLI Interfaces ICommandLineInterface IWikipediaStorage<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinkExtensions.html": {
    "href": "api/Platform.Data.Core.Doublets.LinkExtensions.html",
    "title": "Class LinkExtensions | LinksPlatform",
    "keywords": "Class LinkExtensions Inheritance System.Object LinkExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public static class LinkExtensions Methods IsFullPoint(UInt64Link) Declaration public static bool IsFullPoint(this UInt64Link link) Parameters Type Name Description UInt64Link link Returns Type Description System.Boolean IsPartialPoint(UInt64Link) Declaration public static bool IsPartialPoint(this UInt64Link link) Parameters Type Name Description UInt64Link link Returns Type Description System.Boolean"
  },
  "api/Platform.Data.ConsoleTerminal.html": {
    "href": "api/Platform.Data.ConsoleTerminal.html",
    "title": "Namespace Platform.Data.ConsoleTerminal | LinksPlatform",
    "keywords": "Namespace Platform.Data.ConsoleTerminal Classes Program"
  },
  "api/Platform.Data.Core.Triplets.Link.html": {
    "href": "api/Platform.Data.Core.Triplets.Link.html",
    "title": "Struct Link | LinksPlatform",
    "keywords": "Struct Link Implements System.IEquatable < Link > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public struct Link : ILink<Link>, IEquatable<Link> Constructors Link(LinkIndex) Declaration public Link(LinkIndex link) Parameters Type Name Description LinkIndex link Fields Continue Declaration public static readonly bool Continue Field Value Type Description System.Boolean Itself Declaration public static readonly Link Itself Field Value Type Description Link Stop Declaration public static readonly bool Stop Field Value Type Description System.Boolean Properties FirstRefererByLinker Declaration public Link FirstRefererByLinker { get; } Property Value Type Description Link FirstRefererBySource Declaration public Link FirstRefererBySource { get; } Property Value Type Description Link FirstRefererByTarget Declaration public Link FirstRefererByTarget { get; } Property Value Type Description Link Linker Declaration public Link Linker { get; } Property Value Type Description Link ReferersByLinkerCount Declaration public Int ReferersByLinkerCount { get; } Property Value Type Description Int ReferersBySourceCount Declaration public Int ReferersBySourceCount { get; } Property Value Type Description Int ReferersByTargetCount Declaration public Int ReferersByTargetCount { get; } Property Value Type Description Int Source Declaration public Link Source { get; } Property Value Type Description Link Target Declaration public Link Target { get; } Property Value Type Description Link Timestamp Declaration public DateTime Timestamp { get; } Property Value Type Description System.DateTime TotalReferers Declaration public Int TotalReferers { get; } Property Value Type Description Int Methods Create(Link, Link, Link) Declaration public static Link Create(Link source, Link linker, Link target) Parameters Type Name Description Link source Link linker Link target Returns Type Description Link CreateMapped(Link, Link, Link, Int) Declaration public static Link CreateMapped(Link source, Link linker, Link target, Int mappingIndex) Parameters Type Name Description Link source Link linker Link target Int mappingIndex Returns Type Description Link CreateMapped(Link, Link, Link, Object) Declaration public static Link CreateMapped(Link source, Link linker, Link target, object mappingIndex) Parameters Type Name Description Link source Link linker Link target System.Object mappingIndex Returns Type Description Link Delete(ref Link) Declaration public static void Delete(ref Link link) Parameters Type Name Description Link link Equals(Link) Declaration public bool Equals(Link other) Parameters Type Name Description Link other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Exists(Link, Link, Link) Declaration public static bool Exists(Link source, Link linker, Link target) Parameters Type Name Description Link source Link linker Link target Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetMapped(Int) Declaration public static Link GetMapped(Int mappingIndex) Parameters Type Name Description Int mappingIndex Returns Type Description Link GetMapped(Object) Declaration public static Link GetMapped(object mappingIndex) Parameters Type Name Description System.Object mappingIndex Returns Type Description Link Restore(Int) Declaration public static Link Restore(Int index) Parameters Type Name Description Int index Returns Type Description Link Restore(LinkIndex) Declaration public static Link Restore(LinkIndex index) Parameters Type Name Description LinkIndex index Returns Type Description Link Search(Link, Link, Link) Declaration public static Link Search(Link source, Link linker, Link target) Parameters Type Name Description Link source Link linker Link target Returns Type Description Link StartMemoryManager(String) Declaration public static void StartMemoryManager(string storageFilename) Parameters Type Name Description System.String storageFilename StopMemoryManager() Declaration public static void StopMemoryManager() ToIndex() Declaration public LinkIndex ToIndex() Returns Type Description LinkIndex ToInt() Declaration public Int ToInt() Returns Type Description Int ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() TryGetMapped(Int, out Link) Declaration public static bool TryGetMapped(Int mappingIndex, out Link mappedLink) Parameters Type Name Description Int mappingIndex Link mappedLink Returns Type Description System.Boolean TryGetMapped(Object, out Link) Declaration public static bool TryGetMapped(object mappingIndex, out Link mappedLink) Parameters Type Name Description System.Object mappingIndex Link mappedLink Returns Type Description System.Boolean TrySetMapped(Link, Int, Boolean) Declaration public static bool TrySetMapped(Link link, Int mappingIndex, bool rewrite = false) Parameters Type Name Description Link link Int mappingIndex System.Boolean rewrite Returns Type Description System.Boolean Update(ref Link, Link, Link, Link) Declaration public static void Update(ref Link link, Link newSource, Link newLinker, Link newTarget) Parameters Type Name Description Link link Link newSource Link newLinker Link newTarget WalkThroughAllLinks(Action<Link>) Declaration public static void WalkThroughAllLinks(Action<Link> walker) Parameters Type Name Description System.Action < Link > walker WalkThroughAllLinks(Func<Link, Boolean>) Declaration public static bool WalkThroughAllLinks(Func<Link, bool> walker) Parameters Type Name Description System.Func < Link , System.Boolean > walker Returns Type Description System.Boolean WalkThroughReferers(Action<Link>) Declaration public void WalkThroughReferers(Action<Link> walker) Parameters Type Name Description System.Action < Link > walker WalkThroughReferers(Func<Link, Boolean>) Declaration public void WalkThroughReferers(Func<Link, bool> walker) Parameters Type Name Description System.Func < Link , System.Boolean > walker WalkThroughReferersAsLinker(Action<Link>) Declaration public void WalkThroughReferersAsLinker(Action<Link> walker) Parameters Type Name Description System.Action < Link > walker WalkThroughReferersAsLinker(Func<Link, Boolean>) Declaration public bool WalkThroughReferersAsLinker(Func<Link, bool> walker) Parameters Type Name Description System.Func < Link , System.Boolean > walker Returns Type Description System.Boolean WalkThroughReferersAsSource(Action<Link>) Declaration public void WalkThroughReferersAsSource(Action<Link> walker) Parameters Type Name Description System.Action < Link > walker WalkThroughReferersAsSource(Func<Link, Boolean>) Declaration public bool WalkThroughReferersAsSource(Func<Link, bool> walker) Parameters Type Name Description System.Func < Link , System.Boolean > walker Returns Type Description System.Boolean WalkThroughReferersAsTarget(Action<Link>) Declaration public void WalkThroughReferersAsTarget(Action<Link> walker) Parameters Type Name Description System.Action < Link > walker WalkThroughReferersAsTarget(Func<Link, Boolean>) Declaration public bool WalkThroughReferersAsTarget(Func<Link, bool> walker) Parameters Type Name Description System.Func < Link , System.Boolean > walker Returns Type Description System.Boolean Events CreatedEvent Declaration public static event Link.CreatedDelegate CreatedEvent Event Type Type Description Link.CreatedDelegate DeletedEvent Declaration public static event Link.DeletedDelegate DeletedEvent Event Type Type Description Link.DeletedDelegate UpdatedEvent Declaration public static event Link.UpdatedDelegate UpdatedEvent Event Type Type Description Link.UpdatedDelegate Operators BitwiseAnd(Link, Link) Declaration public static Link operator &(Link first, Link second) Parameters Type Name Description Link first Link second Returns Type Description Link Equality(Link, Link) Declaration public static bool operator ==(Link first, Link second) Parameters Type Name Description Link first Link second Returns Type Description System.Boolean Explicit(Link[] to Link) Declaration public static explicit operator Link(Link[] links) Parameters Type Name Description Link [] links Returns Type Description Link Explicit(List<Link> to Link) Declaration public static explicit operator Link(List<Link> links) Parameters Type Name Description System.Collections.Generic.List < Link > links Returns Type Description Link Explicit(String to Link) Declaration public static explicit operator Link(string string) Parameters Type Name Description System.String string Returns Type Description Link Implicit(Int to Link) Declaration public static implicit operator Link(Int link) Parameters Type Name Description Int link Returns Type Description Link Implicit(LinkIndex to Link) Declaration public static implicit operator Link(LinkIndex link) Parameters Type Name Description LinkIndex link Returns Type Description Link Implicit(Link to Int) Declaration public static implicit operator Int(Link link) Parameters Type Name Description Link link Returns Type Description Int Implicit(Link to LinkIndex) Declaration public static implicit operator LinkIndex(Link link) Parameters Type Name Description Link link Returns Type Description LinkIndex Implicit(Link to Nullable<LinkIndex>) Declaration public static implicit operator LinkIndex? (Link link) Parameters Type Name Description Link link Returns Type Description System.Nullable < LinkIndex > Implicit(Nullable<LinkIndex> to Link) Declaration public static implicit operator Link(LinkIndex? link) Parameters Type Name Description System.Nullable < LinkIndex > link Returns Type Description Link Inequality(Link, Link) Declaration public static bool operator !=(Link first, Link second) Parameters Type Name Description Link first Link second Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/Platform.Data.Core.Sequences.DuplicateSegmentsCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.DuplicateSegmentsCounter-1.html",
    "title": "Class DuplicateSegmentsCounter<TLink> | LinksPlatform",
    "keywords": "Class DuplicateSegmentsCounter<TLink> Inheritance System.Object DuplicateSegmentsCounter<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class DuplicateSegmentsCounter<TLink> : ICounter<int> Type Parameters Name Description TLink Constructors DuplicateSegmentsCounter(IProvider<IList<KeyValuePair<IList<TLink>, IList<TLink>>>>) Declaration public DuplicateSegmentsCounter(IProvider<IList<KeyValuePair<IList<TLink>, IList<TLink>>>> duplicateFragmentsProvider) Parameters Type Name Description IProvider < System.Collections.Generic.IList < System.Collections.Generic.KeyValuePair < System.Collections.Generic.IList <TLink>, System.Collections.Generic.IList <TLink>>>> duplicateFragmentsProvider Methods Count() Declaration public int Count() Returns Type Description System.Int32"
  },
  "api/Platform.Data.Core.Doublets.UnaryNumberIncrementer-1.html": {
    "href": "api/Platform.Data.Core.Doublets.UnaryNumberIncrementer-1.html",
    "title": "Class UnaryNumberIncrementer<TLink> | LinksPlatform",
    "keywords": "Class UnaryNumberIncrementer<TLink> Inheritance System.Object LinksOperatorBase <TLink> UnaryNumberIncrementer<TLink> Implements IIncrementer <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UnaryNumberIncrementer<TLink> : LinksOperatorBase<TLink>, IIncrementer<TLink> Type Parameters Name Description TLink Constructors UnaryNumberIncrementer(ILinks<TLink>, TLink) Declaration public UnaryNumberIncrementer(ILinks<TLink> links, TLink unaryOne) Parameters Type Name Description ILinks <TLink> links TLink unaryOne Methods Increment(TLink) Declaration public TLink Increment(TLink unaryNumber) Parameters Type Name Description TLink unaryNumber Returns Type Description TLink Implements IIncrementer<>"
  },
  "api/Platform.Data.Core.Collections.Trees.SizeBalancedTreeMethods2-1.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.SizeBalancedTreeMethods2-1.html",
    "title": "Class SizeBalancedTreeMethods2<TElement> | LinksPlatform",
    "keywords": "Class SizeBalancedTreeMethods2<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> BinaryTreeMethodsBase <TElement> SizeBalancedTreeMethods2<TElement> Inherited Members BinaryTreeMethodsBase<TElement>.GetLeftPointer(TElement) BinaryTreeMethodsBase<TElement>.GetRightPointer(TElement) BinaryTreeMethodsBase<TElement>.GetLeftValue(TElement) BinaryTreeMethodsBase<TElement>.GetRightValue(TElement) BinaryTreeMethodsBase<TElement>.GetSize(TElement) BinaryTreeMethodsBase<TElement>.SetLeft(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetRight(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetSize(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheLeftOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheRightOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.GetLeftOrDefault(TElement) BinaryTreeMethodsBase<TElement>.GetRightOrDefault(TElement) BinaryTreeMethodsBase<TElement>.IncrementSize(TElement) BinaryTreeMethodsBase<TElement>.DecrementSize(TElement) BinaryTreeMethodsBase<TElement>.GetLeftSize(TElement) BinaryTreeMethodsBase<TElement>.GetRightSize(TElement) BinaryTreeMethodsBase<TElement>.GetSizeOrZero(TElement) BinaryTreeMethodsBase<TElement>.FixSize(TElement) BinaryTreeMethodsBase<TElement>.LeftRotate(IntPtr) BinaryTreeMethodsBase<TElement>.LeftRotate(TElement) BinaryTreeMethodsBase<TElement>.RightRotate(IntPtr) BinaryTreeMethodsBase<TElement>.RightRotate(TElement) BinaryTreeMethodsBase<TElement>.Contains(TElement, TElement) BinaryTreeMethodsBase<TElement>.ClearNode(TElement) BinaryTreeMethodsBase<TElement>.Attach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.Detach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.GetSize(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSizes(IntPtr) BinaryTreeMethodsBase<TElement>.ValidateSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSize(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(IntPtr) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNode(TElement) BinaryTreeMethodsBase<TElement>.PrintNode(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNodeValue(TElement, StringBuilder) GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Trees Assembly : cs.temp.dll.dll Syntax public abstract class SizeBalancedTreeMethods2<TElement> : BinaryTreeMethodsBase<TElement> Type Parameters Name Description TElement Remarks Можно сделать прошитую версию дерева, чтобы сделать проход по дереву более оптимальным. Также имеет смысл разобраться почему не работает версия с идеальной балансировкой. Methods AttachCore(IntPtr, TElement) Declaration protected override void AttachCore(IntPtr root, TElement newNode) Parameters Type Name Description System.IntPtr root TElement newNode Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.AttachCore(System.IntPtr, TElement) DetachCore(IntPtr, TElement) Declaration protected override void DetachCore(IntPtr root, TElement nodeToDetach) Parameters Type Name Description System.IntPtr root TElement nodeToDetach Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.DetachCore(System.IntPtr, TElement)"
  },
  "api/Platform.Data.Core.Sequences.Sequences.html": {
    "href": "api/Platform.Data.Core.Sequences.Sequences.html",
    "title": "Class Sequences | LinksPlatform",
    "keywords": "Class Sequences Представляет коллекцию последовательностей связей. Inheritance System.Object Sequences Implements ISequences < System.UInt64 > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class Sequences : ISequences<ulong> Remarks Обязательно реализовать атомарность каждого публичного метода. TODO: !!! Повышение вероятности повторного использования групп (подпоследовательностей), через естественную группировку по unicode типам, все whitespace вместе, все символы вместе, все числа вместе и т.п. использовать ровно сбалансированный вариант, чтобы уменьшать вложенность (глубину графа) x*y - найти все связи между, в последовательностях любой формы, если не стоит ограничитель на то, что является последовательностью, а что нет, то находятся любые структуры связей, которые содержат эти элементы именно в таком порядке. Рост последовательности слева и справа. Поиск со звёздочкой. URL, PURL - реестр используемых во вне ссылок на ресурсы, так же проблема может быть решена при реализации дистанционных триггеров. Нужны ли уникальные указатели вообще? Что если обращение к информации будет происходить через содержимое всегда? Писать тесты. Можно убрать зависимость от конкретной реализации Links, на зависимость от абстрактного элемента, который может быть представлен несколькими способами. Можно ли как-то сделать один общий интерфейс Блокчейн и/или гит для распределённой записи транзакций. Constructors Sequences(SynchronizedLinks<UInt64>) Declaration public Sequences(SynchronizedLinks<ulong> links) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links Sequences(SynchronizedLinks<UInt64>, SequencesOptions<UInt64>) Declaration public Sequences(SynchronizedLinks<ulong> links, SequencesOptions<ulong> options) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links SequencesOptions < System.UInt64 > options Fields Links Declaration public readonly SynchronizedLinks<ulong> Links Field Value Type Description SynchronizedLinks < System.UInt64 > MaxSequenceFormatSize Declaration public const int MaxSequenceFormatSize = 200 Field Value Type Description System.Int32 Options Declaration public SequencesOptions<ulong> Options Field Value Type Description SequencesOptions < System.UInt64 > Sync Declaration public readonly ISynchronization Sync Field Value Type Description ISynchronization ZeroOrMany Возвращает значение ulong, обозначающее любое количество связей. Declaration public const ulong ZeroOrMany = 18446744073709551615UL Field Value Type Description System.UInt64 Methods AllBottomUsages(UInt64) Declaration public HashSet<ulong> AllBottomUsages(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description HashSet < System.UInt64 > AllUsages(UInt64) Declaration public HashSet<ulong> AllUsages(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description HashSet < System.UInt64 > Remarks TODO: Может потробоваться ограничение на уровень глубины рекурсии CalculateAllUsages(UInt64[]) Declaration public void CalculateAllUsages(ulong[] totals) Parameters Type Name Description System.UInt64 [] totals CalculateAllUsages2(UInt64[]) Declaration public void CalculateAllUsages2(ulong[] totals) Parameters Type Name Description System.UInt64 [] totals CalculateTotalSymbolFrequencyCore(UInt64) Declaration public ulong CalculateTotalSymbolFrequencyCore(ulong symbol) Parameters Type Name Description System.UInt64 symbol Returns Type Description System.UInt64 CollectMatchingSequences(UInt64[]) Declaration public List<ulong> CollectMatchingSequences(ulong[] links) Parameters Type Name Description System.UInt64 [] links Returns Type Description System.Collections.Generic.List < System.UInt64 > Compact(UInt64[]) Declaration public ulong Compact(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 Remarks bestVariant можно выбирать по максимальному числу использований, но балансированный позволяет гарантировать уникальность (если есть возможность, гарантировать его использование в других местах). Получается этот метод должен игнорировать Options.EnforceSingleSequenceVersionOnWrite Count(UInt64[]) Declaration public ulong Count(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 Create(UInt64[]) Declaration public ulong Create(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 CreateAllVariants1(UInt64[]) Declaration public List<ulong> CreateAllVariants1(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.Collections.Generic.List < System.UInt64 > CreateAllVariants2(UInt64[]) Declaration public ulong[] CreateAllVariants2(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Number of links that is needed to generate all variants for sequence of length N corresponds to https://oeis.org/A014143/list sequence. Delete(UInt64[]) Declaration public void Delete(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Each(Func<UInt64, Boolean>, IList<UInt64>) Declaration public bool Each(Func<ulong, bool> handler, IList<ulong> sequence) Parameters Type Name Description System.Func < System.UInt64 , System.Boolean > handler System.Collections.Generic.IList < System.UInt64 > sequence Returns Type Description System.Boolean Each(UInt64[]) Declaration public List<ulong> Each(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.Collections.Generic.List < System.UInt64 > Each1(UInt64[]) Declaration public HashSet<ulong> Each1(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > EachPart(Func<UInt64, Boolean>, UInt64) Declaration public bool EachPart(Func<ulong, bool> handler, ulong sequence) Parameters Type Name Description System.Func < System.UInt64 , System.Boolean > handler System.UInt64 sequence Returns Type Description System.Boolean EachPart(Func<UInt64, Boolean>, UInt64[]) Declaration public void EachPart(Func<ulong, bool> handler, params ulong[] sequence) Parameters Type Name Description System.Func < System.UInt64 , System.Boolean > handler System.UInt64 [] sequence EachPart(UInt64[]) Declaration public HashSet<ulong> EachPart(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > FormatSequence(LinkIndex, LinkIndex[]) Declaration public string FormatSequence(LinkIndex sequenceLink, params LinkIndex[] knownElements) Parameters Type Name Description LinkIndex sequenceLink LinkIndex [] knownElements Returns Type Description System.String FormatSequence(LinkIndex, Action<StringBuilder, LinkIndex>, Boolean, LinkIndex[]) Declaration public string FormatSequence(LinkIndex sequenceLink, Action<StringBuilder, LinkIndex> elementToString, bool insertComma, params LinkIndex[] knownElements) Parameters Type Name Description LinkIndex sequenceLink System.Action < StringBuilder , LinkIndex > elementToString System.Boolean insertComma LinkIndex [] knownElements Returns Type Description System.String GetAllConnections(UInt64[]) Declaration public HashSet<ulong> GetAllConnections(params ulong[] linksToConnect) Parameters Type Name Description System.UInt64 [] linksToConnect Returns Type Description HashSet < System.UInt64 > GetAllConnections1(UInt64[]) Declaration public HashSet<ulong> GetAllConnections1(params ulong[] linksToConnect) Parameters Type Name Description System.UInt64 [] linksToConnect Returns Type Description HashSet < System.UInt64 > GetAllConnections2(UInt64[]) Declaration public HashSet<ulong> GetAllConnections2(params ulong[] linksToConnect) Parameters Type Name Description System.UInt64 [] linksToConnect Returns Type Description HashSet < System.UInt64 > GetAllConnections3(UInt64[]) Declaration public List<ulong> GetAllConnections3(params ulong[] linksToConnect) Parameters Type Name Description System.UInt64 [] linksToConnect Returns Type Description System.Collections.Generic.List < System.UInt64 > GetAllMatchingSequences0(UInt64[]) Declaration public List<ulong> GetAllMatchingSequences0(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.Collections.Generic.List < System.UInt64 > GetAllMatchingSequences1(UInt64[]) Declaration public HashSet<ulong> GetAllMatchingSequences1(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > GetAllPartiallyMatchingSequences(UInt64[]) Declaration public List<ulong> GetAllPartiallyMatchingSequences(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.Collections.Generic.List < System.UInt64 > GetAllPartiallyMatchingSequences0(UInt64[]) Declaration public List<ulong> GetAllPartiallyMatchingSequences0(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.Collections.Generic.List < System.UInt64 > GetAllPartiallyMatchingSequences1(UInt64[]) Declaration public HashSet<ulong> GetAllPartiallyMatchingSequences1(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > GetAllPartiallyMatchingSequences2(Func<UInt64, Boolean>, UInt64[]) Declaration public bool GetAllPartiallyMatchingSequences2(Func<ulong, bool> handler, params ulong[] sequence) Parameters Type Name Description System.Func < System.UInt64 , System.Boolean > handler System.UInt64 [] sequence Returns Type Description System.Boolean GetAllPartiallyMatchingSequences3(UInt64[]) Declaration public HashSet<ulong> GetAllPartiallyMatchingSequences3(params ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > GetAllPartiallyMatchingSequences4(HashSet<UInt64>, IList<UInt64>) Declaration public HashSet<ulong> GetAllPartiallyMatchingSequences4(HashSet<ulong> readAsElements, IList<ulong> sequence) Parameters Type Name Description HashSet < System.UInt64 > readAsElements System.Collections.Generic.IList < System.UInt64 > sequence Returns Type Description HashSet < System.UInt64 > GetAllPartiallyMatchingSequences5(HashSet<UInt64>, UInt64[]) Declaration public HashSet<ulong> GetAllPartiallyMatchingSequences5(HashSet<ulong> readAsElements, params ulong[] sequence) Parameters Type Name Description HashSet < System.UInt64 > readAsElements System.UInt64 [] sequence Returns Type Description HashSet < System.UInt64 > GetLeftElements(UInt64, UInt64) Declaration public ulong[] GetLeftElements(ulong startLink, ulong leftLink) Parameters Type Name Description System.UInt64 startLink System.UInt64 leftLink Returns Type Description System.UInt64 [] GetRightElements(UInt64, UInt64) Declaration public ulong[] GetRightElements(ulong startLink, ulong rightLink) Parameters Type Name Description System.UInt64 startLink System.UInt64 rightLink Returns Type Description System.UInt64 [] GetSimilarSequences() Declaration public List<ulong> GetSimilarSequences() Returns Type Description System.Collections.Generic.List < System.UInt64 > IsSequence(UInt64) Declaration public bool IsSequence(ulong sequence) Parameters Type Name Description System.UInt64 sequence Returns Type Description System.Boolean MatchPattern(UInt64[]) Declaration public HashSet<ulong> MatchPattern(params ulong[] patternSequence) Parameters Type Name Description System.UInt64 [] patternSequence Returns Type Description HashSet < System.UInt64 > Prediction() Declaration public void Prediction() ReadSequenceCore(UInt64, Func<UInt64, Boolean>) Declaration public ulong[] ReadSequenceCore(ulong sequence, Func<ulong, bool> isElement) Parameters Type Name Description System.UInt64 sequence System.Func < System.UInt64 , System.Boolean > isElement Returns Type Description System.UInt64 [] SafeFormatSequence(LinkIndex, LinkIndex[]) Declaration public string SafeFormatSequence(LinkIndex sequenceLink, params LinkIndex[] knownElements) Parameters Type Name Description LinkIndex sequenceLink LinkIndex [] knownElements Returns Type Description System.String SafeFormatSequence(LinkIndex, Action<StringBuilder, LinkIndex>, Boolean, LinkIndex[]) Declaration public string SafeFormatSequence(LinkIndex sequenceLink, Action<StringBuilder, LinkIndex> elementToString, bool insertComma, params LinkIndex[] knownElements) Parameters Type Name Description LinkIndex sequenceLink System.Action < StringBuilder , LinkIndex > elementToString System.Boolean insertComma LinkIndex [] knownElements Returns Type Description System.String TestSimplify() Declaration public static void TestSimplify() TryStepLeft(UInt64, UInt64, UInt64[], Int32) Declaration public bool TryStepLeft(ulong startLink, ulong leftLink, ulong[] result, int offset) Parameters Type Name Description System.UInt64 startLink System.UInt64 leftLink System.UInt64 [] result System.Int32 offset Returns Type Description System.Boolean TryStepRight(UInt64, UInt64, UInt64[], Int32) Declaration public bool TryStepRight(ulong startLink, ulong rightLink, ulong[] result, int offset) Parameters Type Name Description System.UInt64 startLink System.UInt64 rightLink System.UInt64 [] result System.Int32 offset Returns Type Description System.Boolean Update(UInt64[], UInt64[]) Declaration public ulong Update(ulong[] sequence, ulong[] newSequence) Parameters Type Name Description System.UInt64 [] sequence System.UInt64 [] newSequence Returns Type Description System.UInt64 Implements ISequences<TLink>"
  },
  "api/Platform.Data.Core.Doublets.ISynchronizedLinks-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ISynchronizedLinks-1.html",
    "title": "Interface ISynchronizedLinks<T> | LinksPlatform",
    "keywords": "Interface ISynchronizedLinks<T> Inherited Members ILinks<T>.Constants ILinks<T>.Count(IList<T>) ILinks<T>.Each(Func<IList<T>, T>, IList<T>) ILinks<T>.Create() ILinks<T>.Update(IList<T>) ILinks<T>.Delete(T) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ISynchronizedLinks<T> : ISynchronized<ILinks<T>>, ILinks<T> Type Parameters Name Description T"
  },
  "api/Platform.Data.Core.Sequences.ISequenceHeightProvider-1.html": {
    "href": "api/Platform.Data.Core.Sequences.ISequenceHeightProvider-1.html",
    "title": "Interface ISequenceHeightProvider<TLink> | LinksPlatform",
    "keywords": "Interface ISequenceHeightProvider<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public interface ISequenceHeightProvider<TLink> : IProvider<TLink, TLink> Type Parameters Name Description TLink"
  },
  "README.ru.html": {
    "href": "README.ru.html",
    "title": "ПлатформаСвязей (english version) | LinksPlatform",
    "keywords": "ПлатформаСвязей ( english version ) Документация Графическое вступление Вдохновлено работой Симона Вильямса ( Ассоциативная модель данных - англ. ), книга (англ.) , сравнение с реляционными моделями данных (англ.) . Сравнение моделей данных: Сравнение теорий: Эта платформа использует объединённый тип данных — связь, который является комбинацией Элемента и Связи из оригинальной работы Симона Вильямса. Таким образом Элемент или Точка являются частным случаем связи, которая ссылается сама на себя . Есть два варианта структуры Связи: Нетипизированная, каждая связь содержит Source (Начало, Подлежащее) и Target (Конец, Сказуемое, Дополнение). Типизированная, с добавленным Linker (Глагол, Тип, Связка, Предикат, Сказуемое), так, что теперь любая дополнительная информация о типе соединения между двумя связями может быть записана в это дополнительное поле. Платформа Связей это система, которая комбинирует хранилище ассоциативной памяти (Связи) и движок выполнения трансформаций (Триггеры). Существует возможность программировать эту систему динамически, благодаря тому факту, что все алгоритмы воспринимаются как данные внутри этого хранилища. Такие алгоритмы также способны изменять сами себя в режиме реального времени на основе входных данных из окружающей среды. Идея, которая стоит за Платформой Связей это модель высокоуровневых эффектов ассоциативной памяти человеческого разума. Дорожная карта Текущее состояние разработки (англ.) Концепт Swagger Connector Links (doublets) API swagger connector. Links (triplets, micro RDF) API swagger connector. Часто задаваемые вопросы Контакты https://vk.com/linksplatform https://vk.com/konard"
  },
  "index.html": {
    "href": "index.html",
    "title": "Links Platform | Платформа Связей | LinksPlatform",
    "keywords": "Links Platform | Платформа Связей Repository | Репозиторий github.com/Konard/LinksPlatform Description | Описание Holistic system for storage and transformation of information based on associative model of data. Целостная система для хранения и обработки информации, основанная на ассоциативной модели данных. How to run | Как запустить Prerequisites | Требования Install .NET Core SDK https://www.microsoft.com/net Установить .NET Core SDK https://www.microsoft.com/net Run Tests | Запустить тесты dotnet run Platform/Platform.dotnet.sln -p Platform/Platform.Tests.Runner"
  },
  "README.html": {
    "href": "README.html",
    "title": "LinksPlatform (русская версия) | LinksPlatform",
    "keywords": "LinksPlatform ( русская версия ) Documentation Graphical introduction Inspired by the work of Simon Williams ( The Associative Model of Data ), book , whitepaper . Comparison of models: Comparison of theories: This platform uses a unified data type — link, which is a combination of Item and Link from a work by Simon Williams. So the Item or Point is a specific case of the link, which references itself . There are two variants of Link structure: Untyped , each link contains Source ( beginning , start , first , left , subject ) and Target ( ending , stop , last , right , predicate , object ). Typed ( semantic ), with added Linker ( verb , action , type , category , predicate , transition , algorithm ), so any additional info about a type of connection between two links can be stored here. Links Platform is a system , that combines simple associative memory storage (Links) and transformation execution engine (Triggers). There is an ability to program that system dynamically, due to the fact that all algorithms treated as data inside the storage . Such algorithms can also change themselves in real-time based on input from the environment . The Idea behind Links Platform is a model of high-level associative memory effects of human mind . Road map Project status Swagger Connector Concept Links (doublets) API swagger connector. Links (triplets, micro RDF) API swagger connector. Frequently asked questions Contacts https://vk.com/linksplatform https://vk.com/konard"
  },
  "api/Platform.Data.WebTerminal.Models.LinkModel.html": {
    "href": "api/Platform.Data.WebTerminal.Models.LinkModel.html",
    "title": "Class LinkModel | LinksPlatform",
    "keywords": "Class LinkModel Inheritance System.Object LinkModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.WebTerminal.Models Assembly : cs.temp.dll.dll Syntax public class LinkModel Constructors LinkModel(Link) Declaration public LinkModel(Link link) Parameters Type Name Description Link link LinkModel(Link, List<LinkModel>) Declaration public LinkModel(Link link, List<LinkModel> referersModels) Parameters Type Name Description Link link System.Collections.Generic.List < LinkModel > referersModels Properties Link Declaration public Link Link { get; set; } Property Value Type Description Link ReferersModels Declaration public List<LinkModel> ReferersModels { get; set; } Property Value Type Description System.Collections.Generic.List < LinkModel > Methods CreateLinkModel(Link, Int32) Declaration public static LinkModel CreateLinkModel(Link link, int nestingLevel = 5) Parameters Type Name Description Link link System.Int32 nestingLevel Returns Type Description LinkModel"
  },
  "api/Platform.Tests.Helpers.IntPtrExtensionsTests.html": {
    "href": "api/Platform.Tests.Helpers.IntPtrExtensionsTests.html",
    "title": "Class IntPtrExtensionsTests | LinksPlatform",
    "keywords": "Class IntPtrExtensionsTests Inheritance System.Object IntPtrExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class IntPtrExtensionsTests Methods ReadAndWriteOperationsForPointerValuesTest() Declaration public void ReadAndWriteOperationsForPointerValuesTest()"
  },
  "api/Platform.Data.Core.Collections.Lists.CircularDoublyLinkedListMethods-1.html": {
    "href": "api/Platform.Data.Core.Collections.Lists.CircularDoublyLinkedListMethods-1.html",
    "title": "Class CircularDoublyLinkedListMethods<TElement> | LinksPlatform",
    "keywords": "Class CircularDoublyLinkedListMethods<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> DoublyLinkedListMethodsBase <TElement> CircularDoublyLinkedListMethods<TElement> Inherited Members DoublyLinkedListMethodsBase<TElement>.GetFirst() DoublyLinkedListMethodsBase<TElement>.GetLast() DoublyLinkedListMethodsBase<TElement>.GetPrevious(TElement) DoublyLinkedListMethodsBase<TElement>.GetNext(TElement) DoublyLinkedListMethodsBase<TElement>.GetSize() DoublyLinkedListMethodsBase<TElement>.SetFirst(TElement) DoublyLinkedListMethodsBase<TElement>.SetLast(TElement) DoublyLinkedListMethodsBase<TElement>.SetPrevious(TElement, TElement) DoublyLinkedListMethodsBase<TElement>.SetNext(TElement, TElement) DoublyLinkedListMethodsBase<TElement>.SetSize(TElement) DoublyLinkedListMethodsBase<TElement>.IncrementSize() DoublyLinkedListMethodsBase<TElement>.DecrementSize() GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Lists Assembly : cs.temp.dll.dll Syntax public abstract class CircularDoublyLinkedListMethods<TElement> : DoublyLinkedListMethodsBase<TElement> Type Parameters Name Description TElement Remarks Based on https://en.wikipedia.org/wiki/Doubly_linked_list Methods AttachAfter(TElement, TElement) Declaration public void AttachAfter(TElement baseElement, TElement newElement) Parameters Type Name Description TElement baseElement TElement newElement AttachAsFirst(TElement) Declaration public void AttachAsFirst(TElement element) Parameters Type Name Description TElement element AttachAsLast(TElement) Declaration public void AttachAsLast(TElement element) Parameters Type Name Description TElement element AttachBefore(TElement, TElement) Declaration public void AttachBefore(TElement baseElement, TElement newElement) Parameters Type Name Description TElement baseElement TElement newElement Detach(TElement) Declaration public void Detach(TElement element) Parameters Type Name Description TElement element"
  },
  "api/Platform.Tests.Data.Core.ResizableDirectMemoryLinksTests.html": {
    "href": "api/Platform.Tests.Data.Core.ResizableDirectMemoryLinksTests.html",
    "title": "Class ResizableDirectMemoryLinksTests | LinksPlatform",
    "keywords": "Class ResizableDirectMemoryLinksTests Inheritance System.Object ResizableDirectMemoryLinksTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public static class ResizableDirectMemoryLinksTests Methods BasicFileMappedMemoryTest() Declaration public static void BasicFileMappedMemoryTest() BasicHeapMemoryTest() Declaration public static void BasicHeapMemoryTest() NonexistentReferencesHeapMemoryTest() Declaration public static void NonexistentReferencesHeapMemoryTest()"
  },
  "api/Platform.Data.Core.Sequences.StopableSequenceWalker.html": {
    "href": "api/Platform.Data.Core.Sequences.StopableSequenceWalker.html",
    "title": "Class StopableSequenceWalker | LinksPlatform",
    "keywords": "Class StopableSequenceWalker Inheritance System.Object StopableSequenceWalker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class StopableSequenceWalker Remarks Реализованный внутри алгоритм наглядно показывает, что совершенно не обязательна рекурсивная реализация (с вложенным вызовом функцией самой себя), так как стэк можно использовать намного эффективнее при ручном управлении. При оптимизации можно использовать встроенную поддержку стеков в процессор. Решить объединять ли логику в одну функцию, или оставить 4 отдельных реализации? Решить встраивать ли защиту от зацикливания. Альтернативой защиты от закливания может быть заранее известное ограничение на погружение вглубь. А так же качественное распознавание прохода по циклическому графу. Ограничение на уровень глубины рекурсии может позволить использовать уменьшенный размер стека. Можно использовать глобальный стек (или несколько глобальных стеков на каждый поток). Methods WalkLeft<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Func<TLink, Boolean>) Declaration public static bool WalkLeft<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Func<TLink, bool> visit) Parameters Type Name Description TLink sequence System.Func <TLink, TLink> getSource System.Func <TLink, TLink> getTarget System.Func <TLink, System.Boolean > isElement System.Func <TLink, System.Boolean > visit Returns Type Description System.Boolean Type Parameters Name Description TLink WalkRight<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Action<TLink>, Action<TLink>, Func<TLink, Boolean>, Func<TLink, Boolean>) Declaration public static bool WalkRight<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Action<TLink> enter, Action<TLink> exit, Func<TLink, bool> canEnter, Func<TLink, bool> visit) Parameters Type Name Description TLink sequence System.Func <TLink, TLink> getSource System.Func <TLink, TLink> getTarget System.Func <TLink, System.Boolean > isElement System.Action <TLink> enter System.Action <TLink> exit System.Func <TLink, System.Boolean > canEnter System.Func <TLink, System.Boolean > visit Returns Type Description System.Boolean Type Parameters Name Description TLink WalkRight<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Func<TLink, Boolean>) Declaration public static bool WalkRight<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Func<TLink, bool> visit) Parameters Type Name Description TLink sequence System.Func <TLink, TLink> getSource System.Func <TLink, TLink> getTarget System.Func <TLink, System.Boolean > isElement System.Func <TLink, System.Boolean > visit Returns Type Description System.Boolean Type Parameters Name Description TLink"
  },
  "api/Platform.Data.Core.Sequences.DefaultSequenceRightHeightProvider-1.html": {
    "href": "api/Platform.Data.Core.Sequences.DefaultSequenceRightHeightProvider-1.html",
    "title": "Class DefaultSequenceRightHeightProvider<TLink> | LinksPlatform",
    "keywords": "Class DefaultSequenceRightHeightProvider<TLink> Inheritance System.Object DefaultSequenceRightHeightProvider<TLink> Implements ISequenceHeightProvider <TLink> IProvider <TLink, TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class DefaultSequenceRightHeightProvider<TLink> : LinksOperatorBase<TLink>, ISequenceHeightProvider<TLink>, IProvider<TLink, TLink> Type Parameters Name Description TLink Constructors DefaultSequenceRightHeightProvider(ILinks<TLink>, ICreteriaMatcher<TLink>) Declaration public DefaultSequenceRightHeightProvider(ILinks<TLink> links, ICreteriaMatcher<TLink> elementMatcher) Parameters Type Name Description ILinks <TLink> links ICreteriaMatcher <TLink> elementMatcher Methods Get(TLink) Declaration public TLink Get(TLink sequence) Parameters Type Name Description TLink sequence Returns Type Description TLink Implements ISequenceHeightProvider<TLink> IProvider<, >"
  },
  "api/Platform.Data.Core.Triplets.NetMapping.html": {
    "href": "api/Platform.Data.Core.Triplets.NetMapping.html",
    "title": "Enum NetMapping | LinksPlatform",
    "keywords": "Enum NetMapping Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public enum NetMapping : long Fields Name Description Alphabet And Case Character Code ContainedBy Contains Content Empty EmptyContent Group Has IsA IsNotA Letter Link Lower LowerCase Name Of One ParsedFrom Path Set String Sum Text ThatConsistsOf ThatHas ThatIs ThatIsAfter ThatIsBefore ThatIsBetween ThatIsRepresentedBy Thing Upper UpperCase Zero"
  },
  "api/Platform.Examples.XUnitTestsRunnerCLI.html": {
    "href": "api/Platform.Examples.XUnitTestsRunnerCLI.html",
    "title": "Class XUnitTestsRunnerCLI | LinksPlatform",
    "keywords": "Class XUnitTestsRunnerCLI Inheritance System.Object XUnitTestsRunnerCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class XUnitTestsRunnerCLI : ICommandLineInterface Remarks Based on https://github.com/xunit/samples.xunit/blob/master/TestRunner/Program.cs Constructors XUnitTestsRunnerCLI() Declaration public XUnitTestsRunnerCLI() Properties Succeed Declaration public bool Succeed { get; } Property Value Type Description System.Boolean Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Examples.CSVExporter.html": {
    "href": "api/Platform.Examples.CSVExporter.html",
    "title": "Class CSVExporter | LinksPlatform",
    "keywords": "Class CSVExporter Inheritance System.Object CSVExporter CSVSequencesExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class CSVExporter Remarks https://tools.ietf.org/html/rfc4180 Fields _addressToLineNumber Declaration protected Dictionary<ulong, ulong> _addressToLineNumber Field Value Type Description System.Collections.Generic.Dictionary < System.UInt64 , System.UInt64 > _convertUnicodeLinksToCharacters Declaration protected bool _convertUnicodeLinksToCharacters Field Value Type Description System.Boolean _linesCounter Declaration protected ulong _linesCounter Field Value Type Description System.UInt64 _links Declaration protected SynchronizedLinks<ulong> _links Field Value Type Description SynchronizedLinks < System.UInt64 > _linksCounter Declaration protected ulong _linksCounter Field Value Type Description System.UInt64 _referenceByLines Declaration protected bool _referenceByLines Field Value Type Description System.Boolean _unicodeMapped Declaration protected bool _unicodeMapped Field Value Type Description System.Boolean _visited Declaration protected HashSet<ulong> _visited Field Value Type Description HashSet < System.UInt64 > Methods Export(SynchronizedLinks<UInt64>, String, Boolean, Boolean, Boolean, CancellationToken) Declaration public void Export(SynchronizedLinks<ulong> links, string path, bool unicodeMapped, bool convertUnicodeLinksToCharacters, bool referenceByLines, CancellationToken cancellationToken) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links System.String path System.Boolean unicodeMapped System.Boolean convertUnicodeLinksToCharacters System.Boolean referenceByLines CancellationToken cancellationToken FormatLink(UInt64) Declaration protected string FormatLink(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description System.String Visit(UInt64) Declaration protected bool Visit(ulong linkIndex) Parameters Type Name Description System.UInt64 linkIndex Returns Type Description System.Boolean WriteLink(StreamWriter, IList<UInt64>) Declaration protected virtual void WriteLink(StreamWriter writer, IList<ulong> link) Parameters Type Name Description System.IO.StreamWriter writer System.Collections.Generic.IList < System.UInt64 > link"
  },
  "api/Platform.Data.Core.Doublets.LinksConstants-2.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksConstants-2.html",
    "title": "Class LinksConstants<TDecision, TAddress> | LinksPlatform",
    "keywords": "Class LinksConstants<TDecision, TAddress> Inheritance System.Object LinksConstants <TDecision> LinksConstants<TDecision, TAddress> LinksConstants<TDecision, TAddress, TPartIndex> Implements ILinksDecisionConstants <TDecision> ILinksAddressConstants <TAddress> Inherited Members LinksConstants<TDecision>.Continue LinksConstants<TDecision>.Break System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksConstants<TDecision, TAddress> : LinksConstants<TDecision>, ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress> Type Parameters Name Description TDecision TAddress Constructors LinksConstants() Declaration public LinksConstants() Properties Any Возвращает значение, обозначающее любую связь. Declaration public TAddress Any { get; } Property Value Type Description TAddress Remarks Возможно нужно зарезервировать отдельное значение, тогда можно будет создавать все варианты последовательностей в функции Create. Itself Возвращает значение, обозначающее связь-ссылку на саму связь. Declaration public TAddress Itself { get; } Property Value Type Description TAddress MaxPossibleIndex Возвращает максимально возможный индекс существующей связи. Declaration public TAddress MaxPossibleIndex { get; } Property Value Type Description TAddress Remarks Если за каждую константу будет отвечать отдельная связь, диапазон возможных связей будет уменьшен. Благодаря логике конвертации Integer для каждого типа здесь будет максимальное значение этого типа. MinPossibleIndex Возвращает минимально возможный индекс существующей связи. Declaration public TAddress MinPossibleIndex { get; } Property Value Type Description TAddress Null Возвращает значение, обозначающее отсутствие связи. Declaration public TAddress Null { get; } Property Value Type Description TAddress Implements ILinksDecisionConstants<TDecision> ILinksAddressConstants<TAddress>"
  },
  "api/Platform.Examples.IWikipediaStorage-1.html": {
    "href": "api/Platform.Examples.IWikipediaStorage-1.html",
    "title": "Interface IWikipediaStorage<TLink> | LinksPlatform",
    "keywords": "Interface IWikipediaStorage<TLink> Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public interface IWikipediaStorage<TLink> Type Parameters Name Description TLink Methods AttachElementToParent(TLink, TLink) Declaration void AttachElementToParent(TLink elementToAttach, TLink parent) Parameters Type Name Description TLink elementToAttach TLink parent CreateDocument(String) Declaration TLink CreateDocument(string name) Parameters Type Name Description System.String name Returns Type Description TLink CreateElement(String) Declaration TLink CreateElement(string name) Parameters Type Name Description System.String name Returns Type Description TLink CreateTextElement(String) Declaration TLink CreateTextElement(string content) Parameters Type Name Description System.String content Returns Type Description TLink"
  },
  "api/Platform.Sandbox.IterationsCounter.html": {
    "href": "api/Platform.Sandbox.IterationsCounter.html",
    "title": "Class IterationsCounter | LinksPlatform",
    "keywords": "Class IterationsCounter Inheritance System.Object IterationsCounter Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class IterationsCounter : AllSegmentsWalkerBase<char> Fields IterationsCount Declaration public long IterationsCount Field Value Type Description System.Int64 Methods Iteration(Segment<Char>) Declaration protected override void Iteration(Segment<char> segment) Parameters Type Name Description Segment < System.Char > segment"
  },
  "api/Platform.Examples.FileIndexer.html": {
    "href": "api/Platform.Examples.FileIndexer.html",
    "title": "Class FileIndexer | LinksPlatform",
    "keywords": "Class FileIndexer Inheritance System.Object FileIndexer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class FileIndexer Constructors FileIndexer(SynchronizedLinks<UInt64>, SequencesIndexer<UInt64>) Declaration public FileIndexer(SynchronizedLinks<ulong> links, SequencesIndexer<ulong> indexer) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links SequencesIndexer < System.UInt64 > indexer Methods IndexAsync(String, CancellationToken) Declaration public Task IndexAsync(string path, CancellationToken cancellationToken) Parameters Type Name Description System.String path CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task IndexParallel(String, CancellationToken) Declaration public void IndexParallel(string path, CancellationToken cancellationToken) Parameters Type Name Description System.String path CancellationToken cancellationToken IndexSync(String, CancellationToken) Declaration public void IndexSync(string path, CancellationToken cancellationToken) Parameters Type Name Description System.String path CancellationToken cancellationToken"
  },
  "api/Platform.Sandbox.OperationsExperiments.html": {
    "href": "api/Platform.Sandbox.OperationsExperiments.html",
    "title": "Class OperationsExperiments | LinksPlatform",
    "keywords": "Class OperationsExperiments Inheritance System.Object OperationsExperiments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class OperationsExperiments Methods RunExperiment() Declaration public static void RunExperiment()"
  },
  "api/Platform.Data.MasterServer.Program.html": {
    "href": "api/Platform.Data.MasterServer.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.MasterServer Assembly : cs.temp.dll.dll Syntax public class Program Methods Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Data.Core.Collections.Trees.SizedAndThreadedAVLBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.SizedAndThreadedAVLBalancedTreeMethods-1.html",
    "title": "Class SizedAndThreadedAVLBalancedTreeMethods<TElement> | LinksPlatform",
    "keywords": "Class SizedAndThreadedAVLBalancedTreeMethods<TElement> Combination of Size, Height (AVL), and threads. Based on: https://github.com/programmatom/TreeLib/blob/master/TreeLib/TreeLib/Generated/AVLTreeList.cs Which itself based on: https://github.com/GNOME/glib/blob/master/glib/gtree.c Inheritance System.Object GenericCollectionMethodsBase <TElement> BinaryTreeMethodsBase <TElement> SizedAndThreadedAVLBalancedTreeMethods<TElement> Inherited Members BinaryTreeMethodsBase<TElement>.GetLeftPointer(TElement) BinaryTreeMethodsBase<TElement>.GetRightPointer(TElement) BinaryTreeMethodsBase<TElement>.GetLeftValue(TElement) BinaryTreeMethodsBase<TElement>.GetRightValue(TElement) BinaryTreeMethodsBase<TElement>.GetSize(TElement) BinaryTreeMethodsBase<TElement>.SetLeft(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetRight(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetSize(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheLeftOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheRightOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.IncrementSize(TElement) BinaryTreeMethodsBase<TElement>.DecrementSize(TElement) BinaryTreeMethodsBase<TElement>.GetLeftSize(TElement) BinaryTreeMethodsBase<TElement>.GetRightSize(TElement) BinaryTreeMethodsBase<TElement>.GetSizeOrZero(TElement) BinaryTreeMethodsBase<TElement>.FixSize(TElement) BinaryTreeMethodsBase<TElement>.LeftRotate(IntPtr) BinaryTreeMethodsBase<TElement>.LeftRotate(TElement) BinaryTreeMethodsBase<TElement>.RightRotate(IntPtr) BinaryTreeMethodsBase<TElement>.RightRotate(TElement) BinaryTreeMethodsBase<TElement>.Contains(TElement, TElement) BinaryTreeMethodsBase<TElement>.Attach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.Detach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.GetSize(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSizes(IntPtr) BinaryTreeMethodsBase<TElement>.ValidateSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSize(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(IntPtr) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNode(TElement) BinaryTreeMethodsBase<TElement>.PrintNodeValue(TElement, StringBuilder) GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Trees Assembly : cs.temp.dll.dll Syntax public abstract class SizedAndThreadedAVLBalancedTreeMethods<TElement> : BinaryTreeMethodsBase<TElement> Type Parameters Name Description TElement Remarks TODO: Compare performance with and without unchecked. Methods AttachCore(IntPtr, TElement) Declaration protected override void AttachCore(IntPtr root, TElement node) Parameters Type Name Description System.IntPtr root TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.AttachCore(System.IntPtr, TElement) ClearNode(TElement) Declaration protected override void ClearNode(TElement node) Parameters Type Name Description TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.ClearNode(TElement) DecrementBalance(TElement) Declaration protected void DecrementBalance(TElement node) Parameters Type Name Description TElement node DetachCore(IntPtr, TElement) Declaration protected override void DetachCore(IntPtr root, TElement node) Parameters Type Name Description System.IntPtr root TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.DetachCore(System.IntPtr, TElement) GetBalance(TElement) Declaration protected abstract sbyte GetBalance(TElement node) Parameters Type Name Description TElement node Returns Type Description System.SByte GetLeftIsChild(TElement) Declaration protected abstract bool GetLeftIsChild(TElement node) Parameters Type Name Description TElement node Returns Type Description System.Boolean GetLeftOrDefault(TElement) Declaration protected override TElement GetLeftOrDefault(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.GetLeftOrDefault(TElement) GetNext(TElement) Declaration protected TElement GetNext(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetPrevious(TElement) Declaration protected TElement GetPrevious(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetRightIsChild(TElement) Declaration protected abstract bool GetRightIsChild(TElement node) Parameters Type Name Description TElement node Returns Type Description System.Boolean GetRightOrDefault(TElement) Declaration protected override TElement GetRightOrDefault(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.GetRightOrDefault(TElement) IncrementBalance(TElement) Declaration protected void IncrementBalance(TElement node) Parameters Type Name Description TElement node LeftRotateWithBalance(TElement) Declaration protected TElement LeftRotateWithBalance(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement PrintNode(TElement, StringBuilder, Int32) Declaration protected override void PrintNode(TElement node, StringBuilder sb, int level = 0) Parameters Type Name Description TElement node StringBuilder sb System.Int32 level Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.PrintNode(TElement, StringBuilder, System.Int32) RightRotateWithBalance(TElement) Declaration protected TElement RightRotateWithBalance(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement SetBalance(TElement, SByte) Declaration protected abstract void SetBalance(TElement node, sbyte value) Parameters Type Name Description TElement node System.SByte value SetLeftIsChild(TElement, Boolean) Declaration protected abstract void SetLeftIsChild(TElement node, bool value) Parameters Type Name Description TElement node System.Boolean value SetRightIsChild(TElement, Boolean) Declaration protected abstract void SetRightIsChild(TElement node, bool value) Parameters Type Name Description TElement node System.Boolean value"
  },
  "api/Platform.Sandbox.Walker1.html": {
    "href": "api/Platform.Sandbox.Walker1.html",
    "title": "Class Walker1 | LinksPlatform",
    "keywords": "Class Walker1 Inheritance System.Object ConsolePrintedDublicateWalkerBase Walker1 Inherited Members ConsolePrintedDublicateWalkerBase.OnDublicateFound(CharsSegment) ConsolePrintedDublicateWalkerBase.CreateSegment(IList<Char>, Int32, Int32) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Walker1 : ConsolePrintedDublicateWalkerBase Methods GetSegmentFrequency(CharsSegment) Declaration protected override long GetSegmentFrequency(CharsSegment segment) Parameters Type Name Description CharsSegment segment Returns Type Description System.Int64 Iteration(CharsSegment) Declaration protected override void Iteration(CharsSegment segment) Parameters Type Name Description CharsSegment segment SetSegmentFrequency(CharsSegment, Int64) Declaration protected override void SetSegmentFrequency(CharsSegment segment, long frequency) Parameters Type Name Description CharsSegment segment System.Int64 frequency WalkAll(IList<Char>) Declaration public override void WalkAll(IList<char> elements) Parameters Type Name Description System.Collections.Generic.IList < System.Char > elements"
  },
  "api/Platform.Examples.GEXFCSVExporterCLI.html": {
    "href": "api/Platform.Examples.GEXFCSVExporterCLI.html",
    "title": "Class GEXFCSVExporterCLI | LinksPlatform",
    "keywords": "Class GEXFCSVExporterCLI Inheritance System.Object GEXFCSVExporterCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class GEXFCSVExporterCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Data.Core.Doublets.LinksDecoratorBase-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksDecoratorBase-1.html",
    "title": "Class LinksDecoratorBase<T> | LinksPlatform",
    "keywords": "Class LinksDecoratorBase<T> Inheritance System.Object LinksDecoratorBase<T> LinksCascadeDependenciesResolver<TLink> LinksDependenciesValidator<T> LinksInnerReferenceValidator<T> LinksNonExistentReferencesCreator<T> LinksNullToSelfReferenceResolver<TLink> LinksSelfReferenceResolver<TLink> LinksUniquenessResolver<TLink> LinksUniquenessValidator<T> NonNullContentsLinkDeletionResolver<T> Implements ILinks <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public abstract class LinksDecoratorBase<T> : ILinks<T> Type Parameters Name Description T Constructors LinksDecoratorBase(ILinks<T>) Declaration protected LinksDecoratorBase(ILinks<T> links) Parameters Type Name Description ILinks <T> links Fields Links Declaration public readonly ILinks<T> Links Field Value Type Description ILinks <T> Properties Constants Declaration public ILinksCombinedConstants<T, T, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <T, T, System.Int32 > Methods Count(IList<T>) Declaration public virtual T Count(IList<T> restriction) Parameters Type Name Description System.Collections.Generic.IList <T> restriction Returns Type Description T Create() Declaration public virtual T Create() Returns Type Description T Delete(T) Declaration public virtual void Delete(T link) Parameters Type Name Description T link Each(Func<IList<T>, T>, IList<T>) Declaration public virtual T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description System.Func < System.Collections.Generic.IList <T>, T> handler System.Collections.Generic.IList <T> restrictions Returns Type Description T Update(IList<T>) Declaration public virtual T Update(IList<T> restrictions) Parameters Type Name Description System.Collections.Generic.IList <T> restrictions Returns Type Description T Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Sequences.BalancedVariantConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.BalancedVariantConverter-1.html",
    "title": "Class BalancedVariantConverter<TLink> | LinksPlatform",
    "keywords": "Class BalancedVariantConverter<TLink> Inheritance System.Object LinksListToSequenceConverterBase <TLink> BalancedVariantConverter<TLink> Inherited Members LinksListToSequenceConverterBase<TLink>.Links Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class BalancedVariantConverter<TLink> : LinksListToSequenceConverterBase<TLink> Type Parameters Name Description TLink Constructors BalancedVariantConverter(ILinks<TLink>) Declaration public BalancedVariantConverter(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods Convert(IList<TLink>) Declaration public override TLink Convert(IList<TLink> sequence) Parameters Type Name Description System.Collections.Generic.IList <TLink> sequence Returns Type Description TLink Overrides Platform.Data.Core.Sequences.LinksListToSequenceConverterBase<TLink>.Convert(System.Collections.Generic.IList<TLink>)"
  },
  "api/Platform.Tests.Helpers.ArithmeticHelpersTests.html": {
    "href": "api/Platform.Tests.Helpers.ArithmeticHelpersTests.html",
    "title": "Class ArithmeticHelpersTests | LinksPlatform",
    "keywords": "Class ArithmeticHelpersTests Inheritance System.Object ArithmeticHelpersTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class ArithmeticHelpersTests Methods CompiledOperationsTest() Declaration public void CompiledOperationsTest()"
  },
  "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.html",
    "title": "Class UInt64LinksTransactionsLayer | LinksPlatform",
    "keywords": "Class UInt64LinksTransactionsLayer Inheritance System.Object LinksDisposableDecoratorBase < System.UInt64 > UInt64LinksTransactionsLayer Implements ILinks < System.UInt64 > Inherited Members LinksDisposableDecoratorBase<UInt64>.Constants LinksDisposableDecoratorBase<UInt64>.Links LinksDisposableDecoratorBase<UInt64>.Count(IList<UInt64>) LinksDisposableDecoratorBase<UInt64>.Each(Func<IList<UInt64>, UInt64>, IList<UInt64>) LinksDisposableDecoratorBase<UInt64>.AllowMultipleDisposeCalls Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UInt64LinksTransactionsLayer : LinksDisposableDecoratorBase<ulong>, ILinks<ulong> Constructors UInt64LinksTransactionsLayer(ILinks<UInt64>, String) Declaration public UInt64LinksTransactionsLayer(ILinks<ulong> links, string logAddress) Parameters Type Name Description ILinks < System.UInt64 > links System.String logAddress Methods BeginTransaction() Declaration public UInt64LinksTransactionsLayer.Transaction BeginTransaction() Returns Type Description UInt64LinksTransactionsLayer.Transaction Create() Declaration public override ulong Create() Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Create() Delete(UInt64) Declaration public override void Delete(ulong link) Parameters Type Name Description System.UInt64 link Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Delete(System.UInt64) DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.DisposeCore(System.Boolean, System.Boolean) GetLinkValue(UInt64) Declaration public IList<ulong> GetLinkValue(ulong link) Parameters Type Name Description System.UInt64 link Returns Type Description System.Collections.Generic.IList < System.UInt64 > Update(IList<UInt64>) Declaration public override ulong Update(IList<ulong> parts) Parameters Type Name Description System.Collections.Generic.IList < System.UInt64 > parts Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Update(System.Collections.Generic.IList<System.UInt64>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Sequences.SequencesIndexer-1.html": {
    "href": "api/Platform.Data.Core.Sequences.SequencesIndexer-1.html",
    "title": "Class SequencesIndexer<TLink> | LinksPlatform",
    "keywords": "Class SequencesIndexer<TLink> Inheritance System.Object SequencesIndexer<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class SequencesIndexer<TLink> Type Parameters Name Description TLink Constructors SequencesIndexer(ISynchronizedLinks<TLink>) Declaration public SequencesIndexer(ISynchronizedLinks<TLink> links) Parameters Type Name Description ISynchronizedLinks <TLink> links Methods BulkIndex(TLink[]) Declaration public bool BulkIndex(TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description System.Boolean BulkIndexUnsync(TLink[]) Declaration public bool BulkIndexUnsync(TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description System.Boolean CheckIndex(IList<TLink>) Declaration public bool CheckIndex(IList<TLink> sequence) Parameters Type Name Description System.Collections.Generic.IList <TLink> sequence Returns Type Description System.Boolean Index(TLink[]) Индексирует последовательность глобально, и возвращает значение, определяющие была ли запрошенная последовательность проиндексирована ранее. Declaration public bool Index(TLink[] sequence) Parameters Type Name Description TLink[] sequence Последовательность для индексации. Returns Type Description System.Boolean True если последовательность уже была проиндексирована ранее и False если последовательность была проиндексирована только что."
  },
  "api/Platform.Data.Core.Doublets.UnaryNumberToAddressAddOperationConverter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.UnaryNumberToAddressAddOperationConverter-1.html",
    "title": "Class UnaryNumberToAddressAddOperationConverter<TLink> | LinksPlatform",
    "keywords": "Class UnaryNumberToAddressAddOperationConverter<TLink> Inheritance System.Object LinksOperatorBase <TLink> UnaryNumberToAddressAddOperationConverter<TLink> Implements IConverter <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UnaryNumberToAddressAddOperationConverter<TLink> : LinksOperatorBase<TLink>, IConverter<TLink> Type Parameters Name Description TLink Constructors UnaryNumberToAddressAddOperationConverter(ILinks<TLink>, TLink) Declaration public UnaryNumberToAddressAddOperationConverter(ILinks<TLink> links, TLink unaryOne) Parameters Type Name Description ILinks <TLink> links TLink unaryOne Methods Convert(TLink) Declaration public TLink Convert(TLink unaryNumber) Parameters Type Name Description TLink unaryNumber Returns Type Description TLink Implements IConverter<>"
  },
  "api/Platform.Data.Core.Doublets.LinksSelfReferenceResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksSelfReferenceResolver-1.html",
    "title": "Class LinksSelfReferenceResolver<TLink> | LinksPlatform",
    "keywords": "Class LinksSelfReferenceResolver<TLink> Inheritance System.Object LinksDecoratorBase <TLink> LinksSelfReferenceResolver<TLink> Implements ILinks <TLink> Inherited Members LinksDecoratorBase<TLink>.Constants LinksDecoratorBase<TLink>.Links LinksDecoratorBase<TLink>.Count(IList<TLink>) LinksDecoratorBase<TLink>.Create() LinksDecoratorBase<TLink>.Delete(TLink) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksSelfReferenceResolver<TLink> : LinksDecoratorBase<TLink>, ILinks<TLink> Type Parameters Name Description TLink Constructors LinksSelfReferenceResolver(ILinks<TLink>) Declaration public LinksSelfReferenceResolver(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods Each(Func<IList<TLink>, TLink>, IList<TLink>) Declaration public override TLink Each(Func<IList<TLink>, TLink> handler, IList<TLink> restrictions) Parameters Type Name Description System.Func < System.Collections.Generic.IList <TLink>, TLink> handler System.Collections.Generic.IList <TLink> restrictions Returns Type Description TLink Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<TLink>.Each(System.Func<System.Collections.Generic.IList<TLink>, TLink>, System.Collections.Generic.IList<TLink>) Update(IList<TLink>) Declaration public override TLink Update(IList<TLink> restrictions) Parameters Type Name Description System.Collections.Generic.IList <TLink> restrictions Returns Type Description TLink Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<TLink>.Update(System.Collections.Generic.IList<TLink>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Sequences.DuplicateSegmentsProvider-1.html": {
    "href": "api/Platform.Data.Core.Sequences.DuplicateSegmentsProvider-1.html",
    "title": "Class DuplicateSegmentsProvider<TLink> | LinksPlatform",
    "keywords": "Class DuplicateSegmentsProvider<TLink> Inheritance System.Object DuplicateSegmentsProvider<TLink> Implements IProvider < System.Collections.Generic.IList < System.Collections.Generic.KeyValuePair < System.Collections.Generic.IList <TLink>, System.Collections.Generic.IList <TLink>>>> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class DuplicateSegmentsProvider<TLink> : DictionaryBasedDuplicateSegmentsWalkerBase<TLink>, IProvider<IList<KeyValuePair<IList<TLink>, IList<TLink>>>> Type Parameters Name Description TLink Constructors DuplicateSegmentsProvider(ILinks<TLink>, ISequences<TLink>) Declaration public DuplicateSegmentsProvider(ILinks<TLink> links, ISequences<TLink> sequences) Parameters Type Name Description ILinks <TLink> links ISequences <TLink> sequences Methods CreateSegment(IList<TLink>, Int32, Int32) Declaration protected override Segment<TLink> CreateSegment(IList<TLink> elements, int offset, int length) Parameters Type Name Description System.Collections.Generic.IList <TLink> elements System.Int32 offset System.Int32 length Returns Type Description Segment <TLink> Get() Declaration public IList<KeyValuePair<IList<TLink>, IList<TLink>>> Get() Returns Type Description System.Collections.Generic.IList < System.Collections.Generic.KeyValuePair < System.Collections.Generic.IList <TLink>, System.Collections.Generic.IList <TLink>>> OnDublicateFound(Segment<TLink>) Declaration protected override void OnDublicateFound(Segment<TLink> segment) Parameters Type Name Description Segment <TLink> segment Implements IProvider<>"
  },
  "api/Platform.Data.Core.Triplets.Net.html": {
    "href": "api/Platform.Data.Core.Triplets.Net.html",
    "title": "Class Net | LinksPlatform",
    "keywords": "Class Net Inheritance System.Object Net Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public class Net Fields Alphabet Declaration public static Link Alphabet Field Value Type Description Link And Declaration public static Link And Field Value Type Description Link Case Declaration public static Link Case Field Value Type Description Link Character Declaration public static Link Character Field Value Type Description Link Code Declaration public static Link Code Field Value Type Description Link ContainedBy Declaration public static Link ContainedBy Field Value Type Description Link Contains Declaration public static Link Contains Field Value Type Description Link Content Declaration public static Link Content Field Value Type Description Link Empty Declaration public static Link Empty Field Value Type Description Link EmptyContent Declaration public static Link EmptyContent Field Value Type Description Link Group Declaration public static Link Group Field Value Type Description Link Has Declaration public static Link Has Field Value Type Description Link IsA Declaration public static Link IsA Field Value Type Description Link IsNotA Declaration public static Link IsNotA Field Value Type Description Link Letter Declaration public static Link Letter Field Value Type Description Link Link Declaration public static Link Link Field Value Type Description Link Lower Declaration public static Link Lower Field Value Type Description Link LowerCase Declaration public static Link LowerCase Field Value Type Description Link Name Declaration public static Link Name Field Value Type Description Link Of Declaration public static Link Of Field Value Type Description Link One Declaration public static Link One Field Value Type Description Link ParsedFrom Declaration public static Link ParsedFrom Field Value Type Description Link Path Declaration public static Link Path Field Value Type Description Link Set Declaration public static Link Set Field Value Type Description Link String Declaration public static Link String Field Value Type Description Link Sum Declaration public static Link Sum Field Value Type Description Link Text Declaration public static Link Text Field Value Type Description Link ThatConsistsOf Declaration public static Link ThatConsistsOf Field Value Type Description Link ThatHas Declaration public static Link ThatHas Field Value Type Description Link ThatIs Declaration public static Link ThatIs Field Value Type Description Link ThatIsAfter Declaration public static Link ThatIsAfter Field Value Type Description Link ThatIsBefore Declaration public static Link ThatIsBefore Field Value Type Description Link ThatIsBetween Declaration public static Link ThatIsBetween Field Value Type Description Link ThatIsRepresentedBy Declaration public static Link ThatIsRepresentedBy Field Value Type Description Link Thing Declaration public static Link Thing Field Value Type Description Link Upper Declaration public static Link Upper Field Value Type Description Link UpperCase Declaration public static Link UpperCase Field Value Type Description Link Zero Declaration public static Link Zero Field Value Type Description Link Methods CreateLink() Declaration public static Link CreateLink() Returns Type Description Link CreateMappedLink(Object) Declaration public static Link CreateMappedLink(object mapping) Parameters Type Name Description System.Object mapping Returns Type Description Link CreateMappedThing(Object) Declaration public static Link CreateMappedThing(object mapping) Parameters Type Name Description System.Object mapping Returns Type Description Link CreateSet() Declaration public static Link CreateSet() Returns Type Description Link CreateThing() Declaration public static Link CreateThing() Returns Type Description Link Recreate() Declaration public static void Recreate()"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.FrequenciesCacheBasedLinkFrequencyIncrementer-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.FrequenciesCacheBasedLinkFrequencyIncrementer-1.html",
    "title": "Class FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> | LinksPlatform",
    "keywords": "Class FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> Inheritance System.Object FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> : IIncrementer<IList<TLink>> Type Parameters Name Description TLink Constructors FrequenciesCacheBasedLinkFrequencyIncrementer(LinkFrequenciesCache<TLink>) Declaration public FrequenciesCacheBasedLinkFrequencyIncrementer(LinkFrequenciesCache<TLink> cache) Parameters Type Name Description LinkFrequenciesCache <TLink> cache Methods Increment(IList<TLink>) Declaration public IList<TLink> Increment(IList<TLink> sequence) Parameters Type Name Description System.Collections.Generic.IList <TLink> sequence Returns Type Description System.Collections.Generic.IList <TLink> Remarks Sequence itseft is not changed, only frequency of its doublets is incremented."
  },
  "api/Platform.Data.Core.Doublets.LinksUniquenessResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksUniquenessResolver-1.html",
    "title": "Class LinksUniquenessResolver<TLink> | LinksPlatform",
    "keywords": "Class LinksUniquenessResolver<TLink> Inheritance System.Object LinksDecoratorBase <TLink> LinksUniquenessResolver<TLink> LinksCascadeUniquenessAndDependenciesResolver<TLink> Implements ILinks <TLink> Inherited Members LinksDecoratorBase<TLink>.Constants LinksDecoratorBase<TLink>.Links LinksDecoratorBase<TLink>.Count(IList<TLink>) LinksDecoratorBase<TLink>.Each(Func<IList<TLink>, TLink>, IList<TLink>) LinksDecoratorBase<TLink>.Create() LinksDecoratorBase<TLink>.Delete(TLink) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksUniquenessResolver<TLink> : LinksDecoratorBase<TLink>, ILinks<TLink> Type Parameters Name Description TLink Constructors LinksUniquenessResolver(ILinks<TLink>) Declaration public LinksUniquenessResolver(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods ResolveAddressChangeConflict(TLink, TLink) Declaration protected virtual TLink ResolveAddressChangeConflict(TLink oldLinkAddress, TLink newLinkAddress) Parameters Type Name Description TLink oldLinkAddress TLink newLinkAddress Returns Type Description TLink Update(IList<TLink>) Declaration public override TLink Update(IList<TLink> restrictions) Parameters Type Name Description System.Collections.Generic.IList <TLink> restrictions Returns Type Description TLink Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<TLink>.Update(System.Collections.Generic.IList<TLink>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Exceptions.html": {
    "href": "api/Platform.Data.Core.Exceptions.html",
    "title": "Namespace Platform.Data.Core.Exceptions | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Exceptions Classes ArgumentLinkDoesNotExistsException<TLink> ArgumentLinkHasDependenciesException<TLink> LinksLimitReachedException LinkWithSameValueAlreadyExistsException"
  },
  "api/Platform.Examples.WikipediaPagesCounterCLI.html": {
    "href": "api/Platform.Examples.WikipediaPagesCounterCLI.html",
    "title": "Class WikipediaPagesCounterCLI | LinksPlatform",
    "keywords": "Class WikipediaPagesCounterCLI Inheritance System.Object WikipediaPagesCounterCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class WikipediaPagesCounterCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Data.Core.Doublets.Hybrid-1.html": {
    "href": "api/Platform.Data.Core.Doublets.Hybrid-1.html",
    "title": "Class Hybrid<T> | LinksPlatform",
    "keywords": "Class Hybrid<T> Inheritance System.Object Hybrid<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class Hybrid<T> Type Parameters Name Description T Constructors Hybrid(T) Declaration public Hybrid(T value) Parameters Type Name Description T value Hybrid(Object) Declaration public Hybrid(object value) Parameters Type Name Description System.Object value Hybrid(Object, Boolean) Declaration public Hybrid(object value, bool isExternal) Parameters Type Name Description System.Object value System.Boolean isExternal Fields Value Declaration public readonly T Value Field Value Type Description T Properties AbsoluteValue Declaration public long AbsoluteValue { get; } Property Value Type Description System.Int64 IsExternal Declaration public bool IsExternal { get; } Property Value Type Description System.Boolean IsInternal Declaration public bool IsInternal { get; } Property Value Type Description System.Boolean IsNothing Declaration public bool IsNothing { get; } Property Value Type Description System.Boolean Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Operators Explicit(Hybrid<T> to Byte) Declaration public static explicit operator byte (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.Byte Explicit(Hybrid<T> to Int16) Declaration public static explicit operator short (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.Int16 Explicit(Hybrid<T> to Int32) Declaration public static explicit operator int (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.Int32 Explicit(Hybrid<T> to Int64) Declaration public static explicit operator long (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.Int64 Explicit(Hybrid<T> to SByte) Declaration public static explicit operator sbyte (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.SByte Explicit(Hybrid<T> to UInt16) Declaration public static explicit operator ushort (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.UInt16 Explicit(Hybrid<T> to UInt32) Declaration public static explicit operator uint (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.UInt32 Explicit(Hybrid<T> to UInt64) Declaration public static explicit operator ulong (Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description System.UInt64 Explicit(Byte to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(byte integer) Parameters Type Name Description System.Byte integer Returns Type Description Hybrid <T> Explicit(Int16 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(short integer) Parameters Type Name Description System.Int16 integer Returns Type Description Hybrid <T> Explicit(Int32 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(int integer) Parameters Type Name Description System.Int32 integer Returns Type Description Hybrid <T> Explicit(Int64 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(long integer) Parameters Type Name Description System.Int64 integer Returns Type Description Hybrid <T> Explicit(SByte to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(sbyte integer) Parameters Type Name Description System.SByte integer Returns Type Description Hybrid <T> Explicit(UInt16 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(ushort integer) Parameters Type Name Description System.UInt16 integer Returns Type Description Hybrid <T> Explicit(UInt32 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(uint integer) Parameters Type Name Description System.UInt32 integer Returns Type Description Hybrid <T> Explicit(UInt64 to Hybrid<T>) Declaration public static explicit operator Hybrid<T>(ulong integer) Parameters Type Name Description System.UInt64 integer Returns Type Description Hybrid <T> Implicit(T to Hybrid<T>) Declaration public static implicit operator Hybrid<T>(T integer) Parameters Type Name Description T integer Returns Type Description Hybrid <T> Implicit(Hybrid<T> to T) Declaration public static implicit operator T(Hybrid<T> hybrid) Parameters Type Name Description Hybrid <T> hybrid Returns Type Description T"
  },
  "api/Platform.Tests.html": {
    "href": "api/Platform.Tests.html",
    "title": "Namespace Platform.Tests | LinksPlatform",
    "keywords": "Namespace Platform.Tests Classes ComparisonTests ComparisonTests.UInt64Comparer EqualityTests EqualityTests.UInt64EqualityComparer SystemTests Contains tests for features of .NET Framework itself, that are required by current implementations."
  },
  "api/Platform.Tests.ComparisonTests.html": {
    "href": "api/Platform.Tests.ComparisonTests.html",
    "title": "Class ComparisonTests | LinksPlatform",
    "keywords": "Class ComparisonTests Inheritance System.Object ComparisonTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests Assembly : cs.temp.dll.dll Syntax public static class ComparisonTests Methods GreaterOrEqualPerfomanceTest() Declaration public static void GreaterOrEqualPerfomanceTest()"
  },
  "api/Platform.Sandbox.Walker4.html": {
    "href": "api/Platform.Sandbox.Walker4.html",
    "title": "Class Walker4 | LinksPlatform",
    "keywords": "Class Walker4 Inheritance System.Object Walker4 Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Walker4 : DictionaryBasedDuplicateSegmentsWalkerBase<char, CharsSegment> Constructors Walker4() Declaration public Walker4() Methods CreateSegment(IList<Char>, Int32, Int32) Declaration protected override CharsSegment CreateSegment(IList<char> elements, int offset, int length) Parameters Type Name Description System.Collections.Generic.IList < System.Char > elements System.Int32 offset System.Int32 length Returns Type Description CharsSegment OnDublicateFound(CharsSegment) Declaration protected override void OnDublicateFound(CharsSegment segment) Parameters Type Name Description CharsSegment segment WalkAll(IList<Char>) Declaration public override void WalkAll(IList<char> elements) Parameters Type Name Description System.Collections.Generic.IList < System.Char > elements"
  },
  "api/Platform.Sandbox.QueryExecutorExtensions.html": {
    "href": "api/Platform.Sandbox.QueryExecutorExtensions.html",
    "title": "Class QueryExecutorExtensions | LinksPlatform",
    "keywords": "Class QueryExecutorExtensions Представляет класс-контейнер расширений для выполнения произвольных запросов над Links Inheritance System.Object QueryExecutorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class QueryExecutorExtensions Methods Execute<T>(SynchronizedLinks<UInt64>, Expression<Func<SynchronizedLinks<UInt64>, IEnumerable<T>>>) Выполняет запрос query над links и возвращает результат запроса в виде перечисляемого объекта с элементами типа T. Declaration public static IEnumerable<T> Execute<T>(this SynchronizedLinks<ulong> links, Expression<Func<SynchronizedLinks<ulong>, IEnumerable<T>>> query) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links База данных связей, над которой будет выполняться запрос. Expression < System.Func < SynchronizedLinks < System.UInt64 >, System.Collections.Generic.IEnumerable <T>>> query Запрос в виде Linq-выражения. Returns Type Description System.Collections.Generic.IEnumerable <T> Результат запроса в виде перечисляемого объекта с элементами типа T. Type Parameters Name Description T Тип элемента запроса."
  },
  "api/Platform.Sandbox.A.html": {
    "href": "api/Platform.Sandbox.A.html",
    "title": "Class A | LinksPlatform",
    "keywords": "Class A Inheritance System.Object A Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class A Methods Method1() Declaration public static void Method1() Method2() Declaration public static void Method2()"
  },
  "api/Platform.Tests.Data.Core.SequencesTests.html": {
    "href": "api/Platform.Tests.Data.Core.SequencesTests.html",
    "title": "Class SequencesTests | LinksPlatform",
    "keywords": "Class SequencesTests Inheritance System.Object SequencesTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class SequencesTests Methods AllPartialVariantsSearchTest() Declaration public void AllPartialVariantsSearchTest() AllPossibleConnectionsTest() Declaration public void AllPossibleConnectionsTest() AllTreeBreakDownAtSequencesCreationBugTest() Declaration public void AllTreeBreakDownAtSequencesCreationBugTest() AllVariantsSearchTest() Declaration public void AllVariantsSearchTest() BalancedPartialVariantsSearchTest() Declaration public void BalancedPartialVariantsSearchTest() BalancedVariantSearchTest() Declaration public void BalancedVariantSearchTest() CalculateAllUsagesTest() Declaration public void CalculateAllUsagesTest() CompressionEfficiencyTest() Declaration public static void CompressionEfficiencyTest() CompressionStabilityTest() Declaration public static void CompressionStabilityTest() CompressionTest() Declaration public void CompressionTest() CreateAllVariantsTest() Declaration public void CreateAllVariantsTest() IndexTest() Declaration public void IndexTest() PatternMatchTest() Declaration public void PatternMatchTest() RundomNumbersCompressionQualityTest() Declaration public static void RundomNumbersCompressionQualityTest()"
  },
  "api/Platform.Data.Core.Doublets.NonNullContentsLinkDeletionResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.NonNullContentsLinkDeletionResolver-1.html",
    "title": "Class NonNullContentsLinkDeletionResolver<T> | LinksPlatform",
    "keywords": "Class NonNullContentsLinkDeletionResolver<T> Inheritance System.Object LinksDecoratorBase <T> NonNullContentsLinkDeletionResolver<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Update(IList<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class NonNullContentsLinkDeletionResolver<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors NonNullContentsLinkDeletionResolver(ILinks<T>) Declaration public NonNullContentsLinkDeletionResolver(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Delete(T) Declaration public override void Delete(T link) Parameters Type Name Description T link Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Delete(T) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyCounter-1.html",
    "title": "Class TotalSequenceSymbolFrequencyCounter<TLink> | LinksPlatform",
    "keywords": "Class TotalSequenceSymbolFrequencyCounter<TLink> Inheritance System.Object TotalSequenceSymbolFrequencyCounter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class TotalSequenceSymbolFrequencyCounter<TLink> : ICounter<TLink, TLink> Type Parameters Name Description TLink Constructors TotalSequenceSymbolFrequencyCounter(ILinks<TLink>) Declaration public TotalSequenceSymbolFrequencyCounter(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods Count(TLink) Declaration public TLink Count(TLink symbol) Parameters Type Name Description TLink symbol Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Triplets.html": {
    "href": "api/Platform.Data.Core.Triplets.html",
    "title": "Namespace Platform.Data.Core.Triplets | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Triplets Classes CharacterHelpers GexfExporter LinkConverter LinkExtensions Net NumberHelpers SequenceHelpers Structs Link LinkDefinition Enums CharacterHelpers.CharacterMapping NetMapping Delegates Link.CreatedDelegate Link.DeletedDelegate Link.UpdatedDelegate"
  },
  "api/Platform.Data.Core.Exceptions.ArgumentLinkHasDependenciesException-1.html": {
    "href": "api/Platform.Data.Core.Exceptions.ArgumentLinkHasDependenciesException-1.html",
    "title": "Class ArgumentLinkHasDependenciesException<TLink> | LinksPlatform",
    "keywords": "Class ArgumentLinkHasDependenciesException<TLink> Inheritance System.Object System.Exception System.SystemException System.ArgumentException ArgumentLinkHasDependenciesException<TLink> Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.ArgumentException.Message System.ArgumentException.ParamName System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetType() System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Exceptions Assembly : cs.temp.dll.dll Syntax public class ArgumentLinkHasDependenciesException<TLink> : ArgumentException, ISerializable, _Exception Type Parameters Name Description TLink Constructors ArgumentLinkHasDependenciesException(TLink) Declaration public ArgumentLinkHasDependenciesException(TLink link) Parameters Type Name Description TLink link ArgumentLinkHasDependenciesException(TLink, String) Declaration public ArgumentLinkHasDependenciesException(TLink link, string paramName) Parameters Type Name Description TLink link System.String paramName Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Platform.Examples.WikipediaLinksStorage.html": {
    "href": "api/Platform.Examples.WikipediaLinksStorage.html",
    "title": "Class WikipediaLinksStorage | LinksPlatform",
    "keywords": "Class WikipediaLinksStorage Inheritance System.Object WikipediaLinksStorage Implements IWikipediaStorage < System.UInt64 > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class WikipediaLinksStorage : IWikipediaStorage<ulong> Constructors WikipediaLinksStorage(Sequences) Declaration public WikipediaLinksStorage(Sequences sequences) Parameters Type Name Description Sequences sequences Methods AttachElementToParent(UInt64, UInt64) Declaration public void AttachElementToParent(ulong elementToAttach, ulong parent) Parameters Type Name Description System.UInt64 elementToAttach System.UInt64 parent CreateDocument(String) Declaration public ulong CreateDocument(string name) Parameters Type Name Description System.String name Returns Type Description System.UInt64 CreateElement(String) Declaration public ulong CreateElement(string name) Parameters Type Name Description System.String name Returns Type Description System.UInt64 CreateTextElement(String) Declaration public ulong CreateTextElement(string content) Parameters Type Name Description System.String content Returns Type Description System.UInt64 Implements IWikipediaStorage<TLink>"
  },
  "api/Platform.Data.SlaveServer.html": {
    "href": "api/Platform.Data.SlaveServer.html",
    "title": "Namespace Platform.Data.SlaveServer | LinksPlatform",
    "keywords": "Namespace Platform.Data.SlaveServer Classes Program"
  },
  "api/Platform.Sandbox.DllImportTest.html": {
    "href": "api/Platform.Sandbox.DllImportTest.html",
    "title": "Class DllImportTest | LinksPlatform",
    "keywords": "Class DllImportTest Представляет тест, который позволит определить необходимо ли указывать расширение файла при подключении библиотеки. TODO: Проверить на пользовательских DLL TODO: Далее протестировать на CoreCLR, Mono Inheritance System.Object DllImportTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class DllImportTest Methods MessageBox(IntPtr, String, String, UInt32) Declaration public static int MessageBox(IntPtr hWnd, string text, string caption, uint type) Parameters Type Name Description System.IntPtr hWnd System.String text System.String caption System.UInt32 type Returns Type Description System.Int32 Test() Declaration public static void Test()"
  },
  "api/Platform.Data.Core.Doublets.UnaryNumberToAddressOrOperationConverter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.UnaryNumberToAddressOrOperationConverter-1.html",
    "title": "Class UnaryNumberToAddressOrOperationConverter<TLink> | LinksPlatform",
    "keywords": "Class UnaryNumberToAddressOrOperationConverter<TLink> Inheritance System.Object LinksOperatorBase <TLink> UnaryNumberToAddressOrOperationConverter<TLink> Implements IConverter <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UnaryNumberToAddressOrOperationConverter<TLink> : LinksOperatorBase<TLink>, IConverter<TLink> Type Parameters Name Description TLink Constructors UnaryNumberToAddressOrOperationConverter(ILinks<TLink>, IConverter<Int32, TLink>) Declaration public UnaryNumberToAddressOrOperationConverter(ILinks<TLink> links, IConverter<int, TLink> powerOf2ToUnaryNumberConverter) Parameters Type Name Description ILinks <TLink> links IConverter < System.Int32 , TLink> powerOf2ToUnaryNumberConverter Methods Convert(TLink) Declaration public TLink Convert(TLink sourceNumber) Parameters Type Name Description TLink sourceNumber Returns Type Description TLink Implements IConverter<>"
  },
  "api/Platform.Data.Core.Sequences.html": {
    "href": "api/Platform.Data.Core.Sequences.html",
    "title": "Namespace Platform.Data.Core.Sequences | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Sequences Classes BalancedVariantConverter<TLink> CachedSequenceHeightProvider<TLink> CompressingConverter<TLink> DefaultSequenceAppender<TLink> DefaultSequenceRightHeightProvider<TLink> DuplicateSegmentsCounter<TLink> DuplicateSegmentsProvider<TLink> LeftSequenceWalker<TLink> LinksListToSequenceConverterBase<TLink> MarkedSequenceMatcher<TLink> OptimalVariantConverter<TLink> RightSequenceWalker<TLink> Sequences Представляет коллекцию последовательностей связей. Sequences.Matcher Sequences.PatternMatcher SequencesExtensions SequencesIndexer<TLink> SequenceToItsLocalElementLevelsConverter<TLink> SequenceWalker SequenceWalkerBase<TLink> StopableSequenceWalker UnicodeMap Structs SequencesOptions<TLink> Interfaces ISequenceAppender<TLink> ISequenceHeightProvider<TLink> ISequences<TLink> ISequenceWalker<TLink>"
  },
  "api/Platform.Tests.Collections.StringTests.html": {
    "href": "api/Platform.Tests.Collections.StringTests.html",
    "title": "Class StringTests | LinksPlatform",
    "keywords": "Class StringTests Inheritance System.Object StringTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Collections Assembly : cs.temp.dll.dll Syntax public class StringTests Methods CapitalizeFirstLetterTest() Declaration public static void CapitalizeFirstLetterTest()"
  },
  "api/Platform.Data.Core.Collections.html": {
    "href": "api/Platform.Data.Core.Collections.html",
    "title": "Namespace Platform.Data.Core.Collections | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Collections Classes GenericCollectionMethodsBase<TElement>"
  },
  "api/Platform.Data.Core.Collections.Trees.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.html",
    "title": "Namespace Platform.Data.Core.Collections.Trees | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Collections.Trees Classes BinaryTreeMethodsBase<TElement> SizeBalancedTreeMethods<TElement> SizeBalancedTreeMethods2<TElement> SizedAndThreadedAVLBalancedTreeMethods<TElement> Combination of Size, Height (AVL), and threads. Based on: https://github.com/programmatom/TreeLib/blob/master/TreeLib/TreeLib/Generated/AVLTreeList.cs Which itself based on: https://github.com/GNOME/glib/blob/master/glib/gtree.c"
  },
  "api/Platform.Data.Core.Doublets.LinksNonExistentReferencesCreator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksNonExistentReferencesCreator-1.html",
    "title": "Class LinksNonExistentReferencesCreator<T> | LinksPlatform",
    "keywords": "Class LinksNonExistentReferencesCreator<T> Inheritance System.Object LinksDecoratorBase <T> LinksNonExistentReferencesCreator<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Delete(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksNonExistentReferencesCreator<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Remarks Not practical if newSource and newTarget are too big. To be able to use practical version we should allow to create link at any specific location inside ResizableDirectMemoryLinks. This in turn will require to implement not a list of empty links, but a list of ranges to store it more efficiently. Constructors LinksNonExistentReferencesCreator(ILinks<T>) Declaration public LinksNonExistentReferencesCreator(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description System.Collections.Generic.IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(System.Collections.Generic.IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksCascadeUniquenessAndDependenciesResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksCascadeUniquenessAndDependenciesResolver-1.html",
    "title": "Class LinksCascadeUniquenessAndDependenciesResolver<TLink> | LinksPlatform",
    "keywords": "Class LinksCascadeUniquenessAndDependenciesResolver<TLink> Inheritance System.Object LinksDecoratorBase <TLink> LinksUniquenessResolver <TLink> LinksCascadeUniquenessAndDependenciesResolver<TLink> Implements ILinks <TLink> Inherited Members LinksUniquenessResolver<TLink>.Update(IList<TLink>) LinksDecoratorBase<TLink>.Constants LinksDecoratorBase<TLink>.Links LinksDecoratorBase<TLink>.Count(IList<TLink>) LinksDecoratorBase<TLink>.Each(Func<IList<TLink>, TLink>, IList<TLink>) LinksDecoratorBase<TLink>.Create() LinksDecoratorBase<TLink>.Delete(TLink) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksCascadeUniquenessAndDependenciesResolver<TLink> : LinksUniquenessResolver<TLink>, ILinks<TLink> Type Parameters Name Description TLink Constructors LinksCascadeUniquenessAndDependenciesResolver(ILinks<TLink>) Declaration public LinksCascadeUniquenessAndDependenciesResolver(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods ResolveAddressChangeConflict(TLink, TLink) Declaration protected override TLink ResolveAddressChangeConflict(TLink oldLinkAddress, TLink newLinkAddress) Parameters Type Name Description TLink oldLinkAddress TLink newLinkAddress Returns Type Description TLink Overrides Platform.Data.Core.Doublets.LinksUniquenessResolver<TLink>.ResolveAddressChangeConflict(TLink, TLink) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Collections.GenericCollectionMethodsBase-1.html": {
    "href": "api/Platform.Data.Core.Collections.GenericCollectionMethodsBase-1.html",
    "title": "Class GenericCollectionMethodsBase<TElement> | LinksPlatform",
    "keywords": "Class GenericCollectionMethodsBase<TElement> Inheritance System.Object GenericCollectionMethodsBase<TElement> DoublyLinkedListMethodsBase<TElement> BinaryTreeMethodsBase<TElement> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections Assembly : cs.temp.dll.dll Syntax public abstract class GenericCollectionMethodsBase<TElement> Type Parameters Name Description TElement Methods Add(TElement, TElement) Declaration protected virtual TElement Add(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description TElement Decrement(TElement) Declaration protected virtual TElement Decrement(TElement value) Parameters Type Name Description TElement value Returns Type Description TElement EqualToZero(TElement) Declaration protected virtual bool EqualToZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean GetOne() Declaration protected virtual TElement GetOne() Returns Type Description TElement GetTwo() Declaration protected virtual TElement GetTwo() Returns Type Description TElement GetZero() Declaration protected virtual TElement GetZero() Returns Type Description TElement GreaterOrEqualThan(TElement, TElement) Declaration protected virtual bool GreaterOrEqualThan(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean GreaterOrEqualThanZero(TElement) Declaration protected virtual bool GreaterOrEqualThanZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean GreaterThan(TElement, TElement) Declaration protected virtual bool GreaterThan(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean GreaterThanZero(TElement) Declaration protected virtual bool GreaterThanZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean Increment(TElement) Declaration protected virtual TElement Increment(TElement value) Parameters Type Name Description TElement value Returns Type Description TElement IsEquals(TElement, TElement) Declaration protected virtual bool IsEquals(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean LessOrEqualThan(TElement, TElement) Declaration protected virtual bool LessOrEqualThan(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean LessOrEqualThanZero(TElement) Declaration protected virtual bool LessOrEqualThanZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean LessThan(TElement, TElement) Declaration protected virtual bool LessThan(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean LessThanZero(TElement) Declaration protected virtual bool LessThanZero(TElement value) Parameters Type Name Description TElement value Returns Type Description System.Boolean Subtract(TElement, TElement) Declaration protected virtual TElement Subtract(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description TElement ValueEqualToZero(IntPtr) Declaration protected virtual bool ValueEqualToZero(IntPtr pointer) Parameters Type Name Description System.IntPtr pointer Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Exceptions.LinkWithSameValueAlreadyExistsException.html": {
    "href": "api/Platform.Data.Core.Exceptions.LinkWithSameValueAlreadyExistsException.html",
    "title": "Class LinkWithSameValueAlreadyExistsException | LinksPlatform",
    "keywords": "Class LinkWithSameValueAlreadyExistsException Inheritance System.Object System.Exception LinkWithSameValueAlreadyExistsException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Exceptions Assembly : cs.temp.dll.dll Syntax public class LinkWithSameValueAlreadyExistsException : Exception, ISerializable, _Exception Constructors LinkWithSameValueAlreadyExistsException(String) Declaration public LinkWithSameValueAlreadyExistsException(string message = \"Связь с таким же значением уже существует.\") Parameters Type Name Description System.String message Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Platform.Data.Core.Doublets.StackExtensions.html": {
    "href": "api/Platform.Data.Core.Doublets.StackExtensions.html",
    "title": "Class StackExtensions | LinksPlatform",
    "keywords": "Class StackExtensions Inheritance System.Object StackExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public static class StackExtensions Methods CreateStack<TLink>(ILinks<TLink>, TLink) Declaration public static TLink CreateStack<TLink>(this ILinks<TLink> links, TLink stackMarker) Parameters Type Name Description ILinks <TLink> links TLink stackMarker Returns Type Description TLink Type Parameters Name Description TLink DeleteStack<TLink>(ILinks<TLink>, TLink) Declaration public static void DeleteStack<TLink>(this ILinks<TLink> links, TLink stack) Parameters Type Name Description ILinks <TLink> links TLink stack Type Parameters Name Description TLink"
  },
  "api/Platform.Data.Core.Doublets.ResizableDirectMemoryLinks-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ResizableDirectMemoryLinks-1.html",
    "title": "Class ResizableDirectMemoryLinks<TLink> | LinksPlatform",
    "keywords": "Class ResizableDirectMemoryLinks<TLink> Inheritance System.Object ResizableDirectMemoryLinks<TLink> Implements ILinks <TLink> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class ResizableDirectMemoryLinks<TLink> : DisposableBase, ILinks<TLink> Type Parameters Name Description TLink Remarks TODO: Вместо address и size принимать IMemory (возможно потребуется добавить Step и StepSize). Constructors ResizableDirectMemoryLinks(IResizableDirectMemory) Declaration public ResizableDirectMemoryLinks(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory ResizableDirectMemoryLinks(IResizableDirectMemory, Int64) Declaration public ResizableDirectMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory memory System.Int64 memoryReservationStep ResizableDirectMemoryLinks(String) Declaration public ResizableDirectMemoryLinks(string address) Parameters Type Name Description System.String address ResizableDirectMemoryLinks(String, Int64) Создаёт экземпляр базы данных Links в файле по указанному адресу, с указанным минимальным шагом расширения базы данных. Declaration public ResizableDirectMemoryLinks(string address, long memoryReservationStep) Parameters Type Name Description System.String address Полный пусть к файлу базы данных. System.Int64 memoryReservationStep Минимальный шаг расширения базы данных в байтах. Fields DefaultLinksSizeStep Declaration public static readonly long DefaultLinksSizeStep Field Value Type Description System.Int64 LinkHeaderSizeInBytes Declaration public static readonly int LinkHeaderSizeInBytes Field Value Type Description System.Int32 LinkSizeInBytes Возвращает размер одной связи в байтах. Declaration public static readonly int LinkSizeInBytes Field Value Type Description System.Int32 Properties AllowMultipleDisposeCalls Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description System.Boolean Constants Declaration public ILinksCombinedConstants<TLink, TLink, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <TLink, TLink, System.Int32 > Methods Count(IList<TLink>) Declaration public TLink Count(IList<TLink> restrictions) Parameters Type Name Description System.Collections.Generic.IList <TLink> restrictions Returns Type Description TLink Create() Declaration public TLink Create() Returns Type Description TLink Remarks TODO: Возможно нужно будет заполнение нулями, если внешнее API ими не заполняет пространство Delete(TLink) Declaration public void Delete(TLink link) Parameters Type Name Description TLink link DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Each(Func<IList<TLink>, TLink>, IList<TLink>) Declaration public TLink Each(Func<IList<TLink>, TLink> handler, IList<TLink> restrictions) Parameters Type Name Description System.Func < System.Collections.Generic.IList <TLink>, TLink> handler System.Collections.Generic.IList <TLink> restrictions Returns Type Description TLink GetLinkStruct(TLink) Declaration public Link<TLink> GetLinkStruct(TLink linkIndex) Parameters Type Name Description TLink linkIndex Returns Type Description Link <TLink> Update(IList<TLink>) Declaration public TLink Update(IList<TLink> values) Parameters Type Name Description System.Collections.Generic.IList <TLink> values Returns Type Description TLink Remarks TODO: Возможно можно перемещать значения, если указан индекс, но значение существует в другом месте (но не в менеджере памяти, а в логике Links) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Triplets.CharacterHelpers.html": {
    "href": "api/Platform.Data.Core.Triplets.CharacterHelpers.html",
    "title": "Class CharacterHelpers | LinksPlatform",
    "keywords": "Class CharacterHelpers Inheritance System.Object CharacterHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class CharacterHelpers Methods FromChar(Char) Declaration public static Link FromChar(char character) Parameters Type Name Description System.Char character Returns Type Description Link IsChar(Link) Declaration public static bool IsChar(Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean Recreate() Declaration public static void Recreate() ToChar(Link) Declaration public static char ToChar(Link link) Parameters Type Name Description Link link Returns Type Description System.Char"
  },
  "api/Platform.Data.Core.Sequences.SequencesExtensions.html": {
    "href": "api/Platform.Data.Core.Sequences.SequencesExtensions.html",
    "title": "Class SequencesExtensions | LinksPlatform",
    "keywords": "Class SequencesExtensions Inheritance System.Object SequencesExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public static class SequencesExtensions Methods Create<TLink>(ISequences<TLink>, IList<TLink[]>) Declaration public static TLink Create<TLink>(this ISequences<TLink> sequences, IList<TLink[]> groupedSequence) Parameters Type Name Description ISequences <TLink> sequences System.Collections.Generic.IList <TLink[]> groupedSequence Returns Type Description TLink Type Parameters Name Description TLink"
  },
  "api/Platform.Sandbox.TextParser.State.html": {
    "href": "api/Platform.Sandbox.TextParser.State.html",
    "title": "Class TextParser.State | LinksPlatform",
    "keywords": "Class TextParser.State Inheritance System.Object TextParser.State Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax protected class State Fields ParsedFromPath Declaration public string ParsedFromPath Field Value Type Description System.String ResultSequence Declaration public Link ResultSequence Field Value Type Description Link"
  },
  "api/Platform.Sandbox.Transactions.html": {
    "href": "api/Platform.Sandbox.Transactions.html",
    "title": "Class Transactions | LinksPlatform",
    "keywords": "Class Transactions Inheritance System.Object Transactions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class Transactions Methods Run() Declaration public static void Run()"
  },
  "api/Platform.Data.WebTerminal.Models.ErrorViewModel.html": {
    "href": "api/Platform.Data.WebTerminal.Models.ErrorViewModel.html",
    "title": "Class ErrorViewModel | LinksPlatform",
    "keywords": "Class ErrorViewModel Inheritance System.Object ErrorViewModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.WebTerminal.Models Assembly : cs.temp.dll.dll Syntax public class ErrorViewModel Properties RequestId Declaration public string RequestId { get; set; } Property Value Type Description System.String ShowRequestId Declaration public bool ShowRequestId { get; } Property Value Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Doublets.UInt64Links.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64Links.html",
    "title": "Class UInt64Links | LinksPlatform",
    "keywords": "Class UInt64Links Представляет объект для работы с базой данных (файлом) в формате Links (массива взаимосвязей). Inheritance System.Object LinksDisposableDecoratorBase < System.UInt64 > UInt64Links Implements ILinks < System.UInt64 > Inherited Members LinksDisposableDecoratorBase<UInt64>.Constants LinksDisposableDecoratorBase<UInt64>.Links LinksDisposableDecoratorBase<UInt64>.Count(IList<UInt64>) LinksDisposableDecoratorBase<UInt64>.AllowMultipleDisposeCalls LinksDisposableDecoratorBase<UInt64>.DisposeCore(Boolean, Boolean) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UInt64Links : LinksDisposableDecoratorBase<ulong>, ILinks<ulong> Remarks Возможные оптимизации: Объединение в одном поле Source и Target с уменьшением до 32 бит. меньше объём БД меньше производительность больше ограничение на количество связей в БД) Ленивое хранение размеров поддеревьев (расчитываемое по мере использования БД) меньше объём БД больше сложность AVL - высота дерева может позволить точно расчитать размер дерева, нет необходимости в SBT. AVL дерево можно прошить. Текущее теоретическое ограничение на размер связей - long.MaxValue Желательно реализовать поддержку переключения между деревьями и битовыми индексами (битовыми строками) - вариант матрицы (выстраеваемой лениво). Решить отключать ли проверки при компиляции под Release. Т.е. исключения будут выбрасываться только при #if DEBUG Constructors UInt64Links(ILinks<UInt64>) Declaration public UInt64Links(ILinks<ulong> links) Parameters Type Name Description ILinks < System.UInt64 > links Methods Create() Declaration public override ulong Create() Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Create() Delete(UInt64) Удаляет связь с указанным индексом. Declaration public override void Delete(ulong link) Parameters Type Name Description System.UInt64 link Индекс удаляемой связи. Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Delete(System.UInt64) Each(Func<IList<UInt64>, UInt64>, IList<UInt64>) Declaration public override ulong Each(Func<IList<ulong>, ulong> handler, IList<ulong> restrictions) Parameters Type Name Description System.Func < System.Collections.Generic.IList < System.UInt64 >, System.UInt64 > handler System.Collections.Generic.IList < System.UInt64 > restrictions Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Each(System.Func<System.Collections.Generic.IList<System.UInt64>, System.UInt64>, System.Collections.Generic.IList<System.UInt64>) Update(IList<UInt64>) Declaration public override ulong Update(IList<ulong> restrictions) Parameters Type Name Description System.Collections.Generic.IList < System.UInt64 > restrictions Returns Type Description System.UInt64 Overrides Platform.Data.Core.Doublets.LinksDisposableDecoratorBase<System.UInt64>.Update(System.Collections.Generic.IList<System.UInt64>) Implements ILinks<TLink>"
  },
  "api/Platform.Examples.ICommandLineInterface.html": {
    "href": "api/Platform.Examples.ICommandLineInterface.html",
    "title": "Interface ICommandLineInterface | LinksPlatform",
    "keywords": "Interface ICommandLineInterface Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public interface ICommandLineInterface Methods Run(String[]) Declaration void Run(params string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Data.WebTerminal.Controllers.LinksController.html": {
    "href": "api/Platform.Data.WebTerminal.Controllers.LinksController.html",
    "title": "Class LinksController | LinksPlatform",
    "keywords": "Class LinksController Inheritance System.Object LinksController Namespace : Platform.Data.WebTerminal.Controllers Assembly : cs.temp.dll.dll Syntax public class LinksController : Controller Methods Index(Int64) Declaration public IActionResult Index(long id = 0L) Parameters Type Name Description System.Int64 id Returns Type Description IActionResult Infinite(Int64) Declaration public IActionResult Infinite(long id = 0L) Parameters Type Name Description System.Int64 id Returns Type Description IActionResult"
  },
  "api/Platform.Tests.Helpers.BitwiseHelpersTests.html": {
    "href": "api/Platform.Tests.Helpers.BitwiseHelpersTests.html",
    "title": "Class BitwiseHelpersTests | LinksPlatform",
    "keywords": "Class BitwiseHelpersTests Inheritance System.Object BitwiseHelpersTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class BitwiseHelpersTests Methods GetLowestBitPositionTest(UInt64, Int32) Declaration public void GetLowestBitPositionTest(ulong value, int expectedPosition) Parameters Type Name Description System.UInt64 value System.Int32 expectedPosition PartialReadWriteTest() Declaration public void PartialReadWriteTest()"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.html",
    "title": "Namespace Platform.Data.Core.Sequences.Frequencies.Counters | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Sequences.Frequencies.Counters Classes MarkedSequenceSymbolFrequencyOneOffCounter<TLink> SequenceSymbolFrequencyOneOffCounter<TLink> TotalMarkedSequenceSymbolFrequencyCounter<TLink> TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> TotalSequenceSymbolFrequencyCounter<TLink> TotalSequenceSymbolFrequencyOneOffCounter<TLink>"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.SequenceSymbolFrequencyOneOffCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.SequenceSymbolFrequencyOneOffCounter-1.html",
    "title": "Class SequenceSymbolFrequencyOneOffCounter<TLink> | LinksPlatform",
    "keywords": "Class SequenceSymbolFrequencyOneOffCounter<TLink> Inheritance System.Object SequenceSymbolFrequencyOneOffCounter<TLink> MarkedSequenceSymbolFrequencyOneOffCounter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class SequenceSymbolFrequencyOneOffCounter<TLink> : ICounter<TLink> Type Parameters Name Description TLink Constructors SequenceSymbolFrequencyOneOffCounter(ILinks<TLink>, TLink, TLink) Declaration public SequenceSymbolFrequencyOneOffCounter(ILinks<TLink> links, TLink sequenceLink, TLink symbol) Parameters Type Name Description ILinks <TLink> links TLink sequenceLink TLink symbol Fields _links Declaration protected readonly ILinks<TLink> _links Field Value Type Description ILinks <TLink> _sequenceLink Declaration protected readonly TLink _sequenceLink Field Value Type Description TLink _symbol Declaration protected readonly TLink _symbol Field Value Type Description TLink _total Declaration protected TLink _total Field Value Type Description TLink Methods Count() Declaration public virtual TLink Count() Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Sequences.SequenceWalkerBase-1.html": {
    "href": "api/Platform.Data.Core.Sequences.SequenceWalkerBase-1.html",
    "title": "Class SequenceWalkerBase<TLink> | LinksPlatform",
    "keywords": "Class SequenceWalkerBase<TLink> Inheritance System.Object SequenceWalkerBase<TLink> LeftSequenceWalker<TLink> RightSequenceWalker<TLink> Implements ISequenceWalker <TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public abstract class SequenceWalkerBase<TLink> : LinksOperatorBase<TLink>, ISequenceWalker<TLink> Type Parameters Name Description TLink Constructors SequenceWalkerBase(ILinks<TLink>) Declaration protected SequenceWalkerBase(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods GetNextElementAfterPop(IList<TLink>) Declaration protected abstract IList<TLink> GetNextElementAfterPop(IList<TLink> element) Parameters Type Name Description System.Collections.Generic.IList <TLink> element Returns Type Description System.Collections.Generic.IList <TLink> GetNextElementAfterPush(IList<TLink>) Declaration protected abstract IList<TLink> GetNextElementAfterPush(IList<TLink> element) Parameters Type Name Description System.Collections.Generic.IList <TLink> element Returns Type Description System.Collections.Generic.IList <TLink> IsElement(IList<TLink>) Declaration protected virtual bool IsElement(IList<TLink> elementLink) Parameters Type Name Description System.Collections.Generic.IList <TLink> elementLink Returns Type Description System.Boolean Walk(TLink) Declaration public IEnumerable<IList<TLink>> Walk(TLink sequence) Parameters Type Name Description TLink sequence Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.IList <TLink>> WalkContents(IList<TLink>) Declaration protected abstract IEnumerable<IList<TLink>> WalkContents(IList<TLink> element) Parameters Type Name Description System.Collections.Generic.IList <TLink> element Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.IList <TLink>> Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Core.Sequences.Sequences.PatternMatcher.html": {
    "href": "api/Platform.Data.Core.Sequences.Sequences.PatternMatcher.html",
    "title": "Class Sequences.PatternMatcher | LinksPlatform",
    "keywords": "Class Sequences.PatternMatcher Inheritance System.Object SequenceWalkerBase < System.UInt64 > RightSequenceWalker < System.UInt64 > Sequences.PatternMatcher Implements ISequenceWalker < System.UInt64 > Inherited Members RightSequenceWalker<UInt64>.GetNextElementAfterPop(IList<UInt64>) RightSequenceWalker<UInt64>.GetNextElementAfterPush(IList<UInt64>) RightSequenceWalker<UInt64>.WalkContents(IList<UInt64>) SequenceWalkerBase<UInt64>.Walk(UInt64) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class PatternMatcher : RightSequenceWalker<ulong>, ISequenceWalker<ulong> Constructors PatternMatcher(Sequences, LinkIndex[], HashSet<LinkIndex>) Declaration public PatternMatcher(Sequences sequences, LinkIndex[] patternSequence, HashSet<LinkIndex> results) Parameters Type Name Description Sequences sequences LinkIndex [] patternSequence HashSet < LinkIndex > results Methods AddAllPatternMatchedToResults(IEnumerable<UInt64>) Declaration public void AddAllPatternMatchedToResults(IEnumerable<ulong> sequencesToMatch) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.UInt64 > sequencesToMatch IsElement(IList<UInt64>) Declaration protected override bool IsElement(IList<ulong> link) Parameters Type Name Description System.Collections.Generic.IList < System.UInt64 > link Returns Type Description System.Boolean Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<System.UInt64>.IsElement(System.Collections.Generic.IList<System.UInt64>) PatternMatch(LinkIndex) Declaration public bool PatternMatch(LinkIndex sequenceToMatch) Parameters Type Name Description LinkIndex sequenceToMatch Returns Type Description System.Boolean Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.LinkFrequency-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.LinkFrequency-1.html",
    "title": "Class LinkFrequency<TLink> | LinksPlatform",
    "keywords": "Class LinkFrequency<TLink> Inheritance System.Object LinkFrequency<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class LinkFrequency<TLink> Type Parameters Name Description TLink Constructors LinkFrequency() Declaration public LinkFrequency() LinkFrequency(TLink, TLink) Declaration public LinkFrequency(TLink frequency, TLink link) Parameters Type Name Description TLink frequency TLink link Fields Frequency Declaration public TLink Frequency Field Value Type Description TLink Link Declaration public TLink Link Field Value Type Description TLink Methods DecrementFrequency() Declaration public void DecrementFrequency() IncrementFrequency() Declaration public void IncrementFrequency() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/Platform.Sandbox.OperationsExperiments.Mapping.html": {
    "href": "api/Platform.Sandbox.OperationsExperiments.Mapping.html",
    "title": "Enum OperationsExperiments.Mapping | LinksPlatform",
    "keywords": "Enum OperationsExperiments.Mapping Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public enum Mapping Fields Name Description Absence Argument As Creation Deletion Execution For From InCaseMatchingValueIs Itself Linker Links OfMatchingOperationFrom Reference Representation Result Selection Source Target ThatExactlyIs To Update With"
  },
  "api/Platform.Tests.Helpers.MathHelpersTests.html": {
    "href": "api/Platform.Tests.Helpers.MathHelpersTests.html",
    "title": "Class MathHelpersTests | LinksPlatform",
    "keywords": "Class MathHelpersTests Inheritance System.Object MathHelpersTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class MathHelpersTests Methods CompiledOperationsTest() Declaration public void CompiledOperationsTest()"
  },
  "api/Platform.Data.Core.Doublets.ILinksOptions-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksOptions-1.html",
    "title": "Interface ILinksOptions<TLink> | LinksPlatform",
    "keywords": "Interface ILinksOptions<TLink> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksOptions<TLink> Type Parameters Name Description TLink"
  },
  "api/Platform.Tests.EqualityTests.UInt64EqualityComparer.html": {
    "href": "api/Platform.Tests.EqualityTests.UInt64EqualityComparer.html",
    "title": "Class EqualityTests.UInt64EqualityComparer | LinksPlatform",
    "keywords": "Class EqualityTests.UInt64EqualityComparer Inheritance System.Object EqualityTests.UInt64EqualityComparer Implements System.Collections.Generic.IEqualityComparer < System.UInt64 > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests Assembly : cs.temp.dll.dll Syntax protected class UInt64EqualityComparer : IEqualityComparer<ulong> Methods Equals(UInt64, UInt64) Declaration public bool Equals(ulong x, ulong y) Parameters Type Name Description System.UInt64 x System.UInt64 y Returns Type Description System.Boolean GetHashCode(UInt64) Declaration public int GetHashCode(ulong obj) Parameters Type Name Description System.UInt64 obj Returns Type Description System.Int32 Implements System.Collections.Generic.IEqualityComparer<T>"
  },
  "api/Platform.Data.Core.Common.html": {
    "href": "api/Platform.Data.Core.Common.html",
    "title": "Namespace Platform.Data.Core.Common | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Common Classes Point<TLink>"
  },
  "api/Platform.Data.WebTerminal.Program.html": {
    "href": "api/Platform.Data.WebTerminal.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.WebTerminal Assembly : cs.temp.dll.dll Syntax public class Program Methods CreateWebHostBuilder(String[]) Declaration public static IWebHostBuilder CreateWebHostBuilder(string[] args) Parameters Type Name Description System.String [] args Returns Type Description IWebHostBuilder Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Data.Core.Doublets.html": {
    "href": "api/Platform.Data.Core.Doublets.html",
    "title": "Namespace Platform.Data.Core.Doublets | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Doublets Classes AddressToUnaryNumberConverter<TLink> DefaultLinkPropertyOperator<TLink> DefaultSequenceElementCreteriaMatcher<TLink> FrequencyIncrementer<TLink> FrequencyPropertyOperator<TLink> Hybrid<T> LinkExtensions LinkFrequencyIncrementer<TLink> LinksCascadeDependenciesResolver<TLink> LinksCascadeUniquenessAndDependenciesResolver<TLink> LinksConstants<TDecision> LinksConstants<TDecision, TAddress> LinksConstants<TDecision, TAddress, TPartIndex> LinksDecoratorBase<T> LinksDependenciesValidator<T> LinksDisposableDecoratorBase<T> LinksExtensions LinksInnerReferenceValidator<T> LinksNonExistentReferencesCreator<T> LinksNullToSelfReferenceResolver<TLink> LinksOperatorBase<TLink> LinksSelfReferenceResolver<TLink> LinksUniquenessResolver<TLink> LinksUniquenessValidator<T> LinkToItsFrequencyNumberConveter<TLink> NonNullContentsLinkDeletionResolver<T> PowerOf2ToUnaryNumberConverter<TLink> ResizableDirectMemoryLinks<TLink> Stack<TLink> StackExtensions SynchronizedLinks<T> UInt64Links Представляет объект для работы с базой данных (файлом) в формате Links (массива взаимосвязей). UInt64LinksTransactionsLayer UInt64LinksTransactionsLayer.Transaction UInt64ResizableDirectMemoryLinks UnaryNumberIncrementer<TLink> UnaryNumberToAddressAddOperationConverter<TLink> UnaryNumberToAddressOrOperationConverter<TLink> Structs Link<TLink> Структура описывающая уникальную связь. UInt64Link Структура описывающая уникальную связь. UInt64LinksTransactionsLayer.Transition Interfaces ILinks<TLink> Представляет интерфейс для работы с данными в формате Links (хранилища взаимосвязей). ILinksAddressConstants<TAddress> ILinksCombinedConstants<TDecision, TAddress, TPartIndex> ILinksDecisionConstants<TDecision> ILinksOptions<TLink> ILinksPartConstants<TPartIndex> ISynchronizedLinks<T>"
  },
  "api/Platform.Data.Core.Doublets.SynchronizedLinks-1.html": {
    "href": "api/Platform.Data.Core.Doublets.SynchronizedLinks-1.html",
    "title": "Class SynchronizedLinks<T> | LinksPlatform",
    "keywords": "Class SynchronizedLinks<T> Inheritance System.Object SynchronizedLinks<T> Implements ISynchronizedLinks <T> ISynchronized < ILinks <T>> ILinks <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class SynchronizedLinks<T> : ISynchronizedLinks<T>, ISynchronized<ILinks<T>>, ILinks<T> Type Parameters Name Description T Remarks TODO: Autogeneration of synchronized wrapper (decorator). TODO: Try to unfold code of each method using IL generation for performance improvements. TODO: Or even to unfold multiple layers of implementations. Constructors SynchronizedLinks(ISynchronization, ILinks<T>) Declaration public SynchronizedLinks(ISynchronization synchronization, ILinks<T> links) Parameters Type Name Description ISynchronization synchronization ILinks <T> links SynchronizedLinks(ILinks<T>) Declaration public SynchronizedLinks(ILinks<T> links) Parameters Type Name Description ILinks <T> links Properties Constants Declaration public ILinksCombinedConstants<T, T, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <T, T, System.Int32 > Sync Declaration public ILinks<T> Sync { get; } Property Value Type Description ILinks <T> SyncRoot Declaration public ISynchronization SyncRoot { get; } Property Value Type Description ISynchronization Unsync Declaration public ILinks<T> Unsync { get; } Property Value Type Description ILinks <T> Methods Count(IList<T>) Declaration public T Count(IList<T> restriction) Parameters Type Name Description System.Collections.Generic.IList <T> restriction Returns Type Description T Create() Declaration public T Create() Returns Type Description T Delete(T) Declaration public void Delete(T link) Parameters Type Name Description T link Each(Func<IList<T>, T>, IList<T>) Declaration public T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description System.Func < System.Collections.Generic.IList <T>, T> handler System.Collections.Generic.IList <T> restrictions Returns Type Description T Update(IList<T>) Declaration public T Update(IList<T> restrictions) Parameters Type Name Description System.Collections.Generic.IList <T> restrictions Returns Type Description T Implements ISynchronizedLinks<T> ISynchronized<> ILinks<TLink>"
  },
  "api/Platform.Sandbox.ConsolePrintedDublicateWalkerBase.html": {
    "href": "api/Platform.Sandbox.ConsolePrintedDublicateWalkerBase.html",
    "title": "Class ConsolePrintedDublicateWalkerBase | LinksPlatform",
    "keywords": "Class ConsolePrintedDublicateWalkerBase Inheritance System.Object ConsolePrintedDublicateWalkerBase Walker1 Walker2 Walker3 Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public abstract class ConsolePrintedDublicateWalkerBase : DuplicateSegmentsWalkerBase<char, CharsSegment> Methods CreateSegment(IList<Char>, Int32, Int32) Declaration protected override CharsSegment CreateSegment(IList<char> elements, int offset, int length) Parameters Type Name Description System.Collections.Generic.IList < System.Char > elements System.Int32 offset System.Int32 length Returns Type Description CharsSegment OnDublicateFound(CharsSegment) Declaration protected override void OnDublicateFound(CharsSegment segment) Parameters Type Name Description CharsSegment segment"
  },
  "api/Platform.Data.Core.Sequences.ISequenceWalker-1.html": {
    "href": "api/Platform.Data.Core.Sequences.ISequenceWalker-1.html",
    "title": "Interface ISequenceWalker<TLink> | LinksPlatform",
    "keywords": "Interface ISequenceWalker<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public interface ISequenceWalker<TLink> Type Parameters Name Description TLink Methods Walk(TLink) Declaration IEnumerable<IList<TLink>> Walk(TLink sequence) Parameters Type Name Description TLink sequence Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.IList <TLink>>"
  },
  "api/Platform.Data.Core.Doublets.LinksUniquenessValidator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksUniquenessValidator-1.html",
    "title": "Class LinksUniquenessValidator<T> | LinksPlatform",
    "keywords": "Class LinksUniquenessValidator<T> Inheritance System.Object LinksDecoratorBase <T> LinksUniquenessValidator<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() LinksDecoratorBase<T>.Delete(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksUniquenessValidator<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksUniquenessValidator(ILinks<T>) Declaration public LinksUniquenessValidator(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description System.Collections.Generic.IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(System.Collections.Generic.IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Sandbox.StaticBase-1.html": {
    "href": "api/Platform.Sandbox.StaticBase-1.html",
    "title": "Class StaticBase<TSuccessor> | LinksPlatform",
    "keywords": "Class StaticBase<TSuccessor> Inheritance System.Object StaticBase<TSuccessor> Base Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public abstract class StaticBase<TSuccessor> where TSuccessor : StaticBase<TSuccessor>, new() Type Parameters Name Description TSuccessor Fields Instance Declaration protected static readonly TSuccessor Instance Field Value Type Description TSuccessor"
  },
  "api/Platform.Sandbox.Walker2.html": {
    "href": "api/Platform.Sandbox.Walker2.html",
    "title": "Class Walker2 | LinksPlatform",
    "keywords": "Class Walker2 Inheritance System.Object ConsolePrintedDublicateWalkerBase Walker2 Inherited Members ConsolePrintedDublicateWalkerBase.OnDublicateFound(CharsSegment) ConsolePrintedDublicateWalkerBase.CreateSegment(IList<Char>, Int32, Int32) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Walker2 : ConsolePrintedDublicateWalkerBase Methods GetSegmentFrequency(CharsSegment) Declaration protected override long GetSegmentFrequency(CharsSegment segment) Parameters Type Name Description CharsSegment segment Returns Type Description System.Int64 Iteration(CharsSegment) Declaration protected override void Iteration(CharsSegment segment) Parameters Type Name Description CharsSegment segment SetSegmentFrequency(CharsSegment, Int64) Declaration protected override void SetSegmentFrequency(CharsSegment segment, long frequency) Parameters Type Name Description CharsSegment segment System.Int64 frequency WalkAll(IList<Char>) Declaration public override void WalkAll(IList<char> elements) Parameters Type Name Description System.Collections.Generic.IList < System.Char > elements"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.LinkFrequenciesCache-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.LinkFrequenciesCache-1.html",
    "title": "Class LinkFrequenciesCache<TLink> | LinksPlatform",
    "keywords": "Class LinkFrequenciesCache<TLink> Inheritance System.Object LinkFrequenciesCache<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class LinkFrequenciesCache<TLink> : LinksOperatorBase<TLink> Type Parameters Name Description TLink Remarks Can be used to operate with many CompressingConverters (to keep global frequencies data between them). TODO: Extract interface to implement frequencies storage inside Links storage Constructors LinkFrequenciesCache(ILinks<TLink>, ICounter<TLink, TLink>) Declaration public LinkFrequenciesCache(ILinks<TLink> links, ICounter<TLink, TLink> frequencyCounter) Parameters Type Name Description ILinks <TLink> links ICounter <TLink, TLink> frequencyCounter Methods GetFrequency(TLink, TLink) Declaration public LinkFrequency<TLink> GetFrequency(TLink source, TLink target) Parameters Type Name Description TLink source TLink target Returns Type Description LinkFrequency <TLink> GetFrequency(ref Doublet<TLink>) Declaration public LinkFrequency<TLink> GetFrequency(ref Doublet<TLink> doublet) Parameters Type Name Description Doublet <TLink> doublet Returns Type Description LinkFrequency <TLink> IncrementFrequencies(IList<TLink>) Declaration public void IncrementFrequencies(IList<TLink> sequence) Parameters Type Name Description System.Collections.Generic.IList <TLink> sequence IncrementFrequency(TLink, TLink) Declaration public LinkFrequency<TLink> IncrementFrequency(TLink source, TLink target) Parameters Type Name Description TLink source TLink target Returns Type Description LinkFrequency <TLink> IncrementFrequency(ref Doublet<TLink>) Declaration public LinkFrequency<TLink> IncrementFrequency(ref Doublet<TLink> doublet) Parameters Type Name Description Doublet <TLink> doublet Returns Type Description LinkFrequency <TLink> PrintFrequencies(IList<TLink>) Declaration public void PrintFrequencies(IList<TLink> sequence) Parameters Type Name Description System.Collections.Generic.IList <TLink> sequence PrintFrequency(TLink, TLink) Declaration public void PrintFrequency(TLink source, TLink target) Parameters Type Name Description TLink source TLink target ValidateFrequencies() Declaration public void ValidateFrequencies()"
  },
  "api/Platform.Data.Core.Doublets.DefaultSequenceElementCreteriaMatcher-1.html": {
    "href": "api/Platform.Data.Core.Doublets.DefaultSequenceElementCreteriaMatcher-1.html",
    "title": "Class DefaultSequenceElementCreteriaMatcher<TLink> | LinksPlatform",
    "keywords": "Class DefaultSequenceElementCreteriaMatcher<TLink> Inheritance System.Object LinksOperatorBase <TLink> DefaultSequenceElementCreteriaMatcher<TLink> Implements ICreteriaMatcher <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class DefaultSequenceElementCreteriaMatcher<TLink> : LinksOperatorBase<TLink>, ICreteriaMatcher<TLink> Type Parameters Name Description TLink Constructors DefaultSequenceElementCreteriaMatcher(ILinks<TLink>) Declaration public DefaultSequenceElementCreteriaMatcher(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods IsMatched(TLink) Declaration public bool IsMatched(TLink argument) Parameters Type Name Description TLink argument Returns Type Description System.Boolean Implements ICreteriaMatcher<>"
  },
  "api/Platform.Data.Core.Doublets.ILinks-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinks-1.html",
    "title": "Interface ILinks<TLink> | LinksPlatform",
    "keywords": "Interface ILinks<TLink> Представляет интерфейс для работы с данными в формате Links (хранилища взаимосвязей). Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinks<TLink> Type Parameters Name Description TLink Remarks Этот интерфейс в данный момент не зависит от размера содержимого связи, а значит подходит как для дублетов, так и для триплетов и т.п. Возможно этот интерфейс подходит даже для Sequences. TODO: Этот интерфейс можно перенести в пространство имён Platform.Data.Core или Platform.Data.Core.Common Properties Constants Возвращает набор констант, который необходим для эффективной коммуникации с методами этого интерфейса. Эти константы не меняются с момента создания точки доступа к хранилищу. Declaration ILinksCombinedConstants<TLink, TLink, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <TLink, TLink, System.Int32 > Methods Count(IList<TLink>) Подсчитывает и возвращает общее число связей находящихся в хранилище, соответствующих указанным ограничениям. Declaration TLink Count(IList<TLink> restriction) Parameters Type Name Description System.Collections.Generic.IList <TLink> restriction Ограничения на содержимое связей. Returns Type Description TLink Общее число связей находящихся в хранилище, соответствующих указанным ограничениям. Create() Создаёт связь. Declaration TLink Create() Returns Type Description TLink Индекс созданной связи. Delete(TLink) Удаляет связь с указанным индексом. Declaration void Delete(TLink link) Parameters Type Name Description TLink link Индекс удаляемой связи. Each(Func<IList<TLink>, TLink>, IList<TLink>) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration TLink Each(Func<IList<TLink>, TLink> handler, IList<TLink> restrictions) Parameters Type Name Description System.Func < System.Collections.Generic.IList <TLink>, TLink> handler Обработчик каждой подходящей связи. System.Collections.Generic.IList <TLink> restrictions Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Any - отсутствие ограничения, 1..∞ конкретный адрес связи. Returns Type Description TLink True, в случае если проход по связям не был прерван и False в обратном случае. Update(IList<TLink>) Обновляет связь с указанными restrictions[Constants.IndexPart] в адресом связи на связь с указанным новым содержимым. Declaration TLink Update(IList<TLink> restrictions) Parameters Type Name Description System.Collections.Generic.IList <TLink> restrictions Returns Type Description TLink Индекс обновлённой связи."
  },
  "api/Platform.Data.Core.Doublets.LinksInnerReferenceValidator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksInnerReferenceValidator-1.html",
    "title": "Class LinksInnerReferenceValidator<T> | LinksPlatform",
    "keywords": "Class LinksInnerReferenceValidator<T> Inheritance System.Object LinksDecoratorBase <T> LinksInnerReferenceValidator<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Create() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksInnerReferenceValidator<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksInnerReferenceValidator(ILinks<T>) Declaration public LinksInnerReferenceValidator(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Count(IList<T>) Declaration public override T Count(IList<T> restriction) Parameters Type Name Description System.Collections.Generic.IList <T> restriction Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Count(System.Collections.Generic.IList<T>) Delete(T) Declaration public override void Delete(T link) Parameters Type Name Description T link Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Delete(T) Each(Func<IList<T>, T>, IList<T>) Declaration public override T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description System.Func < System.Collections.Generic.IList <T>, T> handler System.Collections.Generic.IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Each(System.Func<System.Collections.Generic.IList<T>, T>, System.Collections.Generic.IList<T>) Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description System.Collections.Generic.IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(System.Collections.Generic.IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Exceptions.LinksLimitReachedException.html": {
    "href": "api/Platform.Data.Core.Exceptions.LinksLimitReachedException.html",
    "title": "Class LinksLimitReachedException | LinksPlatform",
    "keywords": "Class LinksLimitReachedException Inheritance System.Object System.Exception LinksLimitReachedException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Exceptions Assembly : cs.temp.dll.dll Syntax public class LinksLimitReachedException : Exception, ISerializable, _Exception Constructors LinksLimitReachedException(String) Declaration public LinksLimitReachedException(string message = \"Достигнут лимит количества связей в хранилище.\") Parameters Type Name Description System.String message LinksLimitReachedException(UInt64) Declaration public LinksLimitReachedException(ulong limit) Parameters Type Name Description System.UInt64 limit Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase-1.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase-1.html",
    "title": "Class BinaryTreeMethodsBase<TElement> | LinksPlatform",
    "keywords": "Class BinaryTreeMethodsBase<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> BinaryTreeMethodsBase<TElement> SizeBalancedTreeMethods<TElement> SizeBalancedTreeMethods2<TElement> SizedAndThreadedAVLBalancedTreeMethods<TElement> Inherited Members GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Trees Assembly : cs.temp.dll.dll Syntax public abstract class BinaryTreeMethodsBase<TElement> : GenericCollectionMethodsBase<TElement> Type Parameters Name Description TElement Methods Attach(IntPtr, TElement) Declaration public void Attach(IntPtr root, TElement node) Parameters Type Name Description System.IntPtr root TElement node AttachCore(IntPtr, TElement) Declaration protected abstract void AttachCore(IntPtr root, TElement node) Parameters Type Name Description System.IntPtr root TElement node ClearNode(TElement) Declaration protected virtual void ClearNode(TElement node) Parameters Type Name Description TElement node Contains(TElement, TElement) Declaration public bool Contains(TElement node, TElement root) Parameters Type Name Description TElement node TElement root Returns Type Description System.Boolean DecrementSize(TElement) Declaration protected void DecrementSize(TElement node) Parameters Type Name Description TElement node Detach(IntPtr, TElement) Declaration public void Detach(IntPtr root, TElement node) Parameters Type Name Description System.IntPtr root TElement node DetachCore(IntPtr, TElement) Declaration protected abstract void DetachCore(IntPtr root, TElement node) Parameters Type Name Description System.IntPtr root TElement node FirstIsToTheLeftOfSecond(TElement, TElement) Declaration protected abstract bool FirstIsToTheLeftOfSecond(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean FirstIsToTheRightOfSecond(TElement, TElement) Declaration protected abstract bool FirstIsToTheRightOfSecond(TElement first, TElement second) Parameters Type Name Description TElement first TElement second Returns Type Description System.Boolean FixSize(TElement) Declaration protected void FixSize(TElement node) Parameters Type Name Description TElement node FixSizes(TElement) Declaration public void FixSizes(TElement node) Parameters Type Name Description TElement node FixSizes(IntPtr) Declaration public void FixSizes(IntPtr root) Parameters Type Name Description System.IntPtr root GetLeftOrDefault(TElement) Declaration protected virtual TElement GetLeftOrDefault(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetLeftPointer(TElement) Declaration protected abstract IntPtr GetLeftPointer(TElement node) Parameters Type Name Description TElement node Returns Type Description System.IntPtr GetLeftSize(TElement) Declaration protected TElement GetLeftSize(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetLeftValue(TElement) Declaration protected abstract TElement GetLeftValue(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetRightOrDefault(TElement) Declaration protected virtual TElement GetRightOrDefault(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetRightPointer(TElement) Declaration protected abstract IntPtr GetRightPointer(TElement node) Parameters Type Name Description TElement node Returns Type Description System.IntPtr GetRightSize(TElement) Declaration protected TElement GetRightSize(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetRightValue(TElement) Declaration protected abstract TElement GetRightValue(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetSize(TElement) Declaration protected abstract TElement GetSize(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement GetSize(IntPtr) Declaration public TElement GetSize(IntPtr root) Parameters Type Name Description System.IntPtr root Returns Type Description TElement GetSizeOrZero(TElement) Declaration protected TElement GetSizeOrZero(TElement node) Parameters Type Name Description TElement node Returns Type Description TElement IncrementSize(TElement) Declaration protected void IncrementSize(TElement node) Parameters Type Name Description TElement node LeftRotate(TElement) Declaration protected TElement LeftRotate(TElement root) Parameters Type Name Description TElement root Returns Type Description TElement LeftRotate(IntPtr) Declaration protected void LeftRotate(IntPtr root) Parameters Type Name Description System.IntPtr root PrintNode(TElement) Declaration public string PrintNode(TElement node) Parameters Type Name Description TElement node Returns Type Description System.String PrintNode(TElement, StringBuilder, Int32) Declaration protected virtual void PrintNode(TElement node, StringBuilder sb, int level = 0) Parameters Type Name Description TElement node StringBuilder sb System.Int32 level PrintNodes(TElement) Declaration public string PrintNodes(TElement node) Parameters Type Name Description TElement node Returns Type Description System.String PrintNodes(TElement, StringBuilder, Int32) Declaration public void PrintNodes(TElement node, StringBuilder sb, int level = 0) Parameters Type Name Description TElement node StringBuilder sb System.Int32 level PrintNodes(IntPtr) Declaration public string PrintNodes(IntPtr root) Parameters Type Name Description System.IntPtr root Returns Type Description System.String PrintNodeValue(TElement, StringBuilder) Declaration protected virtual void PrintNodeValue(TElement node, StringBuilder sb) Parameters Type Name Description TElement node StringBuilder sb RightRotate(TElement) Declaration protected TElement RightRotate(TElement root) Parameters Type Name Description TElement root Returns Type Description TElement RightRotate(IntPtr) Declaration protected void RightRotate(IntPtr root) Parameters Type Name Description System.IntPtr root SetLeft(TElement, TElement) Declaration protected abstract void SetLeft(TElement node, TElement left) Parameters Type Name Description TElement node TElement left SetRight(TElement, TElement) Declaration protected abstract void SetRight(TElement node, TElement right) Parameters Type Name Description TElement node TElement right SetSize(TElement, TElement) Declaration protected abstract void SetSize(TElement node, TElement size) Parameters Type Name Description TElement node TElement size ValidateSize(TElement) Declaration public void ValidateSize(TElement node) Parameters Type Name Description TElement node ValidateSizes(TElement) Declaration public void ValidateSizes(TElement node) Parameters Type Name Description TElement node ValidateSizes(IntPtr) Declaration public void ValidateSizes(IntPtr root) Parameters Type Name Description System.IntPtr root"
  },
  "api/Platform.Data.Core.Doublets.ILinksAddressConstants-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksAddressConstants-1.html",
    "title": "Interface ILinksAddressConstants<TAddress> | LinksPlatform",
    "keywords": "Interface ILinksAddressConstants<TAddress> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksAddressConstants<TAddress> Type Parameters Name Description TAddress Properties Any Возвращает значение, обозначающее любую связь. Declaration TAddress Any { get; } Property Value Type Description TAddress Remarks Возможно нужно зарезервировать отдельное значение, тогда можно будет создавать все варианты последовательностей в функции Create. Itself Возвращает значение, обозначающее связь-ссылку на саму связь. Declaration TAddress Itself { get; } Property Value Type Description TAddress MaxPossibleIndex Возвращает максимально возможный индекс существующей связи. Declaration TAddress MaxPossibleIndex { get; } Property Value Type Description TAddress Remarks Если за каждую константу будет отвечать отдельная связь, диапазон возможных связей будет уменьшен. Благодаря логике конвертации Integer для каждого типа здесь будет максимальное значение этого типа. MinPossibleIndex Возвращает минимально возможный индекс существующей связи. Declaration TAddress MinPossibleIndex { get; } Property Value Type Description TAddress Null Возвращает значение, обозначающее отсутствие связи. Declaration TAddress Null { get; } Property Value Type Description TAddress"
  },
  "api/Platform.Tests.Helpers.CharsSegmentTests.html": {
    "href": "api/Platform.Tests.Helpers.CharsSegmentTests.html",
    "title": "Class CharsSegmentTests | LinksPlatform",
    "keywords": "Class CharsSegmentTests Inheritance System.Object CharsSegmentTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class CharsSegmentTests Methods EqualsTest() Declaration public static void EqualsTest() GetHashCodeEqualsTest() Declaration public static void GetHashCodeEqualsTest()"
  },
  "api/Platform.Data.Core.Sequences.DefaultSequenceAppender-1.html": {
    "href": "api/Platform.Data.Core.Sequences.DefaultSequenceAppender-1.html",
    "title": "Class DefaultSequenceAppender<TLink> | LinksPlatform",
    "keywords": "Class DefaultSequenceAppender<TLink> Inheritance System.Object DefaultSequenceAppender<TLink> Implements ISequenceAppender <TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class DefaultSequenceAppender<TLink> : LinksOperatorBase<TLink>, ISequenceAppender<TLink> Type Parameters Name Description TLink Constructors DefaultSequenceAppender(ILinks<TLink>, IStack<TLink>, ISequenceHeightProvider<TLink>) Declaration public DefaultSequenceAppender(ILinks<TLink> links, IStack<TLink> stack, ISequenceHeightProvider<TLink> heightProvider) Parameters Type Name Description ILinks <TLink> links IStack <TLink> stack ISequenceHeightProvider <TLink> heightProvider Methods Append(TLink, TLink) Declaration public TLink Append(TLink sequence, TLink appendant) Parameters Type Name Description TLink sequence TLink appendant Returns Type Description TLink Implements ISequenceAppender<TLink>"
  },
  "api/Platform.Sandbox.Base.html": {
    "href": "api/Platform.Sandbox.Base.html",
    "title": "Class Base | LinksPlatform",
    "keywords": "Class Base Inheritance System.Object StaticBase < Base > Base Inherited Inherited Members StaticBase<Base>.Instance System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Base : StaticBase<Base> Constructors Base() Declaration public Base() Methods MethodA() Declaration public void MethodA()"
  },
  "api/Platform.Data.Core.Doublets.LinksDependenciesValidator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksDependenciesValidator-1.html",
    "title": "Class LinksDependenciesValidator<T> | LinksPlatform",
    "keywords": "Class LinksDependenciesValidator<T> Inheritance System.Object LinksDecoratorBase <T> LinksDependenciesValidator<T> Implements ILinks <T> Inherited Members LinksDecoratorBase<T>.Constants LinksDecoratorBase<T>.Links LinksDecoratorBase<T>.Count(IList<T>) LinksDecoratorBase<T>.Each(Func<IList<T>, T>, IList<T>) LinksDecoratorBase<T>.Create() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksDependenciesValidator<T> : LinksDecoratorBase<T>, ILinks<T> Type Parameters Name Description T Constructors LinksDependenciesValidator(ILinks<T>) Declaration public LinksDependenciesValidator(ILinks<T> links) Parameters Type Name Description ILinks <T> links Methods Delete(T) Declaration public override void Delete(T link) Parameters Type Name Description T link Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Delete(T) Update(IList<T>) Declaration public override T Update(IList<T> restrictions) Parameters Type Name Description System.Collections.Generic.IList <T> restrictions Returns Type Description T Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<T>.Update(System.Collections.Generic.IList<T>) Implements ILinks<TLink>"
  },
  "api/Platform.Sandbox.Inherited.html": {
    "href": "api/Platform.Sandbox.Inherited.html",
    "title": "Class Inherited | LinksPlatform",
    "keywords": "Class Inherited Inheritance System.Object StaticBase < Base > Base Inherited Inherited Members StaticBase<Base>.Instance System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Inherited : Base Methods MethodA() Declaration public static void MethodA()"
  },
  "api/Platform.Data.Core.Doublets.AddressToUnaryNumberConverter-1.html": {
    "href": "api/Platform.Data.Core.Doublets.AddressToUnaryNumberConverter-1.html",
    "title": "Class AddressToUnaryNumberConverter<TLink> | LinksPlatform",
    "keywords": "Class AddressToUnaryNumberConverter<TLink> Inheritance System.Object LinksOperatorBase <TLink> AddressToUnaryNumberConverter<TLink> Implements IConverter <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class AddressToUnaryNumberConverter<TLink> : LinksOperatorBase<TLink>, IConverter<TLink> Type Parameters Name Description TLink Constructors AddressToUnaryNumberConverter(ILinks<TLink>, IConverter<Int32, TLink>) Declaration public AddressToUnaryNumberConverter(ILinks<TLink> links, IConverter<int, TLink> powerOf2ToUnaryNumberConverter) Parameters Type Name Description ILinks <TLink> links IConverter < System.Int32 , TLink> powerOf2ToUnaryNumberConverter Methods Convert(TLink) Declaration public TLink Convert(TLink sourceAddress) Parameters Type Name Description TLink sourceAddress Returns Type Description TLink Implements IConverter<>"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalMarkedSequenceSymbolFrequencyCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalMarkedSequenceSymbolFrequencyCounter-1.html",
    "title": "Class TotalMarkedSequenceSymbolFrequencyCounter<TLink> | LinksPlatform",
    "keywords": "Class TotalMarkedSequenceSymbolFrequencyCounter<TLink> Inheritance System.Object TotalMarkedSequenceSymbolFrequencyCounter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class TotalMarkedSequenceSymbolFrequencyCounter<TLink> : ICounter<TLink, TLink> Type Parameters Name Description TLink Constructors TotalMarkedSequenceSymbolFrequencyCounter(ILinks<TLink>, ICreteriaMatcher<TLink>) Declaration public TotalMarkedSequenceSymbolFrequencyCounter(ILinks<TLink> links, ICreteriaMatcher<TLink> markedSequenceMatcher) Parameters Type Name Description ILinks <TLink> links ICreteriaMatcher <TLink> markedSequenceMatcher Methods Count(TLink) Declaration public TLink Count(TLink argument) Parameters Type Name Description TLink argument Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Doublets.Stack-1.html": {
    "href": "api/Platform.Data.Core.Doublets.Stack-1.html",
    "title": "Class Stack<TLink> | LinksPlatform",
    "keywords": "Class Stack<TLink> Inheritance System.Object Stack<TLink> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class Stack<TLink> : IStack<TLink> Type Parameters Name Description TLink Constructors Stack(ILinks<TLink>, TLink) Declaration public Stack(ILinks<TLink> links, TLink stack) Parameters Type Name Description ILinks <TLink> links TLink stack Methods Peek() Declaration public TLink Peek() Returns Type Description TLink Pop() Declaration public TLink Pop() Returns Type Description TLink Push(TLink) Declaration public void Push(TLink element) Parameters Type Name Description TLink element"
  },
  "api/Platform.Tests.Helpers.SerializationHelpersTests.html": {
    "href": "api/Platform.Tests.Helpers.SerializationHelpersTests.html",
    "title": "Class SerializationHelpersTests | LinksPlatform",
    "keywords": "Class SerializationHelpersTests Inheritance System.Object SerializationHelpersTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class SerializationHelpersTests Methods SerializeAsXmlStringTest() Declaration public void SerializeAsXmlStringTest() SerializeToFileTest() Declaration public void SerializeToFileTest()"
  },
  "api/Platform.Data.Core.Doublets.DefaultLinkPropertyOperator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.DefaultLinkPropertyOperator-1.html",
    "title": "Class DefaultLinkPropertyOperator<TLink> | LinksPlatform",
    "keywords": "Class DefaultLinkPropertyOperator<TLink> Inheritance System.Object LinksOperatorBase <TLink> DefaultLinkPropertyOperator<TLink> Implements IPropertyOperator <TLink, TLink, TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class DefaultLinkPropertyOperator<TLink> : LinksOperatorBase<TLink>, IPropertyOperator<TLink, TLink, TLink> Type Parameters Name Description TLink Constructors DefaultLinkPropertyOperator(ILinks<TLink>) Declaration public DefaultLinkPropertyOperator(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods GetValue(TLink, TLink) Declaration public TLink GetValue(TLink object, TLink property) Parameters Type Name Description TLink object TLink property Returns Type Description TLink SetValue(TLink, TLink, TLink) Declaration public void SetValue(TLink object, TLink property, TLink value) Parameters Type Name Description TLink object TLink property TLink value Implements IPropertyOperator<, , >"
  },
  "api/Platform.Data.WebTerminal.html": {
    "href": "api/Platform.Data.WebTerminal.html",
    "title": "Namespace Platform.Data.WebTerminal | LinksPlatform",
    "keywords": "Namespace Platform.Data.WebTerminal Classes Program Startup"
  },
  "api/Platform.Data.Core.Doublets.LinksOperatorBase-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksOperatorBase-1.html",
    "title": "Class LinksOperatorBase<TLink> | LinksPlatform",
    "keywords": "Class LinksOperatorBase<TLink> Inheritance System.Object LinksOperatorBase<TLink> AddressToUnaryNumberConverter<TLink> DefaultLinkPropertyOperator<TLink> DefaultSequenceElementCreteriaMatcher<TLink> FrequencyIncrementer<TLink> FrequencyPropertyOperator<TLink> LinkFrequencyIncrementer<TLink> LinkToItsFrequencyNumberConveter<TLink> PowerOf2ToUnaryNumberConverter<TLink> UnaryNumberIncrementer<TLink> UnaryNumberToAddressAddOperationConverter<TLink> UnaryNumberToAddressOrOperationConverter<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public abstract class LinksOperatorBase<TLink> Type Parameters Name Description TLink Constructors LinksOperatorBase(ILinks<TLink>) Declaration protected LinksOperatorBase(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Fields Links Declaration protected readonly ILinks<TLink> Links Field Value Type Description ILinks <TLink>"
  },
  "api/Platform.Data.Core.Sequences.LinksListToSequenceConverterBase-1.html": {
    "href": "api/Platform.Data.Core.Sequences.LinksListToSequenceConverterBase-1.html",
    "title": "Class LinksListToSequenceConverterBase<TLink> | LinksPlatform",
    "keywords": "Class LinksListToSequenceConverterBase<TLink> Inheritance System.Object LinksListToSequenceConverterBase<TLink> BalancedVariantConverter<TLink> CompressingConverter<TLink> OptimalVariantConverter<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public abstract class LinksListToSequenceConverterBase<TLink> : IConverter<IList<TLink>, TLink> Type Parameters Name Description TLink Constructors LinksListToSequenceConverterBase(ILinks<TLink>) Declaration public LinksListToSequenceConverterBase(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Fields Links Declaration protected readonly ILinks<TLink> Links Field Value Type Description ILinks <TLink> Methods Convert(IList<TLink>) Declaration public abstract TLink Convert(IList<TLink> source) Parameters Type Name Description System.Collections.Generic.IList <TLink> source Returns Type Description TLink"
  },
  "api/Platform.Examples.MasterServerCLI.html": {
    "href": "api/Platform.Examples.MasterServerCLI.html",
    "title": "Class MasterServerCLI | LinksPlatform",
    "keywords": "Class MasterServerCLI Inheritance System.Object MasterServerCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class MasterServerCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Tests.ComparisonTests.UInt64Comparer.html": {
    "href": "api/Platform.Tests.ComparisonTests.UInt64Comparer.html",
    "title": "Class ComparisonTests.UInt64Comparer | LinksPlatform",
    "keywords": "Class ComparisonTests.UInt64Comparer Inheritance System.Object ComparisonTests.UInt64Comparer Implements System.Collections.Generic.IComparer < System.UInt64 > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests Assembly : cs.temp.dll.dll Syntax protected class UInt64Comparer : IComparer<ulong> Methods Compare(UInt64, UInt64) Declaration public int Compare(ulong x, ulong y) Parameters Type Name Description System.UInt64 x System.UInt64 y Returns Type Description System.Int32 Implements System.Collections.Generic.IComparer<T>"
  },
  "api/Platform.Examples.GEXFExporter-1.html": {
    "href": "api/Platform.Examples.GEXFExporter-1.html",
    "title": "Class GEXFExporter<TLink> | LinksPlatform",
    "keywords": "Class GEXFExporter<TLink> Inheritance System.Object GEXFExporter<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class GEXFExporter<TLink> Type Parameters Name Description TLink Constructors GEXFExporter(ILinks<TLink>) Declaration public GEXFExporter(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods Export(String) Declaration public void Export(string outputFilename) Parameters Type Name Description System.String outputFilename"
  },
  "api/Platform.Tests.Data.Core.BitStringTests.html": {
    "href": "api/Platform.Tests.Data.Core.BitStringTests.html",
    "title": "Class BitStringTests | LinksPlatform",
    "keywords": "Class BitStringTests Inheritance System.Object BitStringTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class BitStringTests Methods BitGetSetTest() Declaration public void BitGetSetTest()"
  },
  "api/Platform.Data.Core.Sequences.MarkedSequenceMatcher-1.html": {
    "href": "api/Platform.Data.Core.Sequences.MarkedSequenceMatcher-1.html",
    "title": "Class MarkedSequenceMatcher<TLink> | LinksPlatform",
    "keywords": "Class MarkedSequenceMatcher<TLink> Inheritance System.Object MarkedSequenceMatcher<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class MarkedSequenceMatcher<TLink> : ICreteriaMatcher<TLink> Type Parameters Name Description TLink Constructors MarkedSequenceMatcher(ILinks<TLink>, TLink) Declaration public MarkedSequenceMatcher(ILinks<TLink> links, TLink sequenceMarkerLink) Parameters Type Name Description ILinks <TLink> links TLink sequenceMarkerLink Methods IsMatched(TLink) Declaration public bool IsMatched(TLink sequenceCandidate) Parameters Type Name Description TLink sequenceCandidate Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Sequences.CompressingConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.CompressingConverter-1.html",
    "title": "Class CompressingConverter<TLink> | LinksPlatform",
    "keywords": "Class CompressingConverter<TLink> Inheritance System.Object LinksListToSequenceConverterBase <TLink> CompressingConverter<TLink> Inherited Members LinksListToSequenceConverterBase<TLink>.Links Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class CompressingConverter<TLink> : LinksListToSequenceConverterBase<TLink> Type Parameters Name Description TLink Remarks TODO: Возможно будет лучше если алгоритм будет выполняться полностью изолированно от Links на этапе сжатия. А именно будет создаваться временный список пар необходимых для выполнения сжатия, в таком случае тип значения элемента массива может быть любым, как char так и ulong. Как только список/словарь пар был выявлен можно разом выполнить создание всех этих пар, а так же разом выполнить замену. Constructors CompressingConverter(ILinks<TLink>, IConverter<IList<TLink>, TLink>, LinkFrequenciesCache<TLink>) Declaration public CompressingConverter(ILinks<TLink> links, IConverter<IList<TLink>, TLink> baseConverter, LinkFrequenciesCache<TLink> doubletFrequenciesCache) Parameters Type Name Description ILinks <TLink> links IConverter < System.Collections.Generic.IList <TLink>, TLink> baseConverter LinkFrequenciesCache <TLink> doubletFrequenciesCache CompressingConverter(ILinks<TLink>, IConverter<IList<TLink>, TLink>, LinkFrequenciesCache<TLink>, TLink, Boolean) Declaration public CompressingConverter(ILinks<TLink> links, IConverter<IList<TLink>, TLink> baseConverter, LinkFrequenciesCache<TLink> doubletFrequenciesCache, TLink minFrequencyToCompress, bool doInitialFrequenciesIncrement) Parameters Type Name Description ILinks <TLink> links IConverter < System.Collections.Generic.IList <TLink>, TLink> baseConverter LinkFrequenciesCache <TLink> doubletFrequenciesCache TLink minFrequencyToCompress System.Boolean doInitialFrequenciesIncrement CompressingConverter(ILinks<TLink>, IConverter<IList<TLink>, TLink>, LinkFrequenciesCache<TLink>, Boolean) Declaration public CompressingConverter(ILinks<TLink> links, IConverter<IList<TLink>, TLink> baseConverter, LinkFrequenciesCache<TLink> doubletFrequenciesCache, bool doInitialFrequenciesIncrement) Parameters Type Name Description ILinks <TLink> links IConverter < System.Collections.Generic.IList <TLink>, TLink> baseConverter LinkFrequenciesCache <TLink> doubletFrequenciesCache System.Boolean doInitialFrequenciesIncrement Methods Convert(IList<TLink>) Declaration public override TLink Convert(IList<TLink> source) Parameters Type Name Description System.Collections.Generic.IList <TLink> source Returns Type Description TLink Overrides Platform.Data.Core.Sequences.LinksListToSequenceConverterBase<TLink>.Convert(System.Collections.Generic.IList<TLink>)"
  },
  "api/Platform.Data.Core.Sequences.CachedSequenceHeightProvider-1.html": {
    "href": "api/Platform.Data.Core.Sequences.CachedSequenceHeightProvider-1.html",
    "title": "Class CachedSequenceHeightProvider<TLink> | LinksPlatform",
    "keywords": "Class CachedSequenceHeightProvider<TLink> Inheritance System.Object CachedSequenceHeightProvider<TLink> Implements ISequenceHeightProvider <TLink> IProvider <TLink, TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class CachedSequenceHeightProvider<TLink> : LinksOperatorBase<TLink>, ISequenceHeightProvider<TLink>, IProvider<TLink, TLink> Type Parameters Name Description TLink Constructors CachedSequenceHeightProvider(ILinks<TLink>, ISequenceHeightProvider<TLink>, IConverter<TLink>, IConverter<TLink>, TLink, IPropertyOperator<TLink, TLink, TLink>) Declaration public CachedSequenceHeightProvider(ILinks<TLink> links, ISequenceHeightProvider<TLink> baseHeightProvider, IConverter<TLink> addressToUnaryNumberConverter, IConverter<TLink> unaryNumberToAddressConverter, TLink heightPropertyMarker, IPropertyOperator<TLink, TLink, TLink> propertyOperator) Parameters Type Name Description ILinks <TLink> links ISequenceHeightProvider <TLink> baseHeightProvider IConverter <TLink> addressToUnaryNumberConverter IConverter <TLink> unaryNumberToAddressConverter TLink heightPropertyMarker IPropertyOperator <TLink, TLink, TLink> propertyOperator Methods Get(TLink) Declaration public TLink Get(TLink sequence) Parameters Type Name Description TLink sequence Returns Type Description TLink Implements ISequenceHeightProvider<TLink> IProvider<, >"
  },
  "api/Platform.Data.WebTerminal.Startup.html": {
    "href": "api/Platform.Data.WebTerminal.Startup.html",
    "title": "Class Startup | LinksPlatform",
    "keywords": "Class Startup Inheritance System.Object Startup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.WebTerminal Assembly : cs.temp.dll.dll Syntax public class Startup Constructors Startup(IConfiguration) Declaration public Startup(IConfiguration configuration) Parameters Type Name Description IConfiguration configuration Properties Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration Methods Configure(IApplicationBuilder, IHostingEnvironment) Declaration public void Configure(IApplicationBuilder app, IHostingEnvironment env) Parameters Type Name Description IApplicationBuilder app IHostingEnvironment env ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description IServiceCollection services"
  },
  "api/Platform.Sandbox.CompressionExperiments.Compressor.html": {
    "href": "api/Platform.Sandbox.CompressionExperiments.Compressor.html",
    "title": "Struct CompressionExperiments.Compressor | LinksPlatform",
    "keywords": "Struct CompressionExperiments.Compressor Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public struct Compressor Constructors Compressor(SynchronizedLinks<UInt64>) Declaration public Compressor(SynchronizedLinks<ulong> links) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links Methods Compress(UInt64[]) Declaration public ulong Compress(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 Precompress0(UInt64[]) Declaration public ulong[] Precompress0(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Faster version (doublets' frequencies dictionary is not recreated). Precompress1(UInt64[]) Declaration public ulong[] Precompress1(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Faster version (doublets' frequencies dictionary is not recreated). Precompress2(UInt64[]) Declaration public ulong[] Precompress2(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Faster version (doublets' frequencies dictionary is not recreated). Precompress3(UInt64[]) Declaration public ulong[] Precompress3(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . If doublet repeats twice it is maximum doublet. Precompress4(UInt64[]) Declaration public ulong[] Precompress4(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . If doublet repeats twice it is maximum doublet. Precompress5(UInt64[]) Declaration public ulong[] Precompress5(ulong[] sequence) Parameters Type Name Description System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Global dictionary"
  },
  "api/Platform.Tests.Helpers.html": {
    "href": "api/Platform.Tests.Helpers.html",
    "title": "Namespace Platform.Tests.Helpers | LinksPlatform",
    "keywords": "Namespace Platform.Tests.Helpers Classes ArithmeticExtensionsTests ArithmeticHelpersTests BitwiseHelpersTests CharsSegmentTests IntPtrExtensionsTests MathExtensionsTests MathHelpersTests ReflectionTests ScopeTests SerializationHelpersTests"
  },
  "api/Platform.Data.Core.Sequences.SequencesOptions-1.html": {
    "href": "api/Platform.Data.Core.Sequences.SequencesOptions-1.html",
    "title": "Struct SequencesOptions<TLink> | LinksPlatform",
    "keywords": "Struct SequencesOptions<TLink> Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public struct SequencesOptions<TLink> Type Parameters Name Description TLink Fields EnforceSingleSequenceVersionOnWriteBasedOnExisting Declaration public bool EnforceSingleSequenceVersionOnWriteBasedOnExisting Field Value Type Description System.Boolean EnforceSingleSequenceVersionOnWriteBasedOnNew Declaration public bool EnforceSingleSequenceVersionOnWriteBasedOnNew Field Value Type Description System.Boolean Indexer Declaration public SequencesIndexer<TLink> Indexer Field Value Type Description SequencesIndexer <TLink> LinksToSequenceConverter Declaration public IConverter<IList<TLink>, TLink> LinksToSequenceConverter Field Value Type Description IConverter < System.Collections.Generic.IList <TLink>, TLink> MarkedSequenceMatcher Declaration public MarkedSequenceMatcher<TLink> MarkedSequenceMatcher Field Value Type Description MarkedSequenceMatcher <TLink> SequenceMarkerLink Declaration public TLink SequenceMarkerLink Field Value Type Description TLink UseCascadeDelete Declaration public bool UseCascadeDelete Field Value Type Description System.Boolean UseCascadeUpdate Declaration public bool UseCascadeUpdate Field Value Type Description System.Boolean UseCompression Declaration public bool UseCompression Field Value Type Description System.Boolean UseGarbageCollection Declaration public bool UseGarbageCollection Field Value Type Description System.Boolean UseIndex Declaration public bool UseIndex Field Value Type Description System.Boolean UseSequenceMarker Declaration public bool UseSequenceMarker Field Value Type Description System.Boolean Methods InitOptions(ISynchronizedLinks<TLink>) Declaration public void InitOptions(ISynchronizedLinks<TLink> links) Parameters Type Name Description ISynchronizedLinks <TLink> links ValidateOptions() Declaration public void ValidateOptions()"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalMarkedSequenceSymbolFrequencyOneOffCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalMarkedSequenceSymbolFrequencyOneOffCounter-1.html",
    "title": "Class TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> | LinksPlatform",
    "keywords": "Class TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> Inheritance System.Object TotalSequenceSymbolFrequencyOneOffCounter <TLink> TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> Inherited Members TotalSequenceSymbolFrequencyOneOffCounter<TLink>._links TotalSequenceSymbolFrequencyOneOffCounter<TLink>._symbol TotalSequenceSymbolFrequencyOneOffCounter<TLink>._visits TotalSequenceSymbolFrequencyOneOffCounter<TLink>._total TotalSequenceSymbolFrequencyOneOffCounter<TLink>.Count() Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> : TotalSequenceSymbolFrequencyOneOffCounter<TLink> Type Parameters Name Description TLink Constructors TotalMarkedSequenceSymbolFrequencyOneOffCounter(ILinks<TLink>, ICreteriaMatcher<TLink>, TLink) Declaration public TotalMarkedSequenceSymbolFrequencyOneOffCounter(ILinks<TLink> links, ICreteriaMatcher<TLink> markedSequenceMatcher, TLink symbol) Parameters Type Name Description ILinks <TLink> links ICreteriaMatcher <TLink> markedSequenceMatcher TLink symbol Methods CountSequenceSymbolFrequency(TLink) Declaration protected override void CountSequenceSymbolFrequency(TLink link) Parameters Type Name Description TLink link Overrides Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyOneOffCounter<TLink>.CountSequenceSymbolFrequency(TLink)"
  },
  "api/Platform.Data.Core.Sequences.OptimalVariantConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.OptimalVariantConverter-1.html",
    "title": "Class OptimalVariantConverter<TLink> | LinksPlatform",
    "keywords": "Class OptimalVariantConverter<TLink> Inheritance System.Object LinksListToSequenceConverterBase <TLink> OptimalVariantConverter<TLink> Inherited Members LinksListToSequenceConverterBase<TLink>.Links Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class OptimalVariantConverter<TLink> : LinksListToSequenceConverterBase<TLink> Type Parameters Name Description TLink Constructors OptimalVariantConverter(ILinks<TLink>, IConverter<IList<TLink>>) Declaration public OptimalVariantConverter(ILinks<TLink> links, IConverter<IList<TLink>> sequenceToItsLocalElementLevelsConverter) Parameters Type Name Description ILinks <TLink> links IConverter < System.Collections.Generic.IList <TLink>> sequenceToItsLocalElementLevelsConverter Methods Convert(IList<TLink>) Declaration public override TLink Convert(IList<TLink> sequence) Parameters Type Name Description System.Collections.Generic.IList <TLink> sequence Returns Type Description TLink Overrides Platform.Data.Core.Sequences.LinksListToSequenceConverterBase<TLink>.Convert(System.Collections.Generic.IList<TLink>)"
  },
  "api/Platform.Sandbox.Walker3.html": {
    "href": "api/Platform.Sandbox.Walker3.html",
    "title": "Class Walker3 | LinksPlatform",
    "keywords": "Class Walker3 Inheritance System.Object ConsolePrintedDublicateWalkerBase Walker3 Inherited Members ConsolePrintedDublicateWalkerBase.OnDublicateFound(CharsSegment) ConsolePrintedDublicateWalkerBase.CreateSegment(IList<Char>, Int32, Int32) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Walker3 : ConsolePrintedDublicateWalkerBase Methods GetSegmentFrequency(CharsSegment) Declaration protected override long GetSegmentFrequency(CharsSegment segment) Parameters Type Name Description CharsSegment segment Returns Type Description System.Int64 Iteration(CharsSegment) Declaration protected override void Iteration(CharsSegment segment) Parameters Type Name Description CharsSegment segment SetSegmentFrequency(CharsSegment, Int64) Declaration protected override void SetSegmentFrequency(CharsSegment segment, long frequency) Parameters Type Name Description CharsSegment segment System.Int64 frequency WalkAll(IList<Char>) Declaration public override void WalkAll(IList<char> elements) Parameters Type Name Description System.Collections.Generic.IList < System.Char > elements"
  },
  "api/Platform.Examples.TerminalCLI.html": {
    "href": "api/Platform.Examples.TerminalCLI.html",
    "title": "Class TerminalCLI | LinksPlatform",
    "keywords": "Class TerminalCLI Inheritance System.Object TerminalCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class TerminalCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Sandbox.TextParser.html": {
    "href": "api/Platform.Sandbox.TextParser.html",
    "title": "Class TextParser | LinksPlatform",
    "keywords": "Class TextParser Inheritance System.Object TextParser Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class TextParser : IDisposable Constructors TextParser() Declaration public TextParser() TextParser(Stream, Int32) Declaration public TextParser(Stream stream, int bufferSize = 81920) Parameters Type Name Description System.IO.Stream stream System.Int32 bufferSize TextParser(String, Int32) Declaration public TextParser(string path, int bufferSize = 81920) Parameters Type Name Description System.String path System.Int32 bufferSize Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/Platform.Data.Core.Sequences.LeftSequenceWalker-1.html": {
    "href": "api/Platform.Data.Core.Sequences.LeftSequenceWalker-1.html",
    "title": "Class LeftSequenceWalker<TLink> | LinksPlatform",
    "keywords": "Class LeftSequenceWalker<TLink> Inheritance System.Object SequenceWalkerBase <TLink> LeftSequenceWalker<TLink> Implements ISequenceWalker <TLink> Inherited Members SequenceWalkerBase<TLink>.Walk(TLink) SequenceWalkerBase<TLink>.IsElement(IList<TLink>) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class LeftSequenceWalker<TLink> : SequenceWalkerBase<TLink>, ISequenceWalker<TLink> Type Parameters Name Description TLink Constructors LeftSequenceWalker(ILinks<TLink>) Declaration public LeftSequenceWalker(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods GetNextElementAfterPop(IList<TLink>) Declaration protected override IList<TLink> GetNextElementAfterPop(IList<TLink> element) Parameters Type Name Description System.Collections.Generic.IList <TLink> element Returns Type Description System.Collections.Generic.IList <TLink> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.GetNextElementAfterPop(System.Collections.Generic.IList<TLink>) GetNextElementAfterPush(IList<TLink>) Declaration protected override IList<TLink> GetNextElementAfterPush(IList<TLink> element) Parameters Type Name Description System.Collections.Generic.IList <TLink> element Returns Type Description System.Collections.Generic.IList <TLink> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.GetNextElementAfterPush(System.Collections.Generic.IList<TLink>) WalkContents(IList<TLink>) Declaration protected override IEnumerable<IList<TLink>> WalkContents(IList<TLink> element) Parameters Type Name Description System.Collections.Generic.IList <TLink> element Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.IList <TLink>> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.WalkContents(System.Collections.Generic.IList<TLink>) Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Data.ConsoleTerminal.Program.html": {
    "href": "api/Platform.Data.ConsoleTerminal.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.ConsoleTerminal Assembly : cs.temp.dll.dll Syntax public class Program Methods Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.html",
    "title": "Namespace Platform.Data.Core.Sequences.Frequencies.Cache | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Sequences.Frequencies.Cache Classes DoubletComparer<T> FrequenciesCacheBasedLinkFrequencyIncrementer<TLink> FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> LinkFrequenciesCache<TLink> LinkFrequency<TLink> Structs Doublet<T>"
  },
  "api/Platform.Sandbox.NetParserTest.html": {
    "href": "api/Platform.Sandbox.NetParserTest.html",
    "title": "Class NetParserTest | LinksPlatform",
    "keywords": "Class NetParserTest Inheritance System.Object NetParserTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class NetParserTest Methods Run() Declaration public static void Run()"
  },
  "api/Platform.Data.Core.Triplets.NumberHelpers.html": {
    "href": "api/Platform.Data.Core.Triplets.NumberHelpers.html",
    "title": "Class NumberHelpers | LinksPlatform",
    "keywords": "Class NumberHelpers Inheritance System.Object NumberHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class NumberHelpers Fields LinksToNumbers Declaration public static Dictionary<Link, long> LinksToNumbers Field Value Type Description System.Collections.Generic.Dictionary < Link , System.Int64 > NumbersToLinks Declaration public static Link[] NumbersToLinks Field Value Type Description Link [] Methods FromNumber(Int64) Declaration public static Link FromNumber(long number) Parameters Type Name Description System.Int64 number Returns Type Description Link Recreate() Declaration public static void Recreate() ToNumber(Link) Declaration public static long ToNumber(Link link) Parameters Type Name Description Link link Returns Type Description System.Int64"
  },
  "api/Platform.Data.Core.Triplets.Link.UpdatedDelegate.html": {
    "href": "api/Platform.Data.Core.Triplets.Link.UpdatedDelegate.html",
    "title": "Delegate Link.UpdatedDelegate | LinksPlatform",
    "keywords": "Delegate Link.UpdatedDelegate Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public delegate void UpdatedDelegate(LinkDefinition linkBeforeUpdate, LinkDefinition linkAfterUpdate); Parameters Type Name Description LinkDefinition linkBeforeUpdate LinkDefinition linkAfterUpdate"
  },
  "api/Platform.Data.MasterServer.html": {
    "href": "api/Platform.Data.MasterServer.html",
    "title": "Namespace Platform.Data.MasterServer | LinksPlatform",
    "keywords": "Namespace Platform.Data.MasterServer Classes Program"
  },
  "api/Platform.Sandbox.ConceptTest.html": {
    "href": "api/Platform.Sandbox.ConceptTest.html",
    "title": "Class ConceptTest | LinksPlatform",
    "keywords": "Class ConceptTest Inheritance System.Object ConceptTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class ConceptTest Methods Test(String) Declaration public static void Test(string filename) Parameters Type Name Description System.String filename TestGexf(String) Declaration public static void TestGexf(string filename) Parameters Type Name Description System.String filename"
  },
  "api/Platform.Sandbox.TerminalExperiment.html": {
    "href": "api/Platform.Sandbox.TerminalExperiment.html",
    "title": "Class TerminalExperiment | LinksPlatform",
    "keywords": "Class TerminalExperiment Inheritance System.Object TerminalExperiment Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class TerminalExperiment Properties IsRunning Declaration public static bool IsRunning { get; set; } Property Value Type Description System.Boolean Methods LinkCreated(LinkDefinition) Declaration public static void LinkCreated(LinkDefinition createdLink) Parameters Type Name Description LinkDefinition createdLink Run() Declaration public static void Run()"
  },
  "api/Platform.Data.Core.Triplets.GexfExporter.html": {
    "href": "api/Platform.Data.Core.Triplets.GexfExporter.html",
    "title": "Class GexfExporter | LinksPlatform",
    "keywords": "Class GexfExporter Inheritance System.Object GexfExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class GexfExporter Methods ToFile(String) Declaration public static void ToFile(string path) Parameters Type Name Description System.String path ToFile(String, Func<Link, Boolean>) Declaration public static void ToFile(string path, Func<Link, bool> filter) Parameters Type Name Description System.String path System.Func < Link , System.Boolean > filter ToXml() Declaration public static string ToXml() Returns Type Description System.String"
  },
  "api/Platform.Sandbox.TreeStructureExperiments.html": {
    "href": "api/Platform.Sandbox.TreeStructureExperiments.html",
    "title": "Class TreeStructureExperiments | LinksPlatform",
    "keywords": "Class TreeStructureExperiments Inheritance System.Object TreeStructureExperiments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class TreeStructureExperiments Methods RunExperiment() Declaration public static void RunExperiment()"
  },
  "api/Platform.Data.Core.Collections.Lists.OpenDoublyLinkedListMethods-1.html": {
    "href": "api/Platform.Data.Core.Collections.Lists.OpenDoublyLinkedListMethods-1.html",
    "title": "Class OpenDoublyLinkedListMethods<TElement> | LinksPlatform",
    "keywords": "Class OpenDoublyLinkedListMethods<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> DoublyLinkedListMethodsBase <TElement> OpenDoublyLinkedListMethods<TElement> Inherited Members DoublyLinkedListMethodsBase<TElement>.GetFirst() DoublyLinkedListMethodsBase<TElement>.GetLast() DoublyLinkedListMethodsBase<TElement>.GetPrevious(TElement) DoublyLinkedListMethodsBase<TElement>.GetNext(TElement) DoublyLinkedListMethodsBase<TElement>.GetSize() DoublyLinkedListMethodsBase<TElement>.SetFirst(TElement) DoublyLinkedListMethodsBase<TElement>.SetLast(TElement) DoublyLinkedListMethodsBase<TElement>.SetPrevious(TElement, TElement) DoublyLinkedListMethodsBase<TElement>.SetNext(TElement, TElement) DoublyLinkedListMethodsBase<TElement>.SetSize(TElement) DoublyLinkedListMethodsBase<TElement>.IncrementSize() DoublyLinkedListMethodsBase<TElement>.DecrementSize() GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Lists Assembly : cs.temp.dll.dll Syntax public abstract class OpenDoublyLinkedListMethods<TElement> : DoublyLinkedListMethodsBase<TElement> Type Parameters Name Description TElement Remarks Based on https://en.wikipedia.org/wiki/Doubly_linked_list Methods AttachAfter(TElement, TElement) Declaration public void AttachAfter(TElement baseElement, TElement newElement) Parameters Type Name Description TElement baseElement TElement newElement AttachAsFirst(TElement) Declaration public void AttachAsFirst(TElement element) Parameters Type Name Description TElement element AttachAsLast(TElement) Declaration public void AttachAsLast(TElement element) Parameters Type Name Description TElement element AttachBefore(TElement, TElement) Declaration public void AttachBefore(TElement baseElement, TElement newElement) Parameters Type Name Description TElement baseElement TElement newElement Detach(TElement) Declaration public void Detach(TElement element) Parameters Type Name Description TElement element"
  },
  "api/Platform.Data.Core.Sequences.SequenceToItsLocalElementLevelsConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.SequenceToItsLocalElementLevelsConverter-1.html",
    "title": "Class SequenceToItsLocalElementLevelsConverter<TLink> | LinksPlatform",
    "keywords": "Class SequenceToItsLocalElementLevelsConverter<TLink> Inheritance System.Object SequenceToItsLocalElementLevelsConverter<TLink> Implements IConverter < System.Collections.Generic.IList <TLink>> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class SequenceToItsLocalElementLevelsConverter<TLink> : LinksOperatorBase<TLink>, IConverter<IList<TLink>> Type Parameters Name Description TLink Constructors SequenceToItsLocalElementLevelsConverter(ILinks<TLink>, IConverter<Doublet<TLink>, TLink>) Declaration public SequenceToItsLocalElementLevelsConverter(ILinks<TLink> links, IConverter<Doublet<TLink>, TLink> linkToItsFrequencyToNumberConveter) Parameters Type Name Description ILinks <TLink> links IConverter < Doublet <TLink>, TLink> linkToItsFrequencyToNumberConveter Methods Convert(IList<TLink>) Declaration public IList<TLink> Convert(IList<TLink> sequence) Parameters Type Name Description System.Collections.Generic.IList <TLink> sequence Returns Type Description System.Collections.Generic.IList <TLink> GetFrequencyNumber(TLink, TLink) Declaration public TLink GetFrequencyNumber(TLink source, TLink target) Parameters Type Name Description TLink source TLink target Returns Type Description TLink Implements IConverter<>"
  },
  "api/Platform.Examples.WikipediaPagesCounter.html": {
    "href": "api/Platform.Examples.WikipediaPagesCounter.html",
    "title": "Class WikipediaPagesCounter | LinksPlatform",
    "keywords": "Class WikipediaPagesCounter Inheritance System.Object WikipediaPagesCounter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class WikipediaPagesCounter Constructors WikipediaPagesCounter() Declaration public WikipediaPagesCounter() Methods Count(String, CancellationToken) Declaration public Task Count(string file, CancellationToken token) Parameters Type Name Description System.String file CancellationToken token Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Platform.Examples.MasterServer.html": {
    "href": "api/Platform.Examples.MasterServer.html",
    "title": "Class MasterServer | LinksPlatform",
    "keywords": "Class MasterServer Inheritance System.Object MasterServer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class MasterServer Constructors MasterServer(ILinks<UInt64>, Sequences, UdpSender) Declaration public MasterServer(ILinks<ulong> links, Sequences sequences, UdpSender sender) Parameters Type Name Description ILinks < System.UInt64 > links Sequences sequences UdpSender sender Methods Create(String) Declaration public void Create(string message) Parameters Type Name Description System.String message IsSearch(String) Declaration public bool IsSearch(string message) Parameters Type Name Description System.String message Returns Type Description System.Boolean PrintContents(Action<String>) Declaration public void PrintContents(Action<string> messageHandler) Parameters Type Name Description System.Action < System.String > messageHandler Search(String) Declaration public void Search(string message) Parameters Type Name Description System.String message"
  },
  "api/Platform.Data.Core.Sequences.ISequenceAppender-1.html": {
    "href": "api/Platform.Data.Core.Sequences.ISequenceAppender-1.html",
    "title": "Interface ISequenceAppender<TLink> | LinksPlatform",
    "keywords": "Interface ISequenceAppender<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public interface ISequenceAppender<TLink> Type Parameters Name Description TLink Methods Append(TLink, TLink) Declaration TLink Append(TLink sequence, TLink appendant) Parameters Type Name Description TLink sequence TLink appendant Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Doublets.LinksDisposableDecoratorBase-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksDisposableDecoratorBase-1.html",
    "title": "Class LinksDisposableDecoratorBase<T> | LinksPlatform",
    "keywords": "Class LinksDisposableDecoratorBase<T> Inheritance System.Object LinksDisposableDecoratorBase<T> UInt64Links UInt64LinksTransactionsLayer Implements ILinks <T> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public abstract class LinksDisposableDecoratorBase<T> : DisposableBase, ILinks<T> Type Parameters Name Description T Constructors LinksDisposableDecoratorBase(ILinks<T>) Declaration protected LinksDisposableDecoratorBase(ILinks<T> links) Parameters Type Name Description ILinks <T> links Fields Links Declaration public readonly ILinks<T> Links Field Value Type Description ILinks <T> Properties AllowMultipleDisposeCalls Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description System.Boolean Constants Declaration public ILinksCombinedConstants<T, T, int> Constants { get; } Property Value Type Description ILinksCombinedConstants <T, T, System.Int32 > Methods Count(IList<T>) Declaration public virtual T Count(IList<T> restriction) Parameters Type Name Description System.Collections.Generic.IList <T> restriction Returns Type Description T Create() Declaration public virtual T Create() Returns Type Description T Delete(T) Declaration public virtual void Delete(T link) Parameters Type Name Description T link DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Each(Func<IList<T>, T>, IList<T>) Declaration public virtual T Each(Func<IList<T>, T> handler, IList<T> restrictions) Parameters Type Name Description System.Func < System.Collections.Generic.IList <T>, T> handler System.Collections.Generic.IList <T> restrictions Returns Type Description T Update(IList<T>) Declaration public virtual T Update(IList<T> restrictions) Parameters Type Name Description System.Collections.Generic.IList <T> restrictions Returns Type Description T Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Triplets.LinkExtensions.html": {
    "href": "api/Platform.Data.Core.Triplets.LinkExtensions.html",
    "title": "Class LinkExtensions | LinksPlatform",
    "keywords": "Class LinkExtensions Inheritance System.Object LinkExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public static class LinkExtensions Methods GetArrayOfRererersByLinker(Link) Declaration public static Link[] GetArrayOfRererersByLinker(this Link link) Parameters Type Name Description Link link Returns Type Description Link [] GetArrayOfRererersBySource(Link) Declaration public static Link[] GetArrayOfRererersBySource(this Link link) Parameters Type Name Description Link link Returns Type Description Link [] GetArrayOfRererersByTarget(Link) Declaration public static Link[] GetArrayOfRererersByTarget(this Link link) Parameters Type Name Description Link link Returns Type Description Link [] Is(Link, Link) Declaration public static bool Is(this Link link, Link class) Parameters Type Name Description Link link Link class Returns Type Description System.Boolean IsChar(Link) Declaration public static bool IsChar(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean IsGroup(Link) Declaration public static bool IsGroup(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean IsName(Link) Declaration public static bool IsName(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean IsString(Link) Declaration public static bool IsString(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean IsSum(Link) Declaration public static bool IsSum(this Link link) Parameters Type Name Description Link link Returns Type Description System.Boolean SetName(Link, String) Declaration public static Link SetName(this Link link, string name) Parameters Type Name Description Link link System.String name Returns Type Description Link TryGetName(Link, out String) Declaration public static bool TryGetName(this Link link, out string str) Parameters Type Name Description Link link System.String str Returns Type Description System.Boolean TryGetSpecificName(Link, out String) Declaration public static bool TryGetSpecificName(this Link link, out string name) Parameters Type Name Description Link link System.String name Returns Type Description System.Boolean WalkThroughSequence(Link, Action<Link>) Declaration public static void WalkThroughSequence(this Link link, Action<Link> action) Parameters Type Name Description Link link System.Action < Link > action"
  },
  "api/Platform.Tests.Helpers.ReflectionTests.html": {
    "href": "api/Platform.Tests.Helpers.ReflectionTests.html",
    "title": "Class ReflectionTests | LinksPlatform",
    "keywords": "Class ReflectionTests Inheritance System.Object ReflectionTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class ReflectionTests Methods ILBytesForDelegateAreAvailableTest() Declaration public void ILBytesForDelegateAreAvailableTest() ILBytesForDifferentDelegatesAreTheSameTest() Declaration public void ILBytesForDifferentDelegatesAreTheSameTest()"
  },
  "api/Platform.Tests.Data.Core.OptimalVariantSequenceTests.html": {
    "href": "api/Platform.Tests.Data.Core.OptimalVariantSequenceTests.html",
    "title": "Class OptimalVariantSequenceTests | LinksPlatform",
    "keywords": "Class OptimalVariantSequenceTests Inheritance System.Object OptimalVariantSequenceTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class OptimalVariantSequenceTests Methods DictionaryBasedFrequencyStoredOptimalVariantSequenceTest() Declaration public void DictionaryBasedFrequencyStoredOptimalVariantSequenceTest() LinksBasedFrequencyStoredOptimalVariantSequenceTest() Declaration public void LinksBasedFrequencyStoredOptimalVariantSequenceTest()"
  },
  "api/Platform.Data.Core.Collections.Trees.SizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Core.Collections.Trees.SizeBalancedTreeMethods-1.html",
    "title": "Class SizeBalancedTreeMethods<TElement> | LinksPlatform",
    "keywords": "Class SizeBalancedTreeMethods<TElement> Inheritance System.Object GenericCollectionMethodsBase <TElement> BinaryTreeMethodsBase <TElement> SizeBalancedTreeMethods<TElement> Inherited Members BinaryTreeMethodsBase<TElement>.GetLeftPointer(TElement) BinaryTreeMethodsBase<TElement>.GetRightPointer(TElement) BinaryTreeMethodsBase<TElement>.GetLeftValue(TElement) BinaryTreeMethodsBase<TElement>.GetRightValue(TElement) BinaryTreeMethodsBase<TElement>.GetSize(TElement) BinaryTreeMethodsBase<TElement>.SetLeft(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetRight(TElement, TElement) BinaryTreeMethodsBase<TElement>.SetSize(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheLeftOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.FirstIsToTheRightOfSecond(TElement, TElement) BinaryTreeMethodsBase<TElement>.GetLeftOrDefault(TElement) BinaryTreeMethodsBase<TElement>.GetRightOrDefault(TElement) BinaryTreeMethodsBase<TElement>.IncrementSize(TElement) BinaryTreeMethodsBase<TElement>.DecrementSize(TElement) BinaryTreeMethodsBase<TElement>.GetLeftSize(TElement) BinaryTreeMethodsBase<TElement>.GetRightSize(TElement) BinaryTreeMethodsBase<TElement>.GetSizeOrZero(TElement) BinaryTreeMethodsBase<TElement>.FixSize(TElement) BinaryTreeMethodsBase<TElement>.LeftRotate(IntPtr) BinaryTreeMethodsBase<TElement>.LeftRotate(TElement) BinaryTreeMethodsBase<TElement>.RightRotate(IntPtr) BinaryTreeMethodsBase<TElement>.RightRotate(TElement) BinaryTreeMethodsBase<TElement>.Contains(TElement, TElement) BinaryTreeMethodsBase<TElement>.ClearNode(TElement) BinaryTreeMethodsBase<TElement>.Attach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.Detach(IntPtr, TElement) BinaryTreeMethodsBase<TElement>.GetSize(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(IntPtr) BinaryTreeMethodsBase<TElement>.FixSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSizes(IntPtr) BinaryTreeMethodsBase<TElement>.ValidateSizes(TElement) BinaryTreeMethodsBase<TElement>.ValidateSize(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(IntPtr) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement) BinaryTreeMethodsBase<TElement>.PrintNodes(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNode(TElement) BinaryTreeMethodsBase<TElement>.PrintNode(TElement, StringBuilder, Int32) BinaryTreeMethodsBase<TElement>.PrintNodeValue(TElement, StringBuilder) GenericCollectionMethodsBase<TElement>.GetZero() GenericCollectionMethodsBase<TElement>.GetOne() GenericCollectionMethodsBase<TElement>.GetTwo() GenericCollectionMethodsBase<TElement>.ValueEqualToZero(IntPtr) GenericCollectionMethodsBase<TElement>.EqualToZero(TElement) GenericCollectionMethodsBase<TElement>.IsEquals(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.GreaterOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessOrEqualThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.LessThanZero(TElement) GenericCollectionMethodsBase<TElement>.LessThan(TElement, TElement) GenericCollectionMethodsBase<TElement>.Increment(TElement) GenericCollectionMethodsBase<TElement>.Decrement(TElement) GenericCollectionMethodsBase<TElement>.Add(TElement, TElement) GenericCollectionMethodsBase<TElement>.Subtract(TElement, TElement) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Collections.Trees Assembly : cs.temp.dll.dll Syntax public abstract class SizeBalancedTreeMethods<TElement> : BinaryTreeMethodsBase<TElement> Type Parameters Name Description TElement Remarks Можно сделать прошитую версию дерева, чтобы сделать проход по дереву более оптимальным. Также имеет смысл разобраться почему не работает версия с идеальной балансировкой. Methods AttachCore(IntPtr, TElement) Declaration protected override void AttachCore(IntPtr root, TElement node) Parameters Type Name Description System.IntPtr root TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.AttachCore(System.IntPtr, TElement) DetachCore(IntPtr, TElement) Declaration protected override void DetachCore(IntPtr root, TElement node) Parameters Type Name Description System.IntPtr root TElement node Overrides Platform.Data.Core.Collections.Trees.BinaryTreeMethodsBase<TElement>.DetachCore(System.IntPtr, TElement)"
  },
  "api/Platform.Data.Core.Triplets.SequenceHelpers.html": {
    "href": "api/Platform.Data.Core.Triplets.SequenceHelpers.html",
    "title": "Class SequenceHelpers | LinksPlatform",
    "keywords": "Class SequenceHelpers Inheritance System.Object SequenceHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public class SequenceHelpers Remarks TODO: Check that CollectMatchingSequences algorithm is working, if not throw it away. TODO: Think of the abstraction on Sequences that can be equally usefull for triple links, doublet links and so on. Fields MaxSequenceFormatSize Declaration public const int MaxSequenceFormatSize = 20 Field Value Type Description System.Int32 Methods CollectMatchingSequences(Link[]) Declaration public static List<Link> CollectMatchingSequences(Link[] links) Parameters Type Name Description Link [] links Returns Type Description System.Collections.Generic.List < Link > FormatSequence(Link) Declaration public static string FormatSequence(Link sequence) Parameters Type Name Description Link sequence Returns Type Description System.String GetLeftElements(Link, Link) Declaration public static Link[] GetLeftElements(Link startLink, Link leftLink) Parameters Type Name Description Link startLink Link leftLink Returns Type Description Link [] GetRightElements(Link, Link) Declaration public static Link[] GetRightElements(Link startLink, Link rightLink) Parameters Type Name Description Link startLink Link rightLink Returns Type Description Link [] TryStepLeft(Link, Link, Link[], Int32) Declaration public static bool TryStepLeft(Link startLink, Link leftLink, Link[] result, int offset) Parameters Type Name Description Link startLink Link leftLink Link [] result System.Int32 offset Returns Type Description System.Boolean TryStepRight(Link, Link, Link[], Int32) Declaration public static bool TryStepRight(Link startLink, Link rightLink, Link[] result, int offset) Parameters Type Name Description Link startLink Link rightLink Link [] result System.Int32 offset Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Triplets.Link.CreatedDelegate.html": {
    "href": "api/Platform.Data.Core.Triplets.Link.CreatedDelegate.html",
    "title": "Delegate Link.CreatedDelegate | LinksPlatform",
    "keywords": "Delegate Link.CreatedDelegate Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public delegate void CreatedDelegate(LinkDefinition createdLink); Parameters Type Name Description LinkDefinition createdLink"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyOneOffCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.TotalSequenceSymbolFrequencyOneOffCounter-1.html",
    "title": "Class TotalSequenceSymbolFrequencyOneOffCounter<TLink> | LinksPlatform",
    "keywords": "Class TotalSequenceSymbolFrequencyOneOffCounter<TLink> Inheritance System.Object TotalSequenceSymbolFrequencyOneOffCounter<TLink> TotalMarkedSequenceSymbolFrequencyOneOffCounter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class TotalSequenceSymbolFrequencyOneOffCounter<TLink> : ICounter<TLink> Type Parameters Name Description TLink Constructors TotalSequenceSymbolFrequencyOneOffCounter(ILinks<TLink>, TLink) Declaration public TotalSequenceSymbolFrequencyOneOffCounter(ILinks<TLink> links, TLink symbol) Parameters Type Name Description ILinks <TLink> links TLink symbol Fields _links Declaration protected readonly ILinks<TLink> _links Field Value Type Description ILinks <TLink> _symbol Declaration protected readonly TLink _symbol Field Value Type Description TLink _total Declaration protected TLink _total Field Value Type Description TLink _visits Declaration protected readonly HashSet<TLink> _visits Field Value Type Description HashSet <TLink> Methods Count() Declaration public TLink Count() Returns Type Description TLink CountSequenceSymbolFrequency(TLink) Declaration protected virtual void CountSequenceSymbolFrequency(TLink link) Parameters Type Name Description TLink link"
  },
  "api/Platform.Examples.FileIndexerCLI.html": {
    "href": "api/Platform.Examples.FileIndexerCLI.html",
    "title": "Class FileIndexerCLI | LinksPlatform",
    "keywords": "Class FileIndexerCLI Inheritance System.Object FileIndexerCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class FileIndexerCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Data.Core.Doublets.Link-1.html": {
    "href": "api/Platform.Data.Core.Doublets.Link-1.html",
    "title": "Struct Link<TLink> | LinksPlatform",
    "keywords": "Struct Link<TLink> Структура описывающая уникальную связь. Implements System.IEquatable < Link <TLink>> System.Collections.Generic.IList <TLink> System.Collections.Generic.ICollection <TLink> System.Collections.Generic.IEnumerable <TLink> System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public struct Link<TLink> : IEquatable<Link<TLink>>, IList<TLink>, ICollection<TLink>, IEnumerable<TLink>, IEnumerable Type Parameters Name Description TLink Constructors Link(TLink, TLink) Declaration public Link(TLink source, TLink target) Parameters Type Name Description TLink source TLink target Link(TLink, TLink, TLink) Declaration public Link(TLink index, TLink source, TLink target) Parameters Type Name Description TLink index TLink source TLink target Link(TLink[]) Declaration public Link(params TLink[] values) Parameters Type Name Description TLink[] values Link(IList<TLink>) Declaration public Link(IList<TLink> values) Parameters Type Name Description System.Collections.Generic.IList <TLink> values Fields Index Declaration public readonly TLink Index Field Value Type Description TLink Null Declaration public static readonly Link<TLink> Null Field Value Type Description Link <TLink> Source Declaration public readonly TLink Source Field Value Type Description TLink Target Declaration public readonly TLink Target Field Value Type Description TLink Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Item[Int32] Declaration public TLink this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description TLink Methods Add(TLink) Declaration public void Add(TLink item) Parameters Type Name Description TLink item Clear() Declaration public void Clear() Contains(TLink) Declaration public bool Contains(TLink item) Parameters Type Name Description TLink item Returns Type Description System.Boolean CopyTo(TLink[], Int32) Declaration public void CopyTo(TLink[] array, int arrayIndex) Parameters Type Name Description TLink[] array System.Int32 arrayIndex Create(TLink, TLink) Declaration public static Link<TLink> Create(TLink source, TLink target) Parameters Type Name Description TLink source TLink target Returns Type Description Link <TLink> Equals(Link<TLink>) Declaration public bool Equals(Link<TLink> other) Parameters Type Name Description Link <TLink> other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetEnumerator() Declaration public IEnumerator<TLink> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator <TLink> GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() IndexOf(TLink) Declaration public int IndexOf(TLink item) Parameters Type Name Description TLink item Returns Type Description System.Int32 Insert(Int32, TLink) Declaration public void Insert(int index, TLink item) Parameters Type Name Description System.Int32 index TLink item IsNull() Declaration public bool IsNull() Returns Type Description System.Boolean Remove(TLink) Declaration public bool Remove(TLink item) Parameters Type Name Description TLink item Returns Type Description System.Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index ToArray() Declaration public TLink[] ToArray() Returns Type Description TLink[] ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString(TLink, TLink) Declaration public static string ToString(TLink source, TLink target) Parameters Type Name Description TLink source TLink target Returns Type Description System.String ToString(TLink, TLink, TLink) Declaration public static string ToString(TLink index, TLink source, TLink target) Parameters Type Name Description TLink index TLink source TLink target Returns Type Description System.String Operators Implicit(TLink[] to Link<TLink>) Declaration public static implicit operator Link<TLink>(TLink[] linkArray) Parameters Type Name Description TLink[] linkArray Returns Type Description Link <TLink> Implicit(Link<TLink> to TLink[]) Declaration public static implicit operator TLink[](Link<TLink> link) Parameters Type Name Description Link <TLink> link Returns Type Description TLink[] Implements System.IEquatable<T> System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Platform.Data.Core.Doublets.FrequencyIncrementer-1.html": {
    "href": "api/Platform.Data.Core.Doublets.FrequencyIncrementer-1.html",
    "title": "Class FrequencyIncrementer<TLink> | LinksPlatform",
    "keywords": "Class FrequencyIncrementer<TLink> Inheritance System.Object LinksOperatorBase <TLink> FrequencyIncrementer<TLink> Implements IIncrementer <TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class FrequencyIncrementer<TLink> : LinksOperatorBase<TLink>, IIncrementer<TLink> Type Parameters Name Description TLink Constructors FrequencyIncrementer(ILinks<TLink>, TLink, TLink, IIncrementer<TLink>) Declaration public FrequencyIncrementer(ILinks<TLink> links, TLink frequencyMarker, TLink unaryOne, IIncrementer<TLink> unaryNumberIncrementer) Parameters Type Name Description ILinks <TLink> links TLink frequencyMarker TLink unaryOne IIncrementer <TLink> unaryNumberIncrementer Methods Increment(TLink) Declaration public TLink Increment(TLink frequency) Parameters Type Name Description TLink frequency Returns Type Description TLink Implements IIncrementer<>"
  },
  "api/Platform.Sandbox.NetParser.html": {
    "href": "api/Platform.Sandbox.NetParser.html",
    "title": "Class NetParser | LinksPlatform",
    "keywords": "Class NetParser Inheritance System.Object NetParser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class NetParser Remarks TODO: Use PEG instead. Methods ParseStatement(String) Declaration public static void ParseStatement(string statement) Parameters Type Name Description System.String statement"
  },
  "api/Platform.Data.Core.Common.Point-1.html": {
    "href": "api/Platform.Data.Core.Common.Point-1.html",
    "title": "Class Point<TLink> | LinksPlatform",
    "keywords": "Class Point<TLink> Inheritance System.Object Point<TLink> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Common Assembly : cs.temp.dll.dll Syntax public static class Point<TLink> Type Parameters Name Description TLink Methods IsFullPoint(TLink[]) Declaration public static bool IsFullPoint(params TLink[] link) Parameters Type Name Description TLink[] link Returns Type Description System.Boolean IsFullPoint(IList<TLink>) Declaration public static bool IsFullPoint(IList<TLink> link) Parameters Type Name Description System.Collections.Generic.IList <TLink> link Returns Type Description System.Boolean IsFullPointUnchecked(IList<TLink>) Declaration public static bool IsFullPointUnchecked(IList<TLink> link) Parameters Type Name Description System.Collections.Generic.IList <TLink> link Returns Type Description System.Boolean IsPartialPoint(TLink[]) Declaration public static bool IsPartialPoint(params TLink[] link) Parameters Type Name Description TLink[] link Returns Type Description System.Boolean IsPartialPoint(IList<TLink>) Declaration public static bool IsPartialPoint(IList<TLink> link) Parameters Type Name Description System.Collections.Generic.IList <TLink> link Returns Type Description System.Boolean IsPartialPointUnchecked(IList<TLink>) Declaration public static bool IsPartialPointUnchecked(IList<TLink> link) Parameters Type Name Description System.Collections.Generic.IList <TLink> link Returns Type Description System.Boolean"
  },
  "api/Platform.Data.Core.Sequences.ISequences-1.html": {
    "href": "api/Platform.Data.Core.Sequences.ISequences-1.html",
    "title": "Interface ISequences<TLink> | LinksPlatform",
    "keywords": "Interface ISequences<TLink> Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public interface ISequences<TLink> Type Parameters Name Description TLink Methods Count(TLink[]) Declaration ulong Count(params TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description System.UInt64 Create(TLink[]) Declaration TLink Create(params TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description TLink Delete(TLink[]) Declaration void Delete(params TLink[] sequence) Parameters Type Name Description TLink[] sequence Each(Func<TLink, Boolean>, IList<TLink>) Declaration bool Each(Func<TLink, bool> handler, IList<TLink> sequence) Parameters Type Name Description System.Func <TLink, System.Boolean > handler System.Collections.Generic.IList <TLink> sequence Returns Type Description System.Boolean EachPart(Func<TLink, Boolean>, TLink) Declaration bool EachPart(Func<TLink, bool> handler, TLink sequence) Parameters Type Name Description System.Func <TLink, System.Boolean > handler TLink sequence Returns Type Description System.Boolean Update(TLink[], TLink[]) Declaration TLink Update(TLink[] sequence, TLink[] newSequence) Parameters Type Name Description TLink[] sequence TLink[] newSequence Returns Type Description TLink"
  },
  "api/Platform.Data.Core.Doublets.UInt64Link.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64Link.html",
    "title": "Struct UInt64Link | LinksPlatform",
    "keywords": "Struct UInt64Link Структура описывающая уникальную связь. Implements System.IEquatable < UInt64Link > System.Collections.Generic.IList < System.UInt64 > System.Collections.Generic.ICollection < System.UInt64 > System.Collections.Generic.IEnumerable < System.UInt64 > System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public struct UInt64Link : IEquatable<UInt64Link>, IList<ulong>, ICollection<ulong>, IEnumerable<ulong>, IEnumerable Constructors UInt64Link(IList<UInt64>) Declaration public UInt64Link(IList<ulong> values) Parameters Type Name Description System.Collections.Generic.IList < System.UInt64 > values UInt64Link(UInt64, UInt64) Declaration public UInt64Link(ulong source, ulong target) Parameters Type Name Description System.UInt64 source System.UInt64 target UInt64Link(UInt64, UInt64, UInt64) Declaration public UInt64Link(ulong index, ulong source, ulong target) Parameters Type Name Description System.UInt64 index System.UInt64 source System.UInt64 target UInt64Link(UInt64[]) Declaration public UInt64Link(params ulong[] values) Parameters Type Name Description System.UInt64 [] values Fields Index Declaration public readonly ulong Index Field Value Type Description System.UInt64 Null Declaration public static readonly UInt64Link Null Field Value Type Description UInt64Link Source Declaration public readonly ulong Source Field Value Type Description System.UInt64 Target Declaration public readonly ulong Target Field Value Type Description System.UInt64 Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Item[Int32] Declaration public ulong this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.UInt64 Methods Add(UInt64) Declaration public void Add(ulong item) Parameters Type Name Description System.UInt64 item Clear() Declaration public void Clear() Contains(UInt64) Declaration public bool Contains(ulong item) Parameters Type Name Description System.UInt64 item Returns Type Description System.Boolean CopyTo(UInt64[], Int32) Declaration public void CopyTo(ulong[] array, int arrayIndex) Parameters Type Name Description System.UInt64 [] array System.Int32 arrayIndex Create(UInt64, UInt64) Declaration public static UInt64Link Create(ulong source, ulong target) Parameters Type Name Description System.UInt64 source System.UInt64 target Returns Type Description UInt64Link Equals(UInt64Link) Declaration public bool Equals(UInt64Link other) Parameters Type Name Description UInt64Link other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetEnumerator() Declaration public IEnumerator<ulong> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < System.UInt64 > GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() IndexOf(UInt64) Declaration public int IndexOf(ulong item) Parameters Type Name Description System.UInt64 item Returns Type Description System.Int32 Insert(Int32, UInt64) Declaration public void Insert(int index, ulong item) Parameters Type Name Description System.Int32 index System.UInt64 item IsNull() Declaration public bool IsNull() Returns Type Description System.Boolean Remove(UInt64) Declaration public bool Remove(ulong item) Parameters Type Name Description System.UInt64 item Returns Type Description System.Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index ToArray() Declaration public ulong[] ToArray() Returns Type Description System.UInt64 [] ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString(UInt64, UInt64) Declaration public static string ToString(ulong source, ulong target) Parameters Type Name Description System.UInt64 source System.UInt64 target Returns Type Description System.String ToString(UInt64, UInt64, UInt64) Declaration public static string ToString(ulong index, ulong source, ulong target) Parameters Type Name Description System.UInt64 index System.UInt64 source System.UInt64 target Returns Type Description System.String Operators Implicit(UInt64Link to UInt64[]) Declaration public static implicit operator ulong[](UInt64Link link) Parameters Type Name Description UInt64Link link Returns Type Description System.UInt64 [] Implicit(UInt64[] to UInt64Link) Declaration public static implicit operator UInt64Link(ulong[] linkArray) Parameters Type Name Description System.UInt64 [] linkArray Returns Type Description UInt64Link Implements System.IEquatable<T> System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Platform.Data.Core.Doublets.UInt64ResizableDirectMemoryLinks.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64ResizableDirectMemoryLinks.html",
    "title": "Class UInt64ResizableDirectMemoryLinks | LinksPlatform",
    "keywords": "Class UInt64ResizableDirectMemoryLinks Inheritance System.Object UInt64ResizableDirectMemoryLinks Implements ILinks < System.UInt64 > Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class UInt64ResizableDirectMemoryLinks : DisposableBase, ILinks<ulong> Remarks TODO: Вместо address и size принимать IMemory (возможно потребуется добавить Step и StepSize). Constructors UInt64ResizableDirectMemoryLinks(IResizableDirectMemory) Declaration public UInt64ResizableDirectMemoryLinks(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory UInt64ResizableDirectMemoryLinks(IResizableDirectMemory, Int64) Declaration public UInt64ResizableDirectMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory memory System.Int64 memoryReservationStep UInt64ResizableDirectMemoryLinks(String) Declaration public UInt64ResizableDirectMemoryLinks(string address) Parameters Type Name Description System.String address UInt64ResizableDirectMemoryLinks(String, Int64) Создаёт экземпляр базы данных Links в файле по указанному адресу, с указанным минимальным шагом расширения базы данных. Declaration public UInt64ResizableDirectMemoryLinks(string address, long memoryReservationStep) Parameters Type Name Description System.String address Полный пусть к файлу базы данных. System.Int64 memoryReservationStep Минимальный шаг расширения базы данных в байтах. Fields DefaultLinksSizeStep Declaration public static readonly long DefaultLinksSizeStep Field Value Type Description System.Int64 LinkSizeInBytes Возвращает размер одной связи в байтах. Declaration public static readonly int LinkSizeInBytes Field Value Type Description System.Int32 Remarks Используется только во вне класса, не рекомедуется использовать внутри. Так как во вне не обязательно будет доступен unsafe С#. Properties AllowMultipleDisposeCalls Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description System.Boolean Constants Declaration public ILinksCombinedConstants<ulong, ulong, int> Constants { get; } Property Value Type Description ILinksCombinedConstants < System.UInt64 , System.UInt64 , System.Int32 > Methods Count(IList<UInt64>) Declaration public ulong Count(IList<ulong> restrictions) Parameters Type Name Description System.Collections.Generic.IList < System.UInt64 > restrictions Returns Type Description System.UInt64 Create() Declaration public ulong Create() Returns Type Description System.UInt64 Remarks TODO: Возможно нужно будет заполнение нулями, если внешнее API ими не заполняет пространство Delete(UInt64) Declaration public void Delete(ulong link) Parameters Type Name Description System.UInt64 link DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed Each(Func<IList<UInt64>, UInt64>, IList<UInt64>) Declaration public ulong Each(Func<IList<ulong>, ulong> handler, IList<ulong> restrictions) Parameters Type Name Description System.Func < System.Collections.Generic.IList < System.UInt64 >, System.UInt64 > handler System.Collections.Generic.IList < System.UInt64 > restrictions Returns Type Description System.UInt64 Update(IList<UInt64>) Declaration public ulong Update(IList<ulong> values) Parameters Type Name Description System.Collections.Generic.IList < System.UInt64 > values Returns Type Description System.UInt64 Remarks TODO: Возможно можно перемещать значения, если указан индекс, но значение существует в другом месте (но не в менеджере памяти, а в логике Links) Implements ILinks<TLink>"
  },
  "api/Platform.Data.Core.Doublets.LinksExtensions.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksExtensions.html",
    "title": "Class LinksExtensions | LinksPlatform",
    "keywords": "Class LinksExtensions Inheritance System.Object LinksExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public static class LinksExtensions Fields Constants Declaration public static readonly LinksConstants<bool, ulong, int> Constants Field Value Type Description LinksConstants < System.Boolean , System.UInt64 , System.Int32 > Methods All<TLink>(ILinks<TLink>, TLink[]) Declaration public static IList<IList<TLink>> All<TLink>(this ILinks<TLink> links, params TLink[] restrictions) Parameters Type Name Description ILinks <TLink> links TLink[] restrictions Returns Type Description System.Collections.Generic.IList < System.Collections.Generic.IList <TLink>> Type Parameters Name Description TLink AnyLinkIsAny(ILinks<UInt64>, UInt64[]) Declaration public static bool AnyLinkIsAny(this ILinks<ulong> links, params ulong[] sequence) Parameters Type Name Description ILinks < System.UInt64 > links System.UInt64 [] sequence Returns Type Description System.Boolean AppendStructure(ILinks<UInt64>, StringBuilder, HashSet<UInt64>, UInt64, Func<UInt64Link, Boolean>, Action<StringBuilder, UInt64Link>, Boolean, Boolean) Declaration public static void AppendStructure(this ILinks<ulong> links, StringBuilder sb, HashSet<ulong> visited, ulong linkIndex, Func<UInt64Link, bool> isElement, Action<StringBuilder, UInt64Link> appendElement, bool renderIndex = false, bool renderDebug = false) Parameters Type Name Description ILinks < System.UInt64 > links StringBuilder sb HashSet < System.UInt64 > visited System.UInt64 linkIndex System.Func < UInt64Link , System.Boolean > isElement System.Action < StringBuilder , UInt64Link > appendElement System.Boolean renderIndex System.Boolean renderDebug CheckPathExistance<TLink>(ILinks<TLink>, TLink[]) Declaration public static bool CheckPathExistance<TLink>(this ILinks<TLink> links, params TLink[] path) Parameters Type Name Description ILinks <TLink> links TLink[] path Returns Type Description System.Boolean Type Parameters Name Description TLink Remarks TODO: Как так? Как то что ниже может быть корректно? Скорее всего практически не применимо Предполагалось, что можно было конвертировать формируемый в проходе через SequenceWalker Stack в конкретный путь из Source, Target до связи, но это не всегда так. TODO: Возможно нужен метод, который именно выбрасывает исключения (EnsurePathExists) Count<TLink>(ILinks<TLink>, TLink[]) Declaration public static TLink Count<TLink>(this ILinks<TLink> links, params TLink[] restrictions) Parameters Type Name Description ILinks <TLink> links TLink[] restrictions Returns Type Description TLink Type Parameters Name Description TLink CreateAndUpdate<TLink>(ILinks<TLink>, TLink, TLink) Declaration public static TLink CreateAndUpdate<TLink>(this ILinks<TLink> links, TLink source, TLink target) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source TLink target Returns Type Description TLink Type Parameters Name Description TLink CreatePoint<TLink>(ILinks<TLink>) Declaration public static TLink CreatePoint<TLink>(this ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Хранилище связей. Returns Type Description TLink Type Parameters Name Description TLink DeleteAll<TLink>(ILinks<TLink>) Declaration public static void DeleteAll<TLink>(this ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Type Parameters Name Description TLink Remarks TODO: Возможно есть очень простой способ это сделать. (Например просто удалить файл, или изменить его размер таким образом, чтобы удалился весь контент) Например через _header->AllocatedLinks в ResizableDirectMemoryLinks DeleteIfExists<TLink>(ILinks<TLink>, TLink, TLink) Удаляет связь с указанными началом (Source) и концом (Target). Declaration public static TLink DeleteIfExists<TLink>(this ILinks<TLink> links, TLink source, TLink target) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source Индекс связи, которая является началом удаляемой связи. TLink target Индекс связи, которая является концом удаляемой связи. Returns Type Description TLink Type Parameters Name Description TLink DeleteMany<TLink>(ILinks<TLink>, IList<TLink>) Удаляет несколько связей. Declaration public static void DeleteMany<TLink>(this ILinks<TLink> links, IList<TLink> deletedLinks) Parameters Type Name Description ILinks <TLink> links Хранилище связей. System.Collections.Generic.IList <TLink> deletedLinks Список адресов связей к удалению. Type Parameters Name Description TLink DependenciesCount<TLink>(ILinks<TLink>, TLink) Declaration public static ulong DependenciesCount<TLink>(this ILinks<TLink> links, TLink link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Returns Type Description System.UInt64 Type Parameters Name Description TLink DependenciesExist<TLink>(ILinks<TLink>, TLink) Declaration public static bool DependenciesExist<TLink>(this ILinks<TLink> links, TLink link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Returns Type Description System.Boolean Type Parameters Name Description TLink Each<TLink>(ILinks<TLink>, TLink, TLink, Func<TLink, Boolean>) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static bool Each<TLink>(this ILinks<TLink> links, TLink source, TLink target, Func<TLink, bool> handler) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве начала, Constants.Any - любое начало, 1..∞ конкретное начало) TLink target Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве конца, Constants.Any - любой конец, 1..∞ конкретный конец) System.Func <TLink, System.Boolean > handler Обработчик каждой подходящей связи. Returns Type Description System.Boolean True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLink Each<TLink>(ILinks<TLink>, TLink, TLink, Func<IList<TLink>, TLink>) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static bool Each<TLink>(this ILinks<TLink> links, TLink source, TLink target, Func<IList<TLink>, TLink> handler) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве начала, Constants.Any - любое начало, 1..∞ конкретное начало) TLink target Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве конца, Constants.Any - любой конец, 1..∞ конкретный конец) System.Func < System.Collections.Generic.IList <TLink>, TLink> handler Обработчик каждой подходящей связи. Returns Type Description System.Boolean True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLink Each<TLink>(ILinks<TLink>, Func<IList<TLink>, TLink>, TLink[]) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static bool Each<TLink>(this ILinks<TLink> links, Func<IList<TLink>, TLink> handler, params TLink[] restrictions) Parameters Type Name Description ILinks <TLink> links Хранилище связей. System.Func < System.Collections.Generic.IList <TLink>, TLink> handler Обработчик каждой подходящей связи. TLink[] restrictions Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Any - отсутствие ограничения, 1..∞ конкретный адрес связи. Returns Type Description System.Boolean True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLink EnsureCreated<TLink>(ILinks<TLink>, TLink[]) Declaration public static void EnsureCreated<TLink>(this ILinks<TLink> links, params TLink[] addresses) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink[] addresses Type Parameters Name Description TLink EnsureCreated<TLink>(ILinks<TLink>, Func<TLink>, TLink[]) Declaration public static void EnsureCreated<TLink>(this ILinks<TLink> links, Func<TLink> creator, params TLink[] addresses) Parameters Type Name Description ILinks <TLink> links Хранилище связей. System.Func <TLink> creator TLink[] addresses Type Parameters Name Description TLink EnsureDoesNotExists<TLink>(ILinks<TLink>, TLink, TLink) Declaration public static void EnsureDoesNotExists<TLink>(this ILinks<TLink> links, TLink source, TLink target) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source TLink target Type Parameters Name Description TLink EnsureEachLinkExists(ILinks<UInt64>, IList<UInt64>) Declaration public static void EnsureEachLinkExists(this ILinks<ulong> links, IList<ulong> sequence) Parameters Type Name Description ILinks < System.UInt64 > links System.Collections.Generic.IList < System.UInt64 > sequence EnsureEachLinkIsAnyOrExists(ILinks<UInt64>, IList<UInt64>) Declaration public static void EnsureEachLinkIsAnyOrExists(this ILinks<ulong> links, IList<ulong> sequence) Parameters Type Name Description ILinks < System.UInt64 > links System.Collections.Generic.IList < System.UInt64 > sequence EnsureInnerReferenceExists<TLink>(ILinks<TLink>, TLink, String) Declaration public static void EnsureInnerReferenceExists<TLink>(this ILinks<TLink> links, TLink reference, string argumentName) Parameters Type Name Description ILinks <TLink> links TLink reference System.String argumentName Type Parameters Name Description TLink EnsureInnerReferenceExists<TLink>(ILinks<TLink>, IList<TLink>, String) Declaration public static void EnsureInnerReferenceExists<TLink>(this ILinks<TLink> links, IList<TLink> restrictions, string argumentName) Parameters Type Name Description ILinks <TLink> links System.Collections.Generic.IList <TLink> restrictions System.String argumentName Type Parameters Name Description TLink EnsureLinkExists<TLink>(ILinks<TLink>, TLink) Declaration public static void EnsureLinkExists<TLink>(this ILinks<TLink> links, TLink link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Type Parameters Name Description TLink EnsureLinkExists<TLink>(ILinks<TLink>, TLink, String) Declaration public static void EnsureLinkExists<TLink>(this ILinks<TLink> links, TLink link, string argumentName) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link System.String argumentName Type Parameters Name Description TLink EnsureLinkIsAnyOrExists<TLink>(ILinks<TLink>, TLink, String) Declaration public static void EnsureLinkIsAnyOrExists<TLink>(this ILinks<TLink> links, TLink link, string argumentName) Parameters Type Name Description ILinks <TLink> links TLink link System.String argumentName Type Parameters Name Description TLink EnsureLinkIsAnyOrExists<TLink>(ILinks<TLink>, IList<TLink>) Declaration public static void EnsureLinkIsAnyOrExists<TLink>(this ILinks<TLink> links, IList<TLink> restrictions) Parameters Type Name Description ILinks <TLink> links System.Collections.Generic.IList <TLink> restrictions Type Parameters Name Description TLink EnsureLinkIsItselfOrExists<TLink>(ILinks<TLink>, TLink, String) Declaration public static void EnsureLinkIsItselfOrExists<TLink>(this ILinks<TLink> links, TLink link, string argumentName) Parameters Type Name Description ILinks <TLink> links TLink link System.String argumentName Type Parameters Name Description TLink EnsureNoDependencies<TLink>(ILinks<TLink>, TLink) Declaration public static void EnsureNoDependencies<TLink>(this ILinks<TLink> links, TLink link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Type Parameters Name Description TLink EnsurePointsCreated<TLink>(ILinks<TLink>, TLink[]) Declaration public static void EnsurePointsCreated<TLink>(this ILinks<TLink> links, params TLink[] addresses) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink[] addresses Type Parameters Name Description TLink Equals<TLink>(ILinks<TLink>, TLink, TLink, TLink) Declaration public static bool Equals<TLink>(this ILinks<TLink> links, TLink link, TLink source, TLink target) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link TLink source TLink target Returns Type Description System.Boolean Type Parameters Name Description TLink Exists<TLink>(ILinks<TLink>, TLink) Возвращает значение, определяющее существует ли связь с указанным индексом в хранилище связей. Declaration public static bool Exists<TLink>(this ILinks<TLink> links, TLink link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Индекс проверяемой на существование связи. Returns Type Description System.Boolean Значение, определяющее существует ли связь. Type Parameters Name Description TLink Exists<TLink>(ILinks<TLink>, TLink, TLink) Возвращает значение, определяющее существует ли связь с указанными началом и концом в хранилище связей. Declaration public static bool Exists<TLink>(this ILinks<TLink> links, TLink source, TLink target) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source Начало связи. TLink target Конец связи. Returns Type Description System.Boolean Значение, определяющее существует ли связь. Type Parameters Name Description TLink First<TLink>(ILinks<TLink>) Declaration public static TLink First<TLink>(this ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Returns Type Description TLink Type Parameters Name Description TLink FormatStructure(ILinks<UInt64>, UInt64, Func<UInt64Link, Boolean>, Action<StringBuilder, UInt64Link>, Boolean, Boolean) Declaration public static string FormatStructure(this ILinks<ulong> links, ulong linkIndex, Func<UInt64Link, bool> isElement, Action<StringBuilder, UInt64Link> appendElement, bool renderIndex = false, bool renderDebug = false) Parameters Type Name Description ILinks < System.UInt64 > links System.UInt64 linkIndex System.Func < UInt64Link , System.Boolean > isElement System.Action < StringBuilder , UInt64Link > appendElement System.Boolean renderIndex System.Boolean renderDebug Returns Type Description System.String FormatStructure(ILinks<UInt64>, UInt64, Func<UInt64Link, Boolean>, Boolean, Boolean) Declaration public static string FormatStructure(this ILinks<ulong> links, ulong linkIndex, Func<UInt64Link, bool> isElement, bool renderIndex = false, bool renderDebug = false) Parameters Type Name Description ILinks < System.UInt64 > links System.UInt64 linkIndex System.Func < UInt64Link , System.Boolean > isElement System.Boolean renderIndex System.Boolean renderDebug Returns Type Description System.String GetByKeys<TLink>(ILinks<TLink>, TLink, Int32[]) Declaration public static TLink GetByKeys<TLink>(this ILinks<TLink> links, TLink root, params int[] path) Parameters Type Name Description ILinks <TLink> links TLink root System.Int32 [] path Returns Type Description TLink Type Parameters Name Description TLink Remarks Может потребовать дополнительного стека для PathElement's при использовании SequenceWalker. GetIndex<TLink>(ILinks<TLink>, IList<TLink>) Возвращает индекс указанной связи. Declaration public static TLink GetIndex<TLink>(this ILinks<TLink> links, IList<TLink> link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. System.Collections.Generic.IList <TLink> link Связь представленная списком, состоящим из её адреса и содержимого. Returns Type Description TLink Индекс начальной связи для указанной связи. Type Parameters Name Description TLink GetLink<TLink>(ILinks<TLink>, TLink) Возвращает части-значения для связи с указанным индексом. Declaration public static IList<TLink> GetLink<TLink>(this ILinks<TLink> links, TLink link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Индекс связи. Returns Type Description System.Collections.Generic.IList <TLink> Уникальную связь. Type Parameters Name Description TLink GetOrCreate<TLink>(ILinks<TLink>, TLink, TLink) Создаёт связь (если она не существовала), либо возвращает индекс существующей связи с указанными Source (началом) и Target (концом). Declaration public static TLink GetOrCreate<TLink>(this ILinks<TLink> links, TLink source, TLink target) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source Индекс связи, которая является началом на создаваемой связи. TLink target Индекс связи, которая является концом для создаваемой связи. Returns Type Description TLink Индекс связи, с указанным Source (началом) и Target (концом) Type Parameters Name Description TLink GetSource<TLink>(ILinks<TLink>, TLink) Возвращает индекс начальной (Source) связи для указанной связи. Declaration public static TLink GetSource<TLink>(this ILinks<TLink> links, TLink link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Индекс связи. Returns Type Description TLink Индекс начальной связи для указанной связи. Type Parameters Name Description TLink GetSource<TLink>(ILinks<TLink>, IList<TLink>) Возвращает индекс начальной (Source) связи для указанной связи. Declaration public static TLink GetSource<TLink>(this ILinks<TLink> links, IList<TLink> link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. System.Collections.Generic.IList <TLink> link Связь представленная списком, состоящим из её адреса и содержимого. Returns Type Description TLink Индекс начальной связи для указанной связи. Type Parameters Name Description TLink GetSquareMatrixSequenceElementByIndex<TLink>(ILinks<TLink>, TLink, UInt64, UInt64) Declaration public static TLink GetSquareMatrixSequenceElementByIndex<TLink>(this ILinks<TLink> links, TLink root, ulong size, ulong index) Parameters Type Name Description ILinks <TLink> links TLink root System.UInt64 size System.UInt64 index Returns Type Description TLink Type Parameters Name Description TLink GetTarget<TLink>(ILinks<TLink>, TLink) Возвращает индекс конечной (Target) связи для указанной связи. Declaration public static TLink GetTarget<TLink>(this ILinks<TLink> links, TLink link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Индекс связи. Returns Type Description TLink Индекс конечной связи для указанной связи. Type Parameters Name Description TLink GetTarget<TLink>(ILinks<TLink>, IList<TLink>) Возвращает индекс конечной (Target) связи для указанной связи. Declaration public static TLink GetTarget<TLink>(this ILinks<TLink> links, IList<TLink> link) Parameters Type Name Description ILinks <TLink> links Хранилище связей. System.Collections.Generic.IList <TLink> link Связь представленная списком, состоящим из её адреса и содержимого. Returns Type Description TLink Индекс конечной связи для указанной связи. Type Parameters Name Description TLink IsFullPoint<T>(ILinks<T>, T) Declaration public static bool IsFullPoint<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links T link Returns Type Description System.Boolean Type Parameters Name Description T IsInnerReference<TLink>(ILinks<TLink>, TLink) Declaration public static bool IsInnerReference<TLink>(this ILinks<TLink> links, TLink reference) Parameters Type Name Description ILinks <TLink> links TLink reference Returns Type Description System.Boolean Type Parameters Name Description TLink IsPartialPoint<T>(ILinks<T>, T) Возвращает значение, определяющее является ли связь с указанным индексом точкой частично (связью замкнутой на себе как минимум один раз). Declaration public static bool IsPartialPoint<T>(this ILinks<T> links, T link) Parameters Type Name Description ILinks <T> links Хранилище связей. T link Индекс проверяемой связи. Returns Type Description System.Boolean Значение, определяющее является ли связь точкой частично. Type Parameters Name Description T Remarks Достаточно любой одной ссылки на себя. Также в будущем можно будет проверять и всех родителей, чтобы проверить есть ли ссылки на себя (на эту связь). Merge<TLink>(ILinks<TLink>, TLink, TLink) Declaration public static TLink Merge<TLink>(this ILinks<TLink> links, TLink linkIndex, TLink newLink) Parameters Type Name Description ILinks <TLink> links TLink linkIndex TLink newLink Returns Type Description TLink Type Parameters Name Description TLink RunRandomCreations<TLink>(ILinks<TLink>, Int64) Declaration public static void RunRandomCreations<TLink>(this ILinks<TLink> links, long amountOfCreations) Parameters Type Name Description ILinks <TLink> links System.Int64 amountOfCreations Type Parameters Name Description TLink RunRandomDeletions<TLink>(ILinks<TLink>, Int64) Declaration public static void RunRandomDeletions<TLink>(this ILinks<TLink> links, long amountOfDeletions) Parameters Type Name Description ILinks <TLink> links System.Int64 amountOfDeletions Type Parameters Name Description TLink RunRandomSearches<TLink>(ILinks<TLink>, Int64) Declaration public static void RunRandomSearches<TLink>(this ILinks<TLink> links, long amountOfSearches) Parameters Type Name Description ILinks <TLink> links System.Int64 amountOfSearches Type Parameters Name Description TLink SearchOrDefault<TLink>(ILinks<TLink>, TLink, TLink) Выполняет поиск связи с указанными Source (началом) и Target (концом). Declaration public static TLink SearchOrDefault<TLink>(this ILinks<TLink> links, TLink source, TLink target) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source Индекс связи, которая является началом для искомой связи. TLink target Индекс связи, которая является концом для искомой связи. Returns Type Description TLink Индекс искомой связи с указанными Source (началом) и Target (концом). Type Parameters Name Description TLink Update<TLink>(ILinks<TLink>, TLink, TLink, TLink) Обновляет связь с указанными началом (Source) и концом (Target) на связь с указанными началом (NewSource) и концом (NewTarget). Declaration public static TLink Update<TLink>(this ILinks<TLink> links, TLink link, TLink newSource, TLink newTarget) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink link Индекс обновляемой связи. TLink newSource Индекс связи, которая является началом связи, на которую выполняется обновление. TLink newTarget Индекс связи, которая является концом связи, на которую выполняется обновление. Returns Type Description TLink Индекс обновлённой связи. Type Parameters Name Description TLink Update<TLink>(ILinks<TLink>, TLink[]) Обновляет связь с указанными началом (Source) и концом (Target) на связь с указанными началом (NewSource) и концом (NewTarget). Declaration public static TLink Update<TLink>(this ILinks<TLink> links, params TLink[] restrictions) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink[] restrictions Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Itself - требование установить ссылку на себя, 1..∞ конкретный адрес другой связи. Returns Type Description TLink Индекс обновлённой связи. Type Parameters Name Description TLink UpdateOrCreateOrGet<TLink>(ILinks<TLink>, TLink, TLink, TLink, TLink) Обновляет связь с указанными началом (Source) и концом (Target) на связь с указанными началом (NewSource) и концом (NewTarget). Declaration public static TLink UpdateOrCreateOrGet<TLink>(this ILinks<TLink> links, TLink source, TLink target, TLink newSource, TLink newTarget) Parameters Type Name Description ILinks <TLink> links Хранилище связей. TLink source Индекс связи, которая является началом обновляемой связи. TLink target Индекс связи, которая является концом обновляемой связи. TLink newSource Индекс связи, которая является началом связи, на которую выполняется обновление. TLink newTarget Индекс связи, которая является концом связи, на которую выполняется обновление. Returns Type Description TLink Индекс обновлённой связи. Type Parameters Name Description TLink UseUnicode(ILinks<UInt64>) Declaration public static void UseUnicode(this ILinks<ulong> links) Parameters Type Name Description ILinks < System.UInt64 > links"
  },
  "api/Platform.Tests.Helpers.MathExtensionsTests.html": {
    "href": "api/Platform.Tests.Helpers.MathExtensionsTests.html",
    "title": "Class MathExtensionsTests | LinksPlatform",
    "keywords": "Class MathExtensionsTests Inheritance System.Object MathExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class MathExtensionsTests Methods AbsTest() Declaration public void AbsTest() NegateTest() Declaration public void NegateTest()"
  },
  "api/Platform.Tests.Helpers.ScopeTests.html": {
    "href": "api/Platform.Tests.Helpers.ScopeTests.html",
    "title": "Class ScopeTests | LinksPlatform",
    "keywords": "Class ScopeTests Inheritance System.Object ScopeTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class ScopeTests Methods CascadeDependencyTest() Declaration public void CascadeDependencyTest() FullAutoResolutionTest() Declaration public void FullAutoResolutionTest() SingleDependencyTest() Declaration public void SingleDependencyTest()"
  },
  "api/Platform.Data.Core.Triplets.CharacterHelpers.CharacterMapping.html": {
    "href": "api/Platform.Data.Core.Triplets.CharacterHelpers.CharacterMapping.html",
    "title": "Enum CharacterHelpers.CharacterMapping | LinksPlatform",
    "keywords": "Enum CharacterHelpers.CharacterMapping Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public enum CharacterMapping : long Fields Name Description CyrillicAlphabet LatinAlphabet"
  },
  "api/Platform.Tests.EqualityTests.html": {
    "href": "api/Platform.Tests.EqualityTests.html",
    "title": "Class EqualityTests | LinksPlatform",
    "keywords": "Class EqualityTests Inheritance System.Object EqualityTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests Assembly : cs.temp.dll.dll Syntax public static class EqualityTests Methods EqualsPerfomanceTest() Declaration public static void EqualsPerfomanceTest()"
  },
  "api/Platform.Data.Core.Collections.Lists.html": {
    "href": "api/Platform.Data.Core.Collections.Lists.html",
    "title": "Namespace Platform.Data.Core.Collections.Lists | LinksPlatform",
    "keywords": "Namespace Platform.Data.Core.Collections.Lists Classes CircularDoublyLinkedListMethods<TElement> DoublyLinkedListMethodsBase<TElement> OpenDoublyLinkedListMethods<TElement>"
  },
  "api/Platform.Data.Core.Doublets.FrequencyPropertyOperator-1.html": {
    "href": "api/Platform.Data.Core.Doublets.FrequencyPropertyOperator-1.html",
    "title": "Class FrequencyPropertyOperator<TLink> | LinksPlatform",
    "keywords": "Class FrequencyPropertyOperator<TLink> Inheritance System.Object LinksOperatorBase <TLink> FrequencyPropertyOperator<TLink> Implements ISpecificPropertyOperator <TLink, TLink> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class FrequencyPropertyOperator<TLink> : LinksOperatorBase<TLink>, ISpecificPropertyOperator<TLink, TLink> Type Parameters Name Description TLink Constructors FrequencyPropertyOperator(ILinks<TLink>, TLink, TLink) Declaration public FrequencyPropertyOperator(ILinks<TLink> links, TLink frequencyPropertyMarker, TLink frequencyMarker) Parameters Type Name Description ILinks <TLink> links TLink frequencyPropertyMarker TLink frequencyMarker Methods Get(TLink) Declaration public TLink Get(TLink link) Parameters Type Name Description TLink link Returns Type Description TLink Set(TLink, TLink) Declaration public void Set(TLink link, TLink frequency) Parameters Type Name Description TLink link TLink frequency Implements ISpecificPropertyOperator<, >"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Cache.FrequenciesCacheBasedLinkToItsFrequencyNumberConverter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Cache.FrequenciesCacheBasedLinkToItsFrequencyNumberConverter-1.html",
    "title": "Class FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> | LinksPlatform",
    "keywords": "Class FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> Inheritance System.Object FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> Namespace : Platform.Data.Core.Sequences.Frequencies.Cache Assembly : cs.temp.dll.dll Syntax public class FrequenciesCacheBasedLinkToItsFrequencyNumberConverter<TLink> : IConverter<Doublet<TLink>, TLink> Type Parameters Name Description TLink Constructors FrequenciesCacheBasedLinkToItsFrequencyNumberConverter(LinkFrequenciesCache<TLink>) Declaration public FrequenciesCacheBasedLinkToItsFrequencyNumberConverter(LinkFrequenciesCache<TLink> cache) Parameters Type Name Description LinkFrequenciesCache <TLink> cache Methods Convert(Doublet<TLink>) Declaration public TLink Convert(Doublet<TLink> source) Parameters Type Name Description Doublet <TLink> source Returns Type Description TLink"
  },
  "api/Platform.Data.WebTerminal.Models.html": {
    "href": "api/Platform.Data.WebTerminal.Models.html",
    "title": "Namespace Platform.Data.WebTerminal.Models | LinksPlatform",
    "keywords": "Namespace Platform.Data.WebTerminal.Models Classes ErrorViewModel LinkModel"
  },
  "api/Platform.Tests.SystemTests.html": {
    "href": "api/Platform.Tests.SystemTests.html",
    "title": "Class SystemTests | LinksPlatform",
    "keywords": "Class SystemTests Contains tests for features of .NET Framework itself, that are required by current implementations. Inheritance System.Object SystemTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests Assembly : cs.temp.dll.dll Syntax public class SystemTests Methods PossiblePackTwoValuesIntoOneTest() Declaration public void PossiblePackTwoValuesIntoOneTest() UsingSupportsNullTest() Declaration public void UsingSupportsNullTest()"
  },
  "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.Transition.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.Transition.html",
    "title": "Struct UInt64LinksTransactionsLayer.Transition | LinksPlatform",
    "keywords": "Struct UInt64LinksTransactionsLayer.Transition Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public struct Transition Constructors Transition(UniqueTimestampFactory, UInt64, UInt64Link, UInt64Link) Declaration public Transition(UniqueTimestampFactory uniqueTimestampFactory, ulong transactionId, UInt64Link before = default(UInt64Link), UInt64Link after = default(UInt64Link)) Parameters Type Name Description UniqueTimestampFactory uniqueTimestampFactory System.UInt64 transactionId UInt64Link before UInt64Link after Fields After Declaration public UInt64Link After Field Value Type Description UInt64Link Before Declaration public UInt64Link Before Field Value Type Description UInt64Link Size Declaration public static readonly long Size Field Value Type Description System.Int64 Timestamp Declaration public Timestamp Timestamp Field Value Type Description Timestamp TransactionId Declaration public ulong TransactionId Field Value Type Description System.UInt64 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/Platform.Sandbox.Zadacha.html": {
    "href": "api/Platform.Sandbox.Zadacha.html",
    "title": "Class Zadacha | LinksPlatform",
    "keywords": "Class Zadacha Inheritance System.Object Zadacha Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Zadacha Fields StepsFor7DigitPhoneNumbers Declaration public const int StepsFor7DigitPhoneNumbers = 6 Field Value Type Description System.Int32 Methods RunAll() Declaration public void RunAll() RunOne() Declaration public void RunOne()"
  },
  "api/Platform.Data.Core.Doublets.ILinksDecisionConstants-1.html": {
    "href": "api/Platform.Data.Core.Doublets.ILinksDecisionConstants-1.html",
    "title": "Interface ILinksDecisionConstants<TDecision> | LinksPlatform",
    "keywords": "Interface ILinksDecisionConstants<TDecision> Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public interface ILinksDecisionConstants<TDecision> Type Parameters Name Description TDecision Properties Break Возвращает булевское значение, обозначающее остановку прохода по связям. Declaration TDecision Break { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each. Continue Возвращает булевское значение, обозначающее продолжение прохода по связям. Declaration TDecision Continue { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each."
  },
  "api/Platform.Tests.Helpers.ArithmeticExtensionsTests.html": {
    "href": "api/Platform.Tests.Helpers.ArithmeticExtensionsTests.html",
    "title": "Class ArithmeticExtensionsTests | LinksPlatform",
    "keywords": "Class ArithmeticExtensionsTests Inheritance System.Object ArithmeticExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Helpers Assembly : cs.temp.dll.dll Syntax public class ArithmeticExtensionsTests Methods DecrementTest() Declaration public void DecrementTest() IncrementTest() Declaration public void IncrementTest()"
  },
  "api/Platform.Data.Core.Doublets.LinkFrequencyIncrementer-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinkFrequencyIncrementer-1.html",
    "title": "Class LinkFrequencyIncrementer<TLink> | LinksPlatform",
    "keywords": "Class LinkFrequencyIncrementer<TLink> Inheritance System.Object LinksOperatorBase <TLink> LinkFrequencyIncrementer<TLink> Implements IIncrementer < System.Collections.Generic.IList <TLink>> Inherited Members LinksOperatorBase<TLink>.Links System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinkFrequencyIncrementer<TLink> : LinksOperatorBase<TLink>, IIncrementer<IList<TLink>> Type Parameters Name Description TLink Constructors LinkFrequencyIncrementer(ILinks<TLink>, ISpecificPropertyOperator<TLink, TLink>, IIncrementer<TLink>) Declaration public LinkFrequencyIncrementer(ILinks<TLink> links, ISpecificPropertyOperator<TLink, TLink> frequencyPropertyOperator, IIncrementer<TLink> frequencyIncrementer) Parameters Type Name Description ILinks <TLink> links ISpecificPropertyOperator <TLink, TLink> frequencyPropertyOperator IIncrementer <TLink> frequencyIncrementer Methods Increment(TLink) Declaration public void Increment(TLink link) Parameters Type Name Description TLink link Increment(IList<TLink>) Declaration public IList<TLink> Increment(IList<TLink> sequence) Parameters Type Name Description System.Collections.Generic.IList <TLink> sequence Returns Type Description System.Collections.Generic.IList <TLink> Remarks Sequence itseft is not changed, only frequency of its doublets is incremented. Implements IIncrementer<>"
  },
  "api/Platform.Examples.WikipediaImporterCLI.html": {
    "href": "api/Platform.Examples.WikipediaImporterCLI.html",
    "title": "Class WikipediaImporterCLI | LinksPlatform",
    "keywords": "Class WikipediaImporterCLI Inheritance System.Object WikipediaImporterCLI Implements ICommandLineInterface Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Examples Assembly : cs.temp.dll.dll Syntax public class WikipediaImporterCLI : ICommandLineInterface Methods Run(String[]) Declaration public void Run(params string[] args) Parameters Type Name Description System.String [] args Implements ICommandLineInterface"
  },
  "api/Platform.Data.Core.Exceptions.ArgumentLinkDoesNotExistsException-1.html": {
    "href": "api/Platform.Data.Core.Exceptions.ArgumentLinkDoesNotExistsException-1.html",
    "title": "Class ArgumentLinkDoesNotExistsException<TLink> | LinksPlatform",
    "keywords": "Class ArgumentLinkDoesNotExistsException<TLink> Inheritance System.Object System.Exception System.SystemException System.ArgumentException ArgumentLinkDoesNotExistsException<TLink> Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.ArgumentException.Message System.ArgumentException.ParamName System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetType() System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Exceptions Assembly : cs.temp.dll.dll Syntax public class ArgumentLinkDoesNotExistsException<TLink> : ArgumentException, ISerializable, _Exception Type Parameters Name Description TLink Remarks TODO: Multilingual support for messages formats. Constructors ArgumentLinkDoesNotExistsException(TLink) Declaration public ArgumentLinkDoesNotExistsException(TLink link) Parameters Type Name Description TLink link ArgumentLinkDoesNotExistsException(TLink, String) Declaration public ArgumentLinkDoesNotExistsException(TLink link, string paramName) Parameters Type Name Description TLink link System.String paramName Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Platform.Data.Core.Triplets.Link.DeletedDelegate.html": {
    "href": "api/Platform.Data.Core.Triplets.Link.DeletedDelegate.html",
    "title": "Delegate Link.DeletedDelegate | LinksPlatform",
    "keywords": "Delegate Link.DeletedDelegate Namespace : Platform.Data.Core.Triplets Assembly : cs.temp.dll.dll Syntax public delegate void DeletedDelegate(LinkDefinition deletedLink); Parameters Type Name Description LinkDefinition deletedLink"
  },
  "api/Platform.Tests.Data.Core.LinksTests.html": {
    "href": "api/Platform.Tests.Data.Core.LinksTests.html",
    "title": "Class LinksTests | LinksPlatform",
    "keywords": "Class LinksTests Inheritance System.Object LinksTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public class LinksTests Methods BasicTransactionLogTest() Declaration public void BasicTransactionLogTest() Bug1Test() Declaration public void Bug1Test() CascadeUpdateTest() Declaration public void CascadeUpdateTest() Create64BillionLinks() Declaration public static void Create64BillionLinks() Create64BillionLinksInParallel() Declaration public static void Create64BillionLinksInParallel() GetSourceInParallel() Declaration public void GetSourceInParallel() GetSourceTest() Declaration public void GetSourceTest() MultipleCreateAndDeleteTest() Declaration public void MultipleCreateAndDeleteTest() PathsTest() Declaration public void PathsTest() RecursiveStringFormattingTest() Declaration public void RecursiveStringFormattingTest() TestDeletionOfAllLinks() Declaration public static void TestDeletionOfAllLinks() TestEach() Declaration public void TestEach() TestGetTarget() Declaration public void TestGetTarget() TestGetTargetInParallel() Declaration public void TestGetTargetInParallel() TestRandomSearchAll() Declaration public void TestRandomSearchAll() TransactionAutoRevertedTest() Declaration public void TransactionAutoRevertedTest() TransactionCommit() Declaration public void TransactionCommit() TransactionDamage() Declaration public void TransactionDamage() TransactionUserCodeErrorNoDataSavedTest() Declaration public void TransactionUserCodeErrorNoDataSavedTest() TransactionUserCodeErrorSomeDataSavedTest() Declaration public void TransactionUserCodeErrorSomeDataSavedTest()"
  },
  "api/Platform.Sandbox.FileReadWriteTest.html": {
    "href": "api/Platform.Sandbox.FileReadWriteTest.html",
    "title": "Class FileReadWriteTest | LinksPlatform",
    "keywords": "Class FileReadWriteTest Inheritance System.Object FileReadWriteTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class FileReadWriteTest Methods MappedFilesTest() Declaration public static void MappedFilesTest() Run(String[]) Declaration public static void Run(string[] args) Parameters Type Name Description System.String [] args SmartTextParsing(Char[], Int32, Int32) Declaration public static Link SmartTextParsing(char[] text, int takeFrom, int takeUntil) Parameters Type Name Description System.Char [] text System.Int32 takeFrom System.Int32 takeUntil Returns Type Description Link"
  },
  "api/Platform.Data.Core.Doublets.LinksConstants-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksConstants-1.html",
    "title": "Class LinksConstants<TDecision> | LinksPlatform",
    "keywords": "Class LinksConstants<TDecision> Inheritance System.Object LinksConstants<TDecision> LinksConstants<TDecision, TAddress> Implements ILinksDecisionConstants <TDecision> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksConstants<TDecision> : ILinksDecisionConstants<TDecision> Type Parameters Name Description TDecision Remarks Возможно каждая константа должна иметь своё уникальное значение (которое можно отсчитывать от конца доступных значений), например (ulong.MaxValue - 1) и т.п. TODO: Должна быть возможность переопределить константы, т.е. нужен интерфейс. ILinksConstants Properties Break Возвращает булевское значение, обозначающее остановку прохода по связям. Declaration public TDecision Break { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each. Continue Возвращает булевское значение, обозначающее продолжение прохода по связям. Declaration public TDecision Continue { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each. Implements ILinksDecisionConstants<TDecision>"
  },
  "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.Transaction.html": {
    "href": "api/Platform.Data.Core.Doublets.UInt64LinksTransactionsLayer.Transaction.html",
    "title": "Class UInt64LinksTransactionsLayer.Transaction | LinksPlatform",
    "keywords": "Class UInt64LinksTransactionsLayer.Transaction Inheritance System.Object UInt64LinksTransactionsLayer.Transaction Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class Transaction : DisposableBase Remarks Другие варианты реализации транзакций (атомарности): Разделение хранения значения связи ((Source Target) или (Source Linker Target)) и индексов. Хранение трансформаций/операций в отдельном хранилище Links, но дополнительно потребуется решить вопрос со ссылками на внешние идентификаторы, или как-то иначе решить вопрос с пересечениями идентификаторов. Где хранить промежуточный список транзакций? В оперативной памяти: Минусы: Может усложнить систему, если она будет функционировать самостоятельно, так как нужно отдельно выделять память под список трансформаций. Выделенной оперативной памяти может не хватить, в том случае, если транзакция использует слишком много трансформаций. -> Можно использовать жёсткий диск для слишком длинных транзакций. -> Максимальный размер списка трансформаций можно ограничить / задать константой. При подтверждении транзакции (Commit) все трансформации записываются разом создавая задержку. На жёстком диске: Минусы: Длительный отклик, на запись каждой трансформации. Лог транзакций дополнительно наполняется отменёнными транзакциями. -> Это может решаться упаковкой/исключением дублирующих операций. -> Также это может решаться тем, что короткие транзакции вообще не будут записываться в случае отката. Перед тем как выполнять отмену операций транзакции нужно дождаться пока все операции (трансформации) будут записаны в лог. Constructors Transaction(UInt64LinksTransactionsLayer) Declaration public Transaction(UInt64LinksTransactionsLayer layer) Parameters Type Name Description UInt64LinksTransactionsLayer layer Properties IsCommitted Declaration public bool IsCommitted { get; } Property Value Type Description System.Boolean IsReverted Declaration public bool IsReverted { get; } Property Value Type Description System.Boolean Methods Commit() Declaration public void Commit() DisposeCore(Boolean, Boolean) Declaration protected override void DisposeCore(bool manual, bool wasDisposed) Parameters Type Name Description System.Boolean manual System.Boolean wasDisposed EnsureTransactionAllowsWriteOperations(UInt64LinksTransactionsLayer.Transaction) Declaration public static void EnsureTransactionAllowsWriteOperations(UInt64LinksTransactionsLayer.Transaction transaction) Parameters Type Name Description UInt64LinksTransactionsLayer.Transaction transaction SetCurrentTransaction(UInt64LinksTransactionsLayer, UInt64LinksTransactionsLayer.Transaction) Declaration public static void SetCurrentTransaction(UInt64LinksTransactionsLayer layer, UInt64LinksTransactionsLayer.Transaction transaction) Parameters Type Name Description UInt64LinksTransactionsLayer layer UInt64LinksTransactionsLayer.Transaction transaction"
  },
  "api/Platform.Data.Core.Doublets.LinksCascadeDependenciesResolver-1.html": {
    "href": "api/Platform.Data.Core.Doublets.LinksCascadeDependenciesResolver-1.html",
    "title": "Class LinksCascadeDependenciesResolver<TLink> | LinksPlatform",
    "keywords": "Class LinksCascadeDependenciesResolver<TLink> Inheritance System.Object LinksDecoratorBase <TLink> LinksCascadeDependenciesResolver<TLink> Implements ILinks <TLink> Inherited Members LinksDecoratorBase<TLink>.Constants LinksDecoratorBase<TLink>.Links LinksDecoratorBase<TLink>.Count(IList<TLink>) LinksDecoratorBase<TLink>.Each(Func<IList<TLink>, TLink>, IList<TLink>) LinksDecoratorBase<TLink>.Create() LinksDecoratorBase<TLink>.Update(IList<TLink>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Data.Core.Doublets Assembly : cs.temp.dll.dll Syntax public class LinksCascadeDependenciesResolver<TLink> : LinksDecoratorBase<TLink>, ILinks<TLink> Type Parameters Name Description TLink Constructors LinksCascadeDependenciesResolver(ILinks<TLink>) Declaration public LinksCascadeDependenciesResolver(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods Delete(TLink) Declaration public override void Delete(TLink link) Parameters Type Name Description TLink link Overrides Platform.Data.Core.Doublets.LinksDecoratorBase<TLink>.Delete(TLink) EnsureNoDependenciesOnDelete(TLink) Declaration public void EnsureNoDependenciesOnDelete(TLink link) Parameters Type Name Description TLink link Implements ILinks<TLink>"
  },
  "api/Platform.Sandbox.CompressionExperiments.html": {
    "href": "api/Platform.Sandbox.CompressionExperiments.html",
    "title": "Class CompressionExperiments | LinksPlatform",
    "keywords": "Class CompressionExperiments Inheritance System.Object CompressionExperiments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public static class CompressionExperiments Methods PrecompressSequence1(SynchronizedLinks<UInt64>, UInt64[]) Declaration public static ulong[] PrecompressSequence1(this SynchronizedLinks<ulong> links, ulong[] sequence) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Slow version (doublets' frequencies dictionary is recreated). PrecompressSequence2(SynchronizedLinks<UInt64>, UInt64[]) Declaration public static ulong[] PrecompressSequence2(this SynchronizedLinks<ulong> links, ulong[] sequence) Parameters Type Name Description SynchronizedLinks < System.UInt64 > links System.UInt64 [] sequence Returns Type Description System.UInt64 [] Remarks Original algorithm idea: https://en.wikipedia.org/wiki/Byte_pair_encoding . Faster version (doublets' frequencies dictionary is not recreated). Stats() Declaration public static void Stats() Test() Declaration public static void Test()"
  },
  "api/Platform.Sandbox.html": {
    "href": "api/Platform.Sandbox.html",
    "title": "Namespace Platform.Sandbox | LinksPlatform",
    "keywords": "Namespace Platform.Sandbox Classes A Base CompressionExperiments ConceptTest ConsolePrintedDublicateWalkerBase DllImportTest Представляет тест, который позволит определить необходимо ли указывать расширение файла при подключении библиотеки. TODO: Проверить на пользовательских DLL TODO: Далее протестировать на CoreCLR, Mono FileReadWriteTest Inherited IterationsCounter NetParser NetParserTest OperationsExperiments Program QueryExecutorExtensions Представляет класс-контейнер расширений для выполнения произвольных запросов над Links StaticBase<TSuccessor> TerminalExperiment TextParser TextParser.State Transactions TreeStructureExperiments Walker1 Walker2 Walker3 Walker4 Zadacha Structs CompressionExperiments.Compressor Enums OperationsExperiments.Mapping"
  },
  "api/Platform.Data.Core.Sequences.RightSequenceWalker-1.html": {
    "href": "api/Platform.Data.Core.Sequences.RightSequenceWalker-1.html",
    "title": "Class RightSequenceWalker<TLink> | LinksPlatform",
    "keywords": "Class RightSequenceWalker<TLink> Inheritance System.Object SequenceWalkerBase <TLink> RightSequenceWalker<TLink> Sequences.Matcher Sequences.PatternMatcher Implements ISequenceWalker <TLink> Inherited Members SequenceWalkerBase<TLink>.Walk(TLink) SequenceWalkerBase<TLink>.IsElement(IList<TLink>) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class RightSequenceWalker<TLink> : SequenceWalkerBase<TLink>, ISequenceWalker<TLink> Type Parameters Name Description TLink Constructors RightSequenceWalker(ILinks<TLink>) Declaration public RightSequenceWalker(ILinks<TLink> links) Parameters Type Name Description ILinks <TLink> links Methods GetNextElementAfterPop(IList<TLink>) Declaration protected override IList<TLink> GetNextElementAfterPop(IList<TLink> element) Parameters Type Name Description System.Collections.Generic.IList <TLink> element Returns Type Description System.Collections.Generic.IList <TLink> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.GetNextElementAfterPop(System.Collections.Generic.IList<TLink>) GetNextElementAfterPush(IList<TLink>) Declaration protected override IList<TLink> GetNextElementAfterPush(IList<TLink> element) Parameters Type Name Description System.Collections.Generic.IList <TLink> element Returns Type Description System.Collections.Generic.IList <TLink> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.GetNextElementAfterPush(System.Collections.Generic.IList<TLink>) WalkContents(IList<TLink>) Declaration protected override IEnumerable<IList<TLink>> WalkContents(IList<TLink> element) Parameters Type Name Description System.Collections.Generic.IList <TLink> element Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.IList <TLink>> Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<TLink>.WalkContents(System.Collections.Generic.IList<TLink>) Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Core.Sequences.Sequences.Matcher.html": {
    "href": "api/Platform.Data.Core.Sequences.Sequences.Matcher.html",
    "title": "Class Sequences.Matcher | LinksPlatform",
    "keywords": "Class Sequences.Matcher Inheritance System.Object SequenceWalkerBase < System.UInt64 > RightSequenceWalker < System.UInt64 > Sequences.Matcher Implements ISequenceWalker < System.UInt64 > Inherited Members RightSequenceWalker<UInt64>.GetNextElementAfterPop(IList<UInt64>) RightSequenceWalker<UInt64>.GetNextElementAfterPush(IList<UInt64>) RightSequenceWalker<UInt64>.WalkContents(IList<UInt64>) SequenceWalkerBase<UInt64>.Walk(UInt64) Namespace : Platform.Data.Core.Sequences Assembly : cs.temp.dll.dll Syntax public class Matcher : RightSequenceWalker<ulong>, ISequenceWalker<ulong> Constructors Matcher(Sequences, IList<LinkIndex>, HashSet<LinkIndex>, Func<LinkIndex, Boolean>, HashSet<LinkIndex>) Declaration public Matcher(Sequences sequences, IList<LinkIndex> patternSequence, HashSet<LinkIndex> results, Func<LinkIndex, bool> stopableHandler, HashSet<LinkIndex> readAsElements = null) Parameters Type Name Description Sequences sequences System.Collections.Generic.IList < LinkIndex > patternSequence HashSet < LinkIndex > results System.Func < LinkIndex , System.Boolean > stopableHandler HashSet < LinkIndex > readAsElements Methods AddAllPartialMatchedToResults(IEnumerable<UInt64>) Declaration public void AddAllPartialMatchedToResults(IEnumerable<ulong> sequencesToMatch) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.UInt64 > sequencesToMatch AddAllPartialMatchedToResultsAndReadAsElements(IEnumerable<UInt64>) Declaration public void AddAllPartialMatchedToResultsAndReadAsElements(IEnumerable<ulong> sequencesToMatch) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.UInt64 > sequencesToMatch AddFullMatchedToResults(UInt64) Declaration public void AddFullMatchedToResults(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch AddPartialMatchedToResults(UInt64) Declaration public void AddPartialMatchedToResults(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch FullMatch(LinkIndex) Declaration public bool FullMatch(LinkIndex sequenceToMatch) Parameters Type Name Description LinkIndex sequenceToMatch Returns Type Description System.Boolean HandleFullMatched(UInt64) Declaration public bool HandleFullMatched(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch Returns Type Description System.Boolean HandleFullMatchedSequence(UInt64) Declaration public bool HandleFullMatchedSequence(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch Returns Type Description System.Boolean HandlePartialMatched(UInt64) Declaration public bool HandlePartialMatched(ulong sequenceToMatch) Parameters Type Name Description System.UInt64 sequenceToMatch Returns Type Description System.Boolean IsElement(IList<UInt64>) Declaration protected override bool IsElement(IList<ulong> link) Parameters Type Name Description System.Collections.Generic.IList < System.UInt64 > link Returns Type Description System.Boolean Overrides Platform.Data.Core.Sequences.SequenceWalkerBase<System.UInt64>.IsElement(System.Collections.Generic.IList<System.UInt64>) PartialMatch(LinkIndex) Declaration public bool PartialMatch(LinkIndex sequenceToMatch) Parameters Type Name Description LinkIndex sequenceToMatch Returns Type Description System.Boolean Remarks TODO: Add support for LinksConstants.Any Implements ISequenceWalker<TLink>"
  },
  "api/Platform.Sandbox.Program.html": {
    "href": "api/Platform.Sandbox.Program.html",
    "title": "Class Program | LinksPlatform",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Sandbox Assembly : cs.temp.dll.dll Syntax public class Program Methods Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/Platform.Data.Core.Sequences.Frequencies.Counters.MarkedSequenceSymbolFrequencyOneOffCounter-1.html": {
    "href": "api/Platform.Data.Core.Sequences.Frequencies.Counters.MarkedSequenceSymbolFrequencyOneOffCounter-1.html",
    "title": "Class MarkedSequenceSymbolFrequencyOneOffCounter<TLink> | LinksPlatform",
    "keywords": "Class MarkedSequenceSymbolFrequencyOneOffCounter<TLink> Inheritance System.Object SequenceSymbolFrequencyOneOffCounter <TLink> MarkedSequenceSymbolFrequencyOneOffCounter<TLink> Inherited Members SequenceSymbolFrequencyOneOffCounter<TLink>._links SequenceSymbolFrequencyOneOffCounter<TLink>._sequenceLink SequenceSymbolFrequencyOneOffCounter<TLink>._symbol SequenceSymbolFrequencyOneOffCounter<TLink>._total Namespace : Platform.Data.Core.Sequences.Frequencies.Counters Assembly : cs.temp.dll.dll Syntax public class MarkedSequenceSymbolFrequencyOneOffCounter<TLink> : SequenceSymbolFrequencyOneOffCounter<TLink> Type Parameters Name Description TLink Constructors MarkedSequenceSymbolFrequencyOneOffCounter(ILinks<TLink>, ICreteriaMatcher<TLink>, TLink, TLink) Declaration public MarkedSequenceSymbolFrequencyOneOffCounter(ILinks<TLink> links, ICreteriaMatcher<TLink> markedSequenceMatcher, TLink sequenceLink, TLink symbol) Parameters Type Name Description ILinks <TLink> links ICreteriaMatcher <TLink> markedSequenceMatcher TLink sequenceLink TLink symbol Methods Count() Declaration public override TLink Count() Returns Type Description TLink Overrides Platform.Data.Core.Sequences.Frequencies.Counters.SequenceSymbolFrequencyOneOffCounter<TLink>.Count()"
  },
  "api/Platform.Tests.Data.Core.DoubletLinksTests.html": {
    "href": "api/Platform.Tests.Data.Core.DoubletLinksTests.html",
    "title": "Class DoubletLinksTests | LinksPlatform",
    "keywords": "Class DoubletLinksTests Inheritance System.Object DoubletLinksTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Platform.Tests.Data.Core Assembly : cs.temp.dll.dll Syntax public static class DoubletLinksTests Methods UInt16CRUDTest() Declaration public static void UInt16CRUDTest() UInt16RawNumbersCRUDTest() Declaration public static void UInt16RawNumbersCRUDTest() UInt32CRUDTest() Declaration public static void UInt32CRUDTest() UInt32RawNumbersCRUDTest() Declaration public static void UInt32RawNumbersCRUDTest() UInt64CRUDTest() Declaration public static void UInt64CRUDTest() UInt64RawNumbersCRUDTest() Declaration public static void UInt64RawNumbersCRUDTest() UInt8CRUDTest() Declaration public static void UInt8CRUDTest() UInt8RawNumbersCRUDTest() Declaration public static void UInt8RawNumbersCRUDTest()"
  }
}